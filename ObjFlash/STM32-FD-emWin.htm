<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\ObjFlash\STM32-FD-emWin.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\ObjFlash\STM32-FD-emWin.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Sat Mar 29 11:41:37 2014
<BR><P>
<H3>Maximum Stack Usage =        816 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
GUIDEMO_Automotive &rArr; _AutomotiveDemo &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[213f52c]">Reset_Handler</a>
 <LI><a href="#[213f5a4]">__user_initial_stackheap</a>
 <LI><a href="#[2cb06d0]">OS_CPU_SR_Save</a>
 <LI><a href="#[2cb070c]">OS_CPU_SR_Restore</a>
 <LI><a href="#[2ca2300]">OSStartHighRdy</a>
 <LI><a href="#[2ca22c4]">OSCtxSw</a>
 <LI><a href="#[2ca2288]">OSIntCtxSw</a>
 <LI><a href="#[213efc8]">OSPendSV</a>
 <LI><a href="#[21379e4]">CPU_IntDis</a>
 <LI><a href="#[2ca2030]">CPU_IntEn</a>
 <LI><a href="#[2185a54]">CPU_SR_Save</a>
 <LI><a href="#[2185a18]">CPU_SR_Restore</a>
 <LI><a href="#[213f7c0]">NMIException</a>
 <LI><a href="#[213f784]">HardFaultException</a>
 <LI><a href="#[213f748]">MemManageException</a>
 <LI><a href="#[213f70c]">BusFaultException</a>
 <LI><a href="#[213f6d0]">UsageFaultException</a>
 <LI><a href="#[213f694]">DebugMonitor</a>
 <LI><a href="#[213f658]">SVCHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[33664f8]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33664f8]">WM__InvalidateRect</a><BR>
 <LI><a href="#[3366750]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3366750]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[3366570]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3366570]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[32bf284]">WM__SendMessage</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f3d3c8]">WM_DefaultProc</a><BR>
 <LI><a href="#[3560048]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3560048]">WM__ForEachDesc</a><BR>
 <LI><a href="#[3360738]">WM_ResizeWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3369630]">WM__UpdateChildPositions</a><BR>
 <LI><a href="#[3504d08]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3504d08]">_MoveDescendents</a><BR>
 <LI><a href="#[3367f38]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3367f38]">_Findy1</a><BR>
 <LI><a href="#[3367fb0]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3367fb0]">_Findx1</a><BR>
 <LI><a href="#[3368028]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3368028]">_Findx0</a><BR>
 <LI><a href="#[3368190]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f3d38c]">WM_DeleteWindow</a><BR>
 <LI><a href="#[336498c]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[336498c]">_GetDialogItem</a><BR>
 <LI><a href="#[3506220]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3506220]">_GetDialogItem</a><BR>
 <LI><a href="#[3367ce0]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3367ce0]">_PaintTransChildren</a><BR>
 <LI><a href="#[33d343c]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33d343c]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[327c918]">_RemoveStaticDevice</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[327c918]">_RemoveStaticDevice</a><BR>
 <LI><a href="#[3486084]">_GetWindowDevice</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3486084]">_GetWindowDevice</a><BR>
 <LI><a href="#[3486174]">_CreateStatic</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3486174]">_CreateStatic</a><BR>
 <LI><a href="#[355e98c]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[355e98c]">_Screen2hWin</a><BR>
 <LI><a href="#[213f7c0]">NMIException</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[213f7c0]">NMIException</a><BR>
 <LI><a href="#[213f784]">HardFaultException</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[213f784]">HardFaultException</a><BR>
 <LI><a href="#[213f748]">MemManageException</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[213f748]">MemManageException</a><BR>
 <LI><a href="#[213f70c]">BusFaultException</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[213f70c]">BusFaultException</a><BR>
 <LI><a href="#[213f6d0]">UsageFaultException</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[213f6d0]">UsageFaultException</a><BR>
 <LI><a href="#[213f694]">DebugMonitor</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[213f694]">DebugMonitor</a><BR>
 <LI><a href="#[213f658]">SVCHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[213f658]">SVCHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2f3beb0]">_GetAngle_0</a>
 <LI><a href="#[2f3be74]">_GetAngle_1</a>
 <LI><a href="#[2f3bf28]">_Draw_0</a>
 <LI><a href="#[2f3beec]">_Draw_1</a>
 <LI><a href="#[2f38940]">GUIDEMO_Skinning</a>
 <LI><a href="#[2f38a6c]">GUIDEMO_Fading</a>
 <LI><a href="#[2f388c8]">GUIDEMO_TransparentDialog</a>
 <LI><a href="#[2f38814]">GUIDEMO_WashingMachine</a>
 <LI><a href="#[2f389f4]">GUIDEMO_IconView</a>
 <LI><a href="#[2f389b8]">GUIDEMO_ImageFlow</a>
 <LI><a href="#[2f3888c]">GUIDEMO_Treeview</a>
 <LI><a href="#[2f3897c]">GUIDEMO_Listview</a>
 <LI><a href="#[2f38850]">GUIDEMO_VScreen</a>
 <LI><a href="#[2f38a30]">GUIDEMO_Graph</a>
 <LI><a href="#[2f38904]">GUIDEMO_Speed</a>
 <LI><a href="#[2f39354]">GUIDEMO_Bitmap</a>
 <LI><a href="#[2f38aa8]">GUIDEMO_Cursor</a>
 <LI><a href="#[2f38f58]">GUIDEMO_ColorBar</a>
 <LI><a href="#[2f3bcd0]">GUIDEMO_Automotive</a>
 <LI><a href="#[2f3a308]">GUIDEMO_BarGraph</a>
 <LI><a href="#[2f36e10]">_AddData_Heartbeat</a>
 <LI><a href="#[2f36dd4]">_AddData_Sine</a>
 <LI><a href="#[3182dc8]">GUIPROP_EXT__ClearLine</a>
 <LI><a href="#[32c7f24]">_OnTouchDefault</a>
 <LI><a href="#[32c68e0]">_Paint</a>
 <LI><a href="#[32c6958]">_Create</a>
 <LI><a href="#[32c5a58]">_Paint</a>
 <LI><a href="#[32c5ad0]">_Create</a>
 <LI><a href="#[32c2f74]">_Paint</a>
 <LI><a href="#[32c2fec]">_Create</a>
 <LI><a href="#[32bf5cc]">FRAMEWIN__GetBorderSize</a>
 <LI><a href="#[32bd484]">_GetBorderSize</a>
 <LI><a href="#[2f3e214]">FRAMEWIN_DrawSkinFlex</a>
 <LI><a href="#[32bd40c]">_Paint</a>
 <LI><a href="#[32bd4fc]">_Create</a>
 <LI><a href="#[3321ccc]">_Paint</a>
 <LI><a href="#[3321d44]">_Create</a>
 <LI><a href="#[3319464]">_Paint</a>
 <LI><a href="#[33194dc]">_Create</a>
 <LI><a href="#[3317f4c]">_Paint</a>
 <LI><a href="#[3317fc4]">_Create</a>
 <LI><a href="#[33170c4]">_Paint</a>
 <LI><a href="#[331713c]">_Create</a>
 <LI><a href="#[3315dc8]">_Paint</a>
 <LI><a href="#[3315e40]">_Create</a>
 <LI><a href="#[33cf224]">_GetCursorPosX</a>
 <LI><a href="#[33cf29c]">_GetCursorPosChar</a>
 <LI><a href="#[33cf314]">_GetCursorCharacter</a>
 <LI><a href="#[33caae4]">_Log2VisBuffered</a>
 <LI><a href="#[2178df4]">GUI_X_ExecIdle</a>
 <LI><a href="#[3482c40]">CHECKBOX__GetButtonSize</a>
 <LI><a href="#[34806c0]">_GetBorderSize</a>
 <LI><a href="#[3317b50]">RADIO__GetButtonSize</a>
 <LI><a href="#[34f8990]">_GetButtonSize</a>
 <LI><a href="#[3562550]">_GetButtonSize</a>
 <LI><a href="#[355e284]">_GetWordWrap</a>
 <LI><a href="#[355e2fc]">_GetCharWrap</a>
 <LI><a href="#[213f52c]">Reset_Handler</a>
 <LI><a href="#[213f7c0]">NMIException</a>
 <LI><a href="#[213f784]">HardFaultException</a>
 <LI><a href="#[213f748]">MemManageException</a>
 <LI><a href="#[213f70c]">BusFaultException</a>
 <LI><a href="#[213f6d0]">UsageFaultException</a>
 <LI><a href="#[213f658]">SVCHandler</a>
 <LI><a href="#[213f694]">DebugMonitor</a>
 <LI><a href="#[213efc8]">OSPendSV</a>
 <LI><a href="#[213ee24]">SysTickHandler</a>
 <LI><a href="#[213eaa0]">WWDG_IRQHandler</a>
 <LI><a href="#[213ef8c]">PVD_IRQHandler</a>
 <LI><a href="#[213ede8]">TAMPER_IRQHandler</a>
 <LI><a href="#[213eed8]">RTC_IRQHandler</a>
 <LI><a href="#[213f0f4]">FLASH_IRQHandler</a>
 <LI><a href="#[213ef50]">RCC_IRQHandler</a>
 <LI><a href="#[213f298]">EXTI0_IRQHandler</a>
 <LI><a href="#[213f220]">EXTI1_IRQHandler</a>
 <LI><a href="#[213f1e4]">EXTI2_IRQHandler</a>
 <LI><a href="#[213f1a8]">EXTI3_IRQHandler</a>
 <LI><a href="#[213f16c]">EXTI4_IRQHandler</a>
 <LI><a href="#[213f43c]">DMAChannel1_IRQHandler</a>
 <LI><a href="#[213f400]">DMAChannel2_IRQHandler</a>
 <LI><a href="#[213f3c4]">DMAChannel3_IRQHandler</a>
 <LI><a href="#[213f388]">DMAChannel4_IRQHandler</a>
 <LI><a href="#[213f34c]">DMAChannel5_IRQHandler</a>
 <LI><a href="#[213f310]">DMAChannel6_IRQHandler</a>
 <LI><a href="#[213f2d4]">DMAChannel7_IRQHandler</a>
 <LI><a href="#[213f4f0]">ADC_IRQHandler</a>
 <LI><a href="#[213eb18]">USB_HP_CAN_TX_IRQHandler</a>
 <LI><a href="#[213eadc]">USB_LP_CAN_RX0_IRQHandler</a>
 <LI><a href="#[213f4b4]">CAN_RX1_IRQHandler</a>
 <LI><a href="#[213f478]">CAN_SCE_IRQHandler</a>
 <LI><a href="#[213f130]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[213edac]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[213ecf8]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[213ed34]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[213ed70]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[213ecbc]">TIM2_IRQHandler</a>
 <LI><a href="#[213ec80]">TIM3_IRQHandler</a>
 <LI><a href="#[213ec44]">TIM4_IRQHandler</a>
 <LI><a href="#[213f07c]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[213f0b8]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[213f004]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[213f040]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[213ee9c]">SPI1_IRQHandler</a>
 <LI><a href="#[213ee60]">SPI2_IRQHandler</a>
 <LI><a href="#[213ec08]">USART1_IRQHandler</a>
 <LI><a href="#[213ebcc]">USART2_IRQHandler</a>
 <LI><a href="#[213eb90]">USART3_IRQHandler</a>
 <LI><a href="#[213f25c]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[213ef14]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[213eb54]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[366a2e4]">__main</a>
 <LI><a href="#[2ca2954]">OSTaskSwHook</a>
 <LI><a href="#[2cb07c0]">OSIntExit</a>
 <LI><a href="#[3666d38]">_sputc</a>
 <LI><a href="#[3666ea0]">_printf_input_char</a>
 <LI><a href="#[3661be4]">__I$use$semihosting</a>
 <LI><a href="#[213d18c]">AppTaskUserIF</a>
 <LI><a href="#[213d1c8]">AppTaskKbd</a>
 <LI><a href="#[30d2b68]">BUTTON_Callback</a>
 <LI><a href="#[32c7eac]">_OnTouchReactOnLevel</a>
 <LI><a href="#[32c7f9c]">_OnPidStateChange</a>
 <LI><a href="#[3481fd4]">DROPDOWN_Callback</a>
 <LI><a href="#[32c0fd0]">EDIT_Callback</a>
 <LI><a href="#[32bf02c]">_Draw</a>
 <LI><a href="#[32befb4]">_cbClose</a>
 <LI><a href="#[32bf824]">FRAMEWIN_Callback</a>
 <LI><a href="#[32bffe0]">FRAMEWIN__cbClient</a>
 <LI><a href="#[32bb51c]">GRAPH_Callback</a>
 <LI><a href="#[3323400]">_OnPaint</a>
 <LI><a href="#[3323478]">_OnDelete</a>
 <LI><a href="#[3322adc]">_OnPaint</a>
 <LI><a href="#[2f3ea0c]">_cbEffect</a>
 <LI><a href="#[2f3ea48]">_cbBk</a>
 <LI><a href="#[2f3eb38]">_FRAMEWIN_DrawSkinFlex</a>
 <LI><a href="#[2f3d6d4]">PROGBAR_DrawSkinFlex</a>
 <LI><a href="#[2f3e340]">BUTTON_DrawSkinFlex</a>
 <LI><a href="#[2f3d56c]">SCROLLBAR_DrawSkinFlex</a>
 <LI><a href="#[2f3d4f4]">SLIDER_DrawSkinFlex</a>
 <LI><a href="#[2f3d8b4]">HEADER_DrawSkinFlex</a>
 <LI><a href="#[2f3ebb0]">_DrawBkCircle</a>
 <LI><a href="#[2f3ebec]">_DrawBk</a>
 <LI><a href="#[2f3eb74]">_DrawBkSimple</a>
 <LI><a href="#[3282264]">_SetPhysRAMAddr</a>
 <LI><a href="#[32821ec]">_SetRect</a>
 <LI><a href="#[32822dc]">_SetOrientation</a>
 <LI><a href="#[32823cc]">_ReadPixel_16bpp_B8</a>
 <LI><a href="#[3282444]">_ReadPixel_16bpp_B16</a>
 <LI><a href="#[3282354]">_SetInterface</a>
 <LI><a href="#[3282c3c]">_DrawBitmap</a>
 <LI><a href="#[3282bc4]">_FillRect</a>
 <LI><a href="#[3283254]">GUIDRV_FlexColor__GetPixelIndexNoCache</a>
 <LI><a href="#[32830b0]">GUIDRV_FlexColor__SetPixelIndexNoCache</a>
 <LI><a href="#[3282b4c]">_ReadData</a>
 <LI><a href="#[3282ad4]">_WriteData</a>
 <LI><a href="#[340b688]">_OnExit</a>
 <LI><a href="#[30cced4]">_OnExit</a>
 <LI><a href="#[30ccfc4]">_DrawHLine</a>
 <LI><a href="#[30cde88]">LCD_SetPixelAA_Xor</a>
 <LI><a href="#[30cdec4]">LCD_SetPixelAA</a>
 <LI><a href="#[318b414]">_OnExit</a>
 <LI><a href="#[30ca3b4]">LCD_DrawVLine</a>
 <LI><a href="#[30ca3f0]">LCD_DrawHLine</a>
 <LI><a href="#[327cdc8]">_CalcParaFadeIn</a>
 <LI><a href="#[327cd50]">_CalcParaFadeOut</a>
 <LI><a href="#[327ccd8]">_CalcParaMoveIn</a>
 <LI><a href="#[327cc60]">_CalcParaMoveOut</a>
 <LI><a href="#[3184c7c]">LCD_Index2Color_8888</a>
 <LI><a href="#[31b883c]">WM_HandlePID</a>
 <LI><a href="#[340a4f4]">GUI_TIMER_Exec</a>
 <LI><a href="#[340abfc]">_OnExit</a>
 <LI><a href="#[318c3c8]">_OnExit</a>
 <LI><a href="#[3184c7c]">LCD_Index2Color_8888</a>
 <LI><a href="#[31b1078]">LCD_Index2Color_888</a>
 <LI><a href="#[35012ac]">_OnExit</a>
 <LI><a href="#[34bc18c]">HEADER_Callback</a>
 <LI><a href="#[21776c0]">LCD_WR_REG</a>
 <LI><a href="#[2177738]">LCD_WR_Data</a>
 <LI><a href="#[21776fc]">LCD_WR_M_Data</a>
 <LI><a href="#[21777ec]">LCD_RD_M_Data</a>
 <LI><a href="#[217751c]">GUIDRV_FlexColor_SetMode16bppC0B16</a>
 <LI><a href="#[2177558]">GUIDRV_FlexColor_SetFunc66708</a>
 <LI><a href="#[3565dcc]">LISTBOX_Callback</a>
 <LI><a href="#[3565c28]">LISTBOX_OwnerDraw</a>
 <LI><a href="#[331fb48]">LISTVIEW_Callback</a>
 <LI><a href="#[2f3e250]">FRAMEWIN_CreateIndirect</a>
 <LI><a href="#[2f3d47c]">TEXT_CreateIndirect</a>
 <LI><a href="#[2f3e37c]">BUTTON_CreateIndirect</a>
 <LI><a href="#[331b228]">MESSAGEBOX_Callback</a>
 <LI><a href="#[2181878]">OS_TaskIdle</a>
 <LI><a href="#[218183c]">OS_TaskStat</a>
 <LI><a href="#[331a8c8]">PROGBAR_Callback</a>
 <LI><a href="#[34b9234]">RADIO_Callback</a>
 <LI><a href="#[34b8244]">SCROLLBAR_Callback</a>
 <LI><a href="#[3316908]">_DrawBackgroundV</a>
 <LI><a href="#[2f38f1c]">GUI_DrawGradientH</a>
 <LI><a href="#[33167a0]">_DrawGraspV</a>
 <LI><a href="#[3316980]">_DrawBackgroundH</a>
 <LI><a href="#[2f3dddc]">GUI_DrawGradientV</a>
 <LI><a href="#[3316818]">_DrawGraspH</a>
 <LI><a href="#[34b6318]">TEXT_Callback</a>
 <LI><a href="#[336b520]">TREEVIEW_Callback</a>
 <LI><a href="#[336b214]">TREEVIEW_OwnerDraw</a>
 <LI><a href="#[34b1980]">_cbInvalidateOne</a>
 <LI><a href="#[33d30f4]">_cbTimer</a>
 <LI><a href="#[3367b78]">cbBackWin</a>
 <LI><a href="#[3367e48]">_OnExit</a>
 <LI><a href="#[3367bf0]">_cbPaintMemDev</a>
 <LI><a href="#[33171b4]">_CalcPositions</a>
 <LI><a href="#[348024c]">FRAMEWIN_OwnerDraw</a>
 <LI><a href="#[3561e48]">_CalcPositions</a>
 <LI><a href="#[331bf0c]">_Free</a>
 <LI><a href="#[331bda4]">_Sort</a>
 <LI><a href="#[2fb3ee4]">CHECKBOX_DrawSkinFlex</a>
 <LI><a href="#[2fb3df4]">DROPDOWN_DrawSkinFlex</a>
 <LI><a href="#[2fb3728]">RADIO_DrawSkinFlex</a>
 <LI><a href="#[2fb59d8]">_cbBkWindow</a>
 <LI><a href="#[2fb5a14]">_cbAnimation</a>
 <LI><a href="#[2fb599c]">_cbDialogOrder</a>
 <LI><a href="#[2fb5b40]">_DrawSkin</a>
 <LI><a href="#[3014254]">_cbDialog</a>
 <LI><a href="#[30d6024]">_cbBkWin</a>
 <LI><a href="#[30d5fac]">_cbMain</a>
 <LI><a href="#[30d5fe8]">_cbButton</a>
 <LI><a href="#[3184c7c]">LCD_Index2Color_8888</a>
 <LI><a href="#[3284c1c]">_GetDevFunc_SetVSize</a>
 <LI><a href="#[3284c94]">_GetDevFunc_SetSize</a>
 <LI><a href="#[3284d0c]">_GetDevFunc_Init</a>
 <LI><a href="#[327f1a4]">GUI_MEMDEV__WriteToActiveAlpha</a>
 <LI><a href="#[32812b0]">GUI_MEMDEV__WriteToActiveOpaque</a>
 <LI><a href="#[3487650]">_FillPolygon</a>
 <LI><a href="#[34875d8]">_FillPolygonAA</a>
 <LI><a href="#[31b7810]">_ReadRectFromMemdev</a>
 <LI><a href="#[2f36d20]">_cbBk</a>
 <LI><a href="#[31b7888]">_OnExit</a>
 <LI><a href="#[319043c]">_OnExit</a>
 <LI><a href="#[2f3e9d0]">_cbFrameWinControl</a>
 <LI><a href="#[2f3e994]">_cbFrameWinInfo</a>
 <LI><a href="#[30d5f34]">_cbSubMenu</a>
 <LI><a href="#[33662a0]">GUI_MEMDEV_Paint1Static</a>
 <LI><a href="#[3366408]">WM__Paint1</a>
 <LI><a href="#[3282174]">_SetReg_B16</a>
 <LI><a href="#[3282084]">_WritePara_B16</a>
 <LI><a href="#[32820fc]">_SetReg_B8</a>
 <LI><a href="#[328200c]">_WritePara_B8</a>
 <LI><a href="#[2fb5924]">_cbDialogSelect</a>
 <LI><a href="#[2fb5b40]">_DrawSkin</a>
 <LI><a href="#[2fb5960]">_cbDialogProgress</a>
 <LI><a href="#[30d5f70]">_cbStatus</a>
 <LI><a href="#[213d114]">App_TaskStart</a>
 <LI><a href="#[2f3e250]">FRAMEWIN_CreateIndirect</a>
 <LI><a href="#[2f3e37c]">BUTTON_CreateIndirect</a>
 <LI><a href="#[2f3e37c]">BUTTON_CreateIndirect</a>
 <LI><a href="#[2f3d710]">PROGBAR_CreateIndirect</a>
 <LI><a href="#[2f3d47c]">TEXT_CreateIndirect</a>
 <LI><a href="#[2f3e250]">FRAMEWIN_CreateIndirect</a>
 <LI><a href="#[2f3d47c]">TEXT_CreateIndirect</a>
 <LI><a href="#[2f3a2cc]">GUIPROP_AA4_DispChar</a>
 <LI><a href="#[2f3a290]">GUIPROP_AA4_GetCharDistX</a>
 <LI><a href="#[2f3a254]">GUIPROP_AA4_GetFontInfo</a>
 <LI><a href="#[2f3a218]">GUIPROP_AA4_IsInFont</a>
 <LI><a href="#[2f347a0]">LISTVIEW_CompareText</a>
 <LI><a href="#[2f347a0]">LISTVIEW_CompareText</a>
 <LI><a href="#[2f347dc]">LISTVIEW_CompareDec</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[2fb896c]">GUIPROP_AA4_EXT_DispChar</a>
 <LI><a href="#[2fb88f4]">GUIPROP_EXT_GetCharDistX</a>
 <LI><a href="#[2fb887c]">GUIPROP_EXT_GetFontInfo</a>
 <LI><a href="#[2fb8840]">GUIPROP_EXT_IsInFont</a>
 <LI><a href="#[2fb88b8]">GUIPROP_EXT_GetCharInfo</a>
 <LI><a href="#[2fb896c]">GUIPROP_AA4_EXT_DispChar</a>
 <LI><a href="#[2fb88f4]">GUIPROP_EXT_GetCharDistX</a>
 <LI><a href="#[2fb887c]">GUIPROP_EXT_GetFontInfo</a>
 <LI><a href="#[2fb8840]">GUIPROP_EXT_IsInFont</a>
 <LI><a href="#[2fb88b8]">GUIPROP_EXT_GetCharInfo</a>
 <LI><a href="#[2fb896c]">GUIPROP_AA4_EXT_DispChar</a>
 <LI><a href="#[2fb88f4]">GUIPROP_EXT_GetCharDistX</a>
 <LI><a href="#[2fb887c]">GUIPROP_EXT_GetFontInfo</a>
 <LI><a href="#[2fb8840]">GUIPROP_EXT_IsInFont</a>
 <LI><a href="#[2fb88b8]">GUIPROP_EXT_GetCharInfo</a>
 <LI><a href="#[2fb896c]">GUIPROP_AA4_EXT_DispChar</a>
 <LI><a href="#[2fb88f4]">GUIPROP_EXT_GetCharDistX</a>
 <LI><a href="#[2fb887c]">GUIPROP_EXT_GetFontInfo</a>
 <LI><a href="#[2fb8840]">GUIPROP_EXT_IsInFont</a>
 <LI><a href="#[2fb88b8]">GUIPROP_EXT_GetCharInfo</a>
 <LI><a href="#[2f3e250]">FRAMEWIN_CreateIndirect</a>
 <LI><a href="#[2f3d47c]">TEXT_CreateIndirect</a>
 <LI><a href="#[2f3d47c]">TEXT_CreateIndirect</a>
 <LI><a href="#[2f3d47c]">TEXT_CreateIndirect</a>
 <LI><a href="#[2f3d47c]">TEXT_CreateIndirect</a>
 <LI><a href="#[2fb3d04]">EDIT_CreateIndirect</a>
 <LI><a href="#[2fb3764]">RADIO_CreateIndirect</a>
 <LI><a href="#[2fb3e30]">DROPDOWN_CreateIndirect</a>
 <LI><a href="#[2fb3e30]">DROPDOWN_CreateIndirect</a>
 <LI><a href="#[2f3e37c]">BUTTON_CreateIndirect</a>
 <LI><a href="#[2f3e37c]">BUTTON_CreateIndirect</a>
 <LI><a href="#[2f3e37c]">BUTTON_CreateIndirect</a>
 <LI><a href="#[2f3e250]">FRAMEWIN_CreateIndirect</a>
 <LI><a href="#[2f3d47c]">TEXT_CreateIndirect</a>
 <LI><a href="#[2fb3854]">LISTVIEW_CreateIndirect</a>
 <LI><a href="#[2f3e37c]">BUTTON_CreateIndirect</a>
 <LI><a href="#[2f3e37c]">BUTTON_CreateIndirect</a>
 <LI><a href="#[2f3e250]">FRAMEWIN_CreateIndirect</a>
 <LI><a href="#[2f3d710]">PROGBAR_CreateIndirect</a>
 <LI><a href="#[2f3e250]">FRAMEWIN_CreateIndirect</a>
 <LI><a href="#[3014074]">TREEVIEW_CreateIndirect</a>
 <LI><a href="#[2f3a2cc]">GUIPROP_AA4_DispChar</a>
 <LI><a href="#[2f3a290]">GUIPROP_AA4_GetCharDistX</a>
 <LI><a href="#[2f3a254]">GUIPROP_AA4_GetFontInfo</a>
 <LI><a href="#[2f3a218]">GUIPROP_AA4_IsInFont</a>
 <LI><a href="#[2f3a2cc]">GUIPROP_AA4_DispChar</a>
 <LI><a href="#[2f3a290]">GUIPROP_AA4_GetCharDistX</a>
 <LI><a href="#[2f3a254]">GUIPROP_AA4_GetFontInfo</a>
 <LI><a href="#[2f3a218]">GUIPROP_AA4_IsInFont</a>
 <LI><a href="#[2f3a2cc]">GUIPROP_AA4_DispChar</a>
 <LI><a href="#[2f3a290]">GUIPROP_AA4_GetCharDistX</a>
 <LI><a href="#[2f3a254]">GUIPROP_AA4_GetFontInfo</a>
 <LI><a href="#[2f3a218]">GUIPROP_AA4_IsInFont</a>
 <LI><a href="#[2f3a2cc]">GUIPROP_AA4_DispChar</a>
 <LI><a href="#[2f3a290]">GUIPROP_AA4_GetCharDistX</a>
 <LI><a href="#[2f3a254]">GUIPROP_AA4_GetFontInfo</a>
 <LI><a href="#[2f3a218]">GUIPROP_AA4_IsInFont</a>
 <LI><a href="#[2f3a2cc]">GUIPROP_AA4_DispChar</a>
 <LI><a href="#[2f3a290]">GUIPROP_AA4_GetCharDistX</a>
 <LI><a href="#[2f3a254]">GUIPROP_AA4_GetFontInfo</a>
 <LI><a href="#[2f3a218]">GUIPROP_AA4_IsInFont</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[30cb944]">_Color2Index_565</a>
 <LI><a href="#[30cb458]">LCD_Index2Color_565</a>
 <LI><a href="#[30cb8cc]">_GetIndexMask_565</a>
 <LI><a href="#[30cb9bc]">_Color2IndexBulk</a>
 <LI><a href="#[30cb854]">_Index2ColorBulk</a>
 <LI><a href="#[30ca3f0]">LCD_DrawHLine</a>
 <LI><a href="#[318b978]">LCD_DrawPixel</a>
 <LI><a href="#[3185078]">_DrawBitmap_8888</a>
 <LI><a href="#[3184c7c]">LCD_Index2Color_8888</a>
 <LI><a href="#[31850f0]">_DrawBitmapHW_8888</a>
 <LI><a href="#[3182d8c]">GUIPROP_EXT__DispLine</a>
 <LI><a href="#[3182a80]">_GetLineDistX_SJIS</a>
 <LI><a href="#[3182a08]">_GetLineLen_SJIS</a>
 <LI><a href="#[3182af8]">_DispLine_SJIS</a>
 <LI><a href="#[31b7f18]">_DrawBitmap</a>
 <LI><a href="#[31b7ea0]">_DrawHLine</a>
 <LI><a href="#[31b7e28]">_DrawVLine</a>
 <LI><a href="#[31b7db0]">_FillRect</a>
 <LI><a href="#[31b7ae0]">_GetPixelIndex</a>
 <LI><a href="#[31b7720]">_SetPixelIndex</a>
 <LI><a href="#[31b76a8]">_XorPixel</a>
 <LI><a href="#[31b7798]">_SetOrg</a>
 <LI><a href="#[31b7c48]">_GetDevFunc</a>
 <LI><a href="#[31b7bd0]">_GetDevProp</a>
 <LI><a href="#[31b7cc0]">_GetDevData</a>
 <LI><a href="#[31b79f0]">_GetRect</a>
 <LI><a href="#[31b4930]">_DrawBitmap</a>
 <LI><a href="#[31b48b8]">_DrawHLine</a>
 <LI><a href="#[31b4840]">_DrawVLine</a>
 <LI><a href="#[31b47c8]">_FillRect</a>
 <LI><a href="#[31b4480]">_GetPixelIndex</a>
 <LI><a href="#[31b4138]">_SetPixelIndex</a>
 <LI><a href="#[31b3e68]">_XorPixel</a>
 <LI><a href="#[31b41b0]">_SetOrg</a>
 <LI><a href="#[31b4570]">_GetDevFunc</a>
 <LI><a href="#[31b44f8]">_GetDevProp</a>
 <LI><a href="#[31b45e8]">_GetDevData</a>
 <LI><a href="#[31b4408]">_GetRect</a>
 <LI><a href="#[31b1474]">_Color2Index_888</a>
 <LI><a href="#[31b1078]">LCD_Index2Color_888</a>
 <LI><a href="#[31b13fc]">_GetIndexMask_888</a>
 <LI><a href="#[31b14ec]">_Color2IndexBulk</a>
 <LI><a href="#[31b1384]">_Index2ColorBulk</a>
 <LI><a href="#[31b0de4]">_Color2Index_8888</a>
 <LI><a href="#[3184c7c]">LCD_Index2Color_8888</a>
 <LI><a href="#[31b0d6c]">_GetIndexMask_8888</a>
 <LI><a href="#[31b0e5c]">_Color2IndexBulk</a>
 <LI><a href="#[31b0cf4]">_Index2ColorBulk</a>
 <LI><a href="#[31ae774]">_DrawBitmap_RLE4</a>
 <LI><a href="#[31ae300]">_DrawBitmap_RLE8</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[3284fdc]">_DrawBitmap</a>
 <LI><a href="#[3284f64]">_DrawHLine</a>
 <LI><a href="#[3284eec]">_DrawVLine</a>
 <LI><a href="#[3284e74]">_FillRect</a>
 <LI><a href="#[3284b2c]">_GetPixelIndex</a>
 <LI><a href="#[3284244]">_SetPixelIndex</a>
 <LI><a href="#[32841cc]">_XorPixel</a>
 <LI><a href="#[32842bc]">_SetOrg</a>
 <LI><a href="#[3284d84]">_GetDevFunc</a>
 <LI><a href="#[3284ba4]">_GetDevProp</a>
 <LI><a href="#[3284dfc]">_GetDevData</a>
 <LI><a href="#[3284ab4]">_GetRect</a>
 <LI><a href="#[3284a3c]">_Log2PhysX_X0Y0S0</a>
 <LI><a href="#[328485c]">_Log2PhysX_X1Y0S0</a>
 <LI><a href="#[328494c]">_Log2PhysX_X0Y1S0</a>
 <LI><a href="#[328476c]">_Log2PhysX_X1Y1S0</a>
 <LI><a href="#[32849c4]">_Log2PhysX_X0Y0S1</a>
 <LI><a href="#[32847e4]">_Log2PhysX_X1Y0S1</a>
 <LI><a href="#[32848d4]">_Log2PhysX_X0Y1S1</a>
 <LI><a href="#[32846f4]">_Log2PhysX_X1Y1S1</a>
 <LI><a href="#[328467c]">_Log2PhysY_X0Y0S0</a>
 <LI><a href="#[328449c]">_Log2PhysY_X1Y0S0</a>
 <LI><a href="#[328458c]">_Log2PhysY_X0Y1S0</a>
 <LI><a href="#[32843ac]">_Log2PhysY_X1Y1S0</a>
 <LI><a href="#[3284604]">_Log2PhysY_X0Y0S1</a>
 <LI><a href="#[3284424]">_Log2PhysY_X1Y0S1</a>
 <LI><a href="#[3284514]">_Log2PhysY_X0Y1S1</a>
 <LI><a href="#[3284334]">_Log2PhysY_X1Y1S1</a>
 <LI><a href="#[327fd98]">_DrawBitmap</a>
 <LI><a href="#[327fd20]">_DrawHLine</a>
 <LI><a href="#[327fca8]">_DrawVLine</a>
 <LI><a href="#[327fc30]">_FillRect</a>
 <LI><a href="#[327fa50]">_GetPixelIndex</a>
 <LI><a href="#[327f8e8]">_SetPixelIndex</a>
 <LI><a href="#[327f7f8]">_XorPixel</a>
 <LI><a href="#[327f960]">_SetOrg</a>
 <LI><a href="#[327fb40]">_GetDevFunc</a>
 <LI><a href="#[327fac8]">_GetDevProp</a>
 <LI><a href="#[327fbb8]">_GetDevData</a>
 <LI><a href="#[327f9d8]">_GetRect</a>
 <LI><a href="#[3369270]">_DrawUp</a>
 <LI><a href="#[33691f8]">_DrawUpRect</a>
 <LI><a href="#[3369360]">_DrawDown</a>
 <LI><a href="#[33692e8]">_DrawDownRect</a>
 <LI><a href="#[340948c]">_GetCharCode</a>
 <LI><a href="#[3409414]">_GetCharSize</a>
 <LI><a href="#[340957c]">_CalcSizeOfChar</a>
 <LI><a href="#[3409504]">_Encode</a>
 <LI><a href="#[3406e1c]">_SetColor</a>
 <LI><a href="#[3406e94]">_SetBkColor</a>
 <LI><a href="#[3406da4]">_SetDrawMode</a>
 <LI><a href="#[3403f3c]">GUIMONO_DispChar</a>
 <LI><a href="#[3403f00]">GUIMONO_GetCharDistX</a>
 <LI><a href="#[3403ec4]">GUIMONO_GetFontInfo</a>
 <LI><a href="#[3403e88]">GUIMONO_IsInFont</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[2fb8930]">GUIPROP_DispChar</a>
 <LI><a href="#[2fb8804]">GUIPROP_GetCharDistX</a>
 <LI><a href="#[2fb87c8]">GUIPROP_GetFontInfo</a>
 <LI><a href="#[2fb878c]">GUIPROP_IsInFont</a>
 <LI><a href="#[3489054]">_DrawBitmap</a>
 <LI><a href="#[3488fdc]">_DrawHLine</a>
 <LI><a href="#[3488f64]">_DrawVLine</a>
 <LI><a href="#[3488eec]">_FillRect</a>
 <LI><a href="#[3488d0c]">_GetPixelIndex</a>
 <LI><a href="#[3488ba4]">_SetPixelIndex</a>
 <LI><a href="#[3488ab4]">_XorPixel</a>
 <LI><a href="#[3488c1c]">_SetOrg</a>
 <LI><a href="#[3488dfc]">_GetDevFunc</a>
 <LI><a href="#[3488d84]">_GetDevProp</a>
 <LI><a href="#[3488e74]">_GetDevData</a>
 <LI><a href="#[3488c94]">_GetRect</a>
 <LI><a href="#[34877b8]">_DrawBitmap</a>
 <LI><a href="#[3487740]">_DrawHLine</a>
 <LI><a href="#[34876c8]">_DrawVLine</a>
 <LI><a href="#[3487560]">_FillRect</a>
 <LI><a href="#[3487380]">_GetPixelIndex</a>
 <LI><a href="#[3487128]">_SetPixelIndex</a>
 <LI><a href="#[34870b0]">_XorPixel</a>
 <LI><a href="#[34871a0]">_SetOrg</a>
 <LI><a href="#[3487470]">_GetDevFunc</a>
 <LI><a href="#[34873f8]">_GetDevProp</a>
 <LI><a href="#[34874e8]">_GetDevData</a>
 <LI><a href="#[3487308]">_GetRect</a>
 <LI><a href="#[3485418]">GUI_USAGE_BM_AddPixel</a>
 <LI><a href="#[3485490]">GUI_USAGE_BM_AddHLine</a>
 <LI><a href="#[34853a0]">GUI_USAGE_BM_Clear</a>
 <LI><a href="#[3485274]">_GUI_USAGE_BM_Delete</a>
 <LI><a href="#[34852ec]">GUI_USAGE_BM_GetNextDirty</a>
 <LI><a href="#[34837f8]">_Paint</a>
 <LI><a href="#[3483870]">_Create</a>
 <LI><a href="#[3480648]">_Paint</a>
 <LI><a href="#[3480738]">_Create</a>
 <LI><a href="#[34ba044]">_Paint</a>
 <LI><a href="#[34ba134]">_Create</a>
 <LI><a href="#[348015c]">WIDGET_EFFECT_3D_DrawUp</a>
 <LI><a href="#[34b4eb4]">_DrawUpRect</a>
 <LI><a href="#[34b4fa4]">_DrawDown</a>
 <LI><a href="#[34b4f2c]">_DrawDownRect</a>
 <LI><a href="#[34b4680]">_DrawUp</a>
 <LI><a href="#[34b4608]">_DrawUpRect</a>
 <LI><a href="#[34b47e8]">_DrawDown</a>
 <LI><a href="#[34b4770]">_DrawDownRect</a>
 <LI><a href="#[34b46f8]">_DrawFlat</a>
 <LI><a href="#[34fe714]">_Color2Index_0</a>
 <LI><a href="#[34fe624]">_Index2Color_0</a>
 <LI><a href="#[34fe69c]">_GetIndexMask_0</a>
 <LI><a href="#[34f8918]">_Paint</a>
 <LI><a href="#[34f8a08]">_Create</a>
 <LI><a href="#[34f8210]">_Paint</a>
 <LI><a href="#[34f8288]">_Create</a>
 <LI><a href="#[3568310]">_Draw</a>
 <LI><a href="#[3568298]">_GetXSize</a>
 <LI><a href="#[3568220]">_GetYSize</a>
 <LI><a href="#[3567b90]">_Paint</a>
 <LI><a href="#[3567c80]">_Create</a>
 <LI><a href="#[35624d8]">_Paint</a>
 <LI><a href="#[35625c8]">_Create</a>
 <LI><a href="#[3561d58]">_Paint</a>
 <LI><a href="#[3561dd0]">_Create</a>
 <LI><a href="#[35616c8]">_Paint</a>
 <LI><a href="#[3561740]">_Create</a>
 <LI><a href="#[2f3beb0]">_GetAngle_0</a>
 <LI><a href="#[2f3be74]">_GetAngle_1</a>
 <LI><a href="#[2f3bf28]">_Draw_0</a>
 <LI><a href="#[2f3beec]">_Draw_1</a>
 <LI><a href="#[2f38940]">GUIDEMO_Skinning</a>
 <LI><a href="#[2f38a6c]">GUIDEMO_Fading</a>
 <LI><a href="#[2f388c8]">GUIDEMO_TransparentDialog</a>
 <LI><a href="#[2f38814]">GUIDEMO_WashingMachine</a>
 <LI><a href="#[2f389f4]">GUIDEMO_IconView</a>
 <LI><a href="#[2f389b8]">GUIDEMO_ImageFlow</a>
 <LI><a href="#[2f3888c]">GUIDEMO_Treeview</a>
 <LI><a href="#[2f3897c]">GUIDEMO_Listview</a>
 <LI><a href="#[2f38850]">GUIDEMO_VScreen</a>
 <LI><a href="#[2f38a30]">GUIDEMO_Graph</a>
 <LI><a href="#[2f38904]">GUIDEMO_Speed</a>
 <LI><a href="#[2f39354]">GUIDEMO_Bitmap</a>
 <LI><a href="#[2f38aa8]">GUIDEMO_Cursor</a>
 <LI><a href="#[2f38f58]">GUIDEMO_ColorBar</a>
 <LI><a href="#[2f3bcd0]">GUIDEMO_Automotive</a>
 <LI><a href="#[2f3a308]">GUIDEMO_BarGraph</a>
 <LI><a href="#[2f36e10]">_AddData_Heartbeat</a>
 <LI><a href="#[2f36dd4]">_AddData_Sine</a>
 <LI><a href="#[3182dc8]">GUIPROP_EXT__ClearLine</a>
 <LI><a href="#[32c7f24]">_OnTouchDefault</a>
 <LI><a href="#[32c68e0]">_Paint</a>
 <LI><a href="#[32c6958]">_Create</a>
 <LI><a href="#[32c5a58]">_Paint</a>
 <LI><a href="#[32c5ad0]">_Create</a>
 <LI><a href="#[32c2f74]">_Paint</a>
 <LI><a href="#[32c2fec]">_Create</a>
 <LI><a href="#[32bf5cc]">FRAMEWIN__GetBorderSize</a>
 <LI><a href="#[32bd484]">_GetBorderSize</a>
 <LI><a href="#[2f3e214]">FRAMEWIN_DrawSkinFlex</a>
 <LI><a href="#[32bd40c]">_Paint</a>
 <LI><a href="#[32bd4fc]">_Create</a>
 <LI><a href="#[3321ccc]">_Paint</a>
 <LI><a href="#[3321d44]">_Create</a>
 <LI><a href="#[3319464]">_Paint</a>
 <LI><a href="#[33194dc]">_Create</a>
 <LI><a href="#[3317f4c]">_Paint</a>
 <LI><a href="#[3317fc4]">_Create</a>
 <LI><a href="#[33170c4]">_Paint</a>
 <LI><a href="#[331713c]">_Create</a>
 <LI><a href="#[3315dc8]">_Paint</a>
 <LI><a href="#[3315e40]">_Create</a>
 <LI><a href="#[33cf224]">_GetCursorPosX</a>
 <LI><a href="#[33cf29c]">_GetCursorPosChar</a>
 <LI><a href="#[33cf314]">_GetCursorCharacter</a>
 <LI><a href="#[33caae4]">_Log2VisBuffered</a>
 <LI><a href="#[2178df4]">GUI_X_ExecIdle</a>
 <LI><a href="#[3482c40]">CHECKBOX__GetButtonSize</a>
 <LI><a href="#[34806c0]">_GetBorderSize</a>
 <LI><a href="#[3317b50]">RADIO__GetButtonSize</a>
 <LI><a href="#[34f8990]">_GetButtonSize</a>
 <LI><a href="#[3562550]">_GetButtonSize</a>
 <LI><a href="#[355e284]">_GetWordWrap</a>
 <LI><a href="#[355e2fc]">_GetCharWrap</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[213f52c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[366a2e4]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[365f22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[36673c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[365f22c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[366a2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[365f1f0]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36673c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[365f1b4]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[365f178]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[365f358]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[365f31c]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[365efd4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[366b52c]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[355a4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[366b478]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[355a5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[3666c84]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[3662904]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3663f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[3665d48]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[3665c94]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[366b1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[3665cd0]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[3665514]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[366558c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[366594c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[36657e4]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[3665424]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[366549c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[366585c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[366576c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[3665ba4]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[3665b2c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[3665ab4]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[3665a3c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[36659c4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[3665c58]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[36653e8]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[36658d4]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[36656f4]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[3661068]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[36619c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[36601a4]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[365ffc4]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[365ff88]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[36600f0]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[3660258]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[3660078]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[36673c8]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[365f1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[366a2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3663ffc]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[3663c78]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3663174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3663f48]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3662904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[3663f84]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3663e94]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; BSP_Init &rArr; FSMC_LCD_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2137a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[366300c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3663ed0]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3662274]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[366300c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[36619c8]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3661068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[3661a04]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[366198c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[36614a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[213f5a4]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3663174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2cb06d0]"></a>OS_CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21376d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
<LI><a href="#[2137750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[213778c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[21377c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[2137840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[213ee24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
<LI><a href="#[217be00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[217dc78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[217dcf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[217f1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
<LI><a href="#[218174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2181788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[21817c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[218183c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[2181878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
<LI><a href="#[21818b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[2181968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2cb0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[2cb07c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[2cb070c]"></a>OS_CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21376d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
<LI><a href="#[2137750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[213778c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[21377c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[2137840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[213ee24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
<LI><a href="#[217be00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[217dc78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[217dcf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[217f1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
<LI><a href="#[218174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2181788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[21817c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[218183c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[2181878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
<LI><a href="#[21818b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[2181968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2cb0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[2cb07c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[2ca2300]"></a>OSStartHighRdy</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2137804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[2ca22c4]"></a>OSCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2181968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[2ca2288]"></a>OSIntCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cb07c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[213efc8]"></a>OSPendSV</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[21379e4]"></a>CPU_IntDis</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2137a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ca2030]"></a>CPU_IntEn</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[2185a54]"></a>CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[2185a18]"></a>CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[355a6c0]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3666d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[3666e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>

<P><STRONG><a name="[355a5d0]"></a>__printf</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[366b478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[3666e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[355a4e0]"></a>_printf_int_dec</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[3666810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[3667008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[366b1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[366b52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[366b220]"></a>srand</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[366b1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[366b1e4]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[366b220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[3665c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[366b1a8]"></a>rand</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rand
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[355a4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[366b07c]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2fb5b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
</UL>

<P><STRONG><a name="[366af8c]"></a>memcmp</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[34fe9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[366ae9c]"></a>strcpy</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[2fb5b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
<LI><a href="#[32c1b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[336b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[366adac]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[2fb3e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[32c19a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[32c1b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[336b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[366acbc]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f36a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[31b7810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[327fd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[32c1b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[32c736c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[32c73a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[3318258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[331cb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[3489054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[34be2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[366ab18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[366ac80]"></a>__rt_memcpy</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[366ac44]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[366ab54]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[319034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[32bb288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
<LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[366ab18]"></a>__rt_memmove</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[366aadc]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[366a9b0]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3666b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3485490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
</UL>

<P><STRONG><a name="[366a884]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2177594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[21775d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_Config
<LI><a href="#[217b20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[217b248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkinFlexProps
<LI><a href="#[2f3e1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetSkinFlexProps
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318ba68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327fe88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[32bb4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[32c77a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[3368cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3368d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[336b4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[34861ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[34bdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[3666978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[366ac80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[366a848]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[366a80c]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[366a7d0]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[366a6e0]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[2f34e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3e3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_UpdateControlText
<LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[31b47c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[31b4840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[31b48b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[32c6958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[336d3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[3482c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX__GetButtonSize
<LI><a href="#[34853a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
</UL>

<P><STRONG><a name="[366a6a4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[366a668]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[366a62c]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3666b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[366a53c]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f347a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CompareText
</UL>

<P><STRONG><a name="[366a44c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[366a410]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[366a3d4]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3667170]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366396c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[3667134]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[366396c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[36674f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[3667008]"></a>_printf_int_common</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[355a4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[3666e64]"></a>_printf_char_common</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[355a5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[355a6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[3666d38]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[355a6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[3666b94]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[3666b58]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366a62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[3666b1c]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[366a9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[36669f0]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[36669b4]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[3666978]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[366693c]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[3666900]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[3666810]"></a>__rt_udiv10</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[355a4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[366396c]"></a>__aeabi_errno_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3667134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[3667170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[3663930]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[36638f4]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[36632dc]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[36632a0]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3663174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3663264]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3663174]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[213f5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[36632a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[3663c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[366300c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3662274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3663e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[3661be4]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[3661ba8]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[36614a0]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[366198c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[213f4f0]"></a>ADC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.ADC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[2137bc4]"></a>App_TCBInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app.o(i.App_TCBInitHook))
<BR><BR>[Called By]<UL><LI><a href="#[2ca2abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
</UL>

<P><STRONG><a name="[2137b88]"></a>App_TaskCreateHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app.o(i.App_TaskCreateHook))
<BR><BR>[Called By]<UL><LI><a href="#[2ca2a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
</UL>

<P><STRONG><a name="[2137b10]"></a>App_TaskIdleHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app.o(i.App_TaskIdleHook))
<BR><BR>[Called By]<UL><LI><a href="#[2ca2a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>

<P><STRONG><a name="[2137ad4]"></a>App_TaskStatHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app.o(i.App_TaskStatHook))
<BR><BR>[Called By]<UL><LI><a href="#[2ca29cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
</UL>

<P><STRONG><a name="[2137a98]"></a>App_TaskSwHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app.o(i.App_TaskSwHook))
<BR><BR>[Called By]<UL><LI><a href="#[2ca2954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>

<P><STRONG><a name="[2137a20]"></a>BSP_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp.o(i.BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BSP_Init &rArr; FSMC_LCD_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2caec54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
<LI><a href="#[2caec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tp_Config
<LI><a href="#[2caedbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[2caedf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[2137a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30d2b68]"></a>BUTTON_Callback</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, button.o(i.BUTTON_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[32c76f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[32c8014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[32c808c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[32befb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_CreateUser)
</UL>
<P><STRONG><a name="[3481200]"></a>BUTTON_CreateAsChild</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, button_create.o(i.BUTTON_CreateAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateAsChild &rArr; BUTTON_CreateEx &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[32bece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[30d2b2c]"></a>BUTTON_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateEx &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c77a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[3481200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
</UL>

<P><STRONG><a name="[2f3e37c]"></a>BUTTON_CreateIndirect</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, button_createindirect.o(i.BUTTON_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateIndirect &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c7678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[32c77a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Address Reference Count : 3]<UL><LI> guidemo.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> messagebox.o(i.MESSAGEBOX_Create)
</UL>
<P><STRONG><a name="[32c77a4]"></a>BUTTON_CreateUser</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, button.o(i.BUTTON_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[30d2b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>

<P><STRONG><a name="[2f3e340]"></a>BUTTON_DrawSkinFlex</STRONG> (Thumb, 518 bytes, Stack size 48 bytes, button_skinflex.o(i.BUTTON_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = BUTTON_DrawSkinFlex &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[31859d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[32c5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[32c5ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[30d2af0]"></a>BUTTON_IsPressed</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, button_ispressed.o(i.BUTTON_IsPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = BUTTON_IsPressed &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
</UL>

<P><STRONG><a name="[2f3e304]"></a>BUTTON_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button_skin.o(i.BUTTON_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[2f3e2c8]"></a>BUTTON_SetFocussable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetFocussable))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetFocussable &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[32c7510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[32bece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[32c76f0]"></a>BUTTON_SetPressed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[32c7510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[2f3e28c]"></a>BUTTON_SetReactOnLevel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetReactOnLevel))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[32bed20]"></a>BUTTON_SetSelfDraw</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, button_selfdraw.o(i.BUTTON_SetSelfDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetSelfDraw &rArr; BUTTON_SetSelfDrawEx &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3483b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[3483b7c]"></a>BUTTON_SetSelfDrawEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, button_selfdraw.o(i.BUTTON_SetSelfDrawEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetSelfDrawEx &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3483b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[3483b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
</UL>
<BR>[Called By]<UL><LI><a href="#[32bed20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
</UL>

<P><STRONG><a name="[32c7678]"></a>BUTTON_SetText</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, button.o(i.BUTTON_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
</UL>

<P><STRONG><a name="[3483b40]"></a>BUTTON__SetDrawObj</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, button__setbitmapobj.o(i.BUTTON__SetDrawObj))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[3483b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>

<P><STRONG><a name="[213f4b4]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.CAN_RX1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f478]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.CAN_SCE_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[2fb3ee4]"></a>CHECKBOX_DrawSkinFlex</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[32c52d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[32c5350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[32c53c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(i._DemoSkinning)
</UL>
<P><STRONG><a name="[2fb3ea8]"></a>CHECKBOX_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, checkbox_skin.o(i.CHECKBOX_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[3482c40]"></a>CHECKBOX__GetButtonSize</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, checkbox.o(i.CHECKBOX__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CHECKBOX__GetButtonSize &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[32c4450]"></a>DIALOG_GetBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dialog.o(i.DIALOG_GetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[336984c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
</UL>

<P><STRONG><a name="[213f43c]"></a>DMAChannel1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f400]"></a>DMAChannel2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f3c4]"></a>DMAChannel3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f388]"></a>DMAChannel4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f34c]"></a>DMAChannel5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f310]"></a>DMAChannel6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f2d4]"></a>DMAChannel7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[3482010]"></a>DROPDOWN_AddKey</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_AddKey &rArr; DROPDOWN_IncSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c2bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[3481d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[3481f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[34825ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[2fb3e6c]"></a>DROPDOWN_AddString</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, dropdown_addstring.o(i.DROPDOWN_AddString))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_AddString &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
</UL>

<P><STRONG><a name="[3481fd4]"></a>DROPDOWN_Callback</STRONG> (Thumb, 354 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 800 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_Callback &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[34819f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[3481c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3481f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown.o(i.DROPDOWN_CreateUser)
</UL>
<P><STRONG><a name="[3481f98]"></a>DROPDOWN_Collapse</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_Collapse))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_Collapse &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[2fb3e30]"></a>DROPDOWN_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, dropdown_createindirect.o(i.DROPDOWN_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_CreateIndirect &rArr; DROPDOWN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[32c3a78]"></a>DROPDOWN_CreateUser</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, dropdown.o(i.DROPDOWN_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[3481d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateIndirect
</UL>

<P><STRONG><a name="[3481f20]"></a>DROPDOWN_DecSel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dropdown.o(i.DROPDOWN_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_DecSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[2fb3df4]"></a>DROPDOWN_DrawSkinFlex</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, dropdown_skinflex.o(i.DROPDOWN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c2830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[32c28a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(i._DemoSkinning)
</UL>
<P><STRONG><a name="[3481ee4]"></a>DROPDOWN_Expand</STRONG> (Thumb, 500 bytes, Stack size 144 bytes, dropdown.o(i.DROPDOWN_Expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[32c3280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[32c367c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3481a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[3481ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[3481b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[3481b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[3481b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[3481bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[3481c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[3481c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3481d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[3481ea8]"></a>DROPDOWN_GetSel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3481e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[3481f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
</UL>

<P><STRONG><a name="[3481e30]"></a>DROPDOWN_IncSel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dropdown.o(i.DROPDOWN_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_IncSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[2fb3db8]"></a>DROPDOWN_SetBkColor</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, dropdown_setbkcolor.o(i.DROPDOWN_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetBkColor &rArr; DROPDOWN_SetTextColor &rArr; LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2fb3d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c367c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
</UL>

<P><STRONG><a name="[2fb3d7c]"></a>DROPDOWN_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dropdown_skin.o(i.DROPDOWN_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[3481df4]"></a>DROPDOWN_SetSel</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3481d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[3481e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[3481f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[2fb3d40]"></a>DROPDOWN_SetTextColor</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, dropdown_settextcolor.o(i.DROPDOWN_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetTextColor &rArr; LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c3280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[2fb5ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
</UL>

<P><STRONG><a name="[3481d7c]"></a>DROPDOWN__AdjustHeight</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN__AdjustHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = DROPDOWN__AdjustHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[331f7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
</UL>

<P><STRONG><a name="[3481d40]"></a>DROPDOWN__GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dropdown.o(i.DROPDOWN__GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DROPDOWN__GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[32c2bb4]"></a>DROPDOWN__GetpItemLocked</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DROPDOWN__GetpItemLocked &rArr; GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[32c2f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2177828]"></a>Delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcdconf.o(i.Delay))
<BR><BR>[Called By]<UL><LI><a href="#[2177a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
</UL>

<P><STRONG><a name="[32c100c]"></a>EDIT_AddKey</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, edit.o(i.EDIT_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = EDIT_AddKey &rArr; _InsertChar &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3186770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c0b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[32c0cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[32c1b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[32c1b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[32c0fd0]"></a>EDIT_Callback</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, edit.o(i.EDIT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = EDIT_Callback &rArr; _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(i.EDIT_CreateUser)
</UL>
<P><STRONG><a name="[2fb3d04]"></a>EDIT_CreateIndirect</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, edit_createindirect.o(i.EDIT_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = EDIT_CreateIndirect &rArr; EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[32c0f58]"></a>EDIT_CreateUser</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, edit.o(i.EDIT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c1a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateIndirect
</UL>

<P><STRONG><a name="[2fb3cc8]"></a>EDIT_SetBkColor</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, edit.o(i.EDIT_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = EDIT_SetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[32c0e68]"></a>EDIT_SetCursorAtPixel</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, edit.o(i.EDIT_SetCursorAtPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = EDIT_SetCursorAtPixel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31bb2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[32c0a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[32c0cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[2fb3c8c]"></a>EDIT_SetText</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, edit.o(i.EDIT_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = EDIT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3186770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[31bb2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[32c19a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
</UL>

<P><STRONG><a name="[2fb3c50]"></a>EDIT_SetTextAlign</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, edit.o(i.EDIT_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = EDIT_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateIndirect
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[32c0cc4]"></a>EDIT__SetCursorPos</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, edit.o(i.EDIT__SetCursorPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31bb2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[213f298]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f25c]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI15_10_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f220]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f1e4]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f1a8]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f16c]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f130]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI9_5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f0f4]"></a>FLASH_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.FLASH_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[32bece4]"></a>FRAMEWIN_AddButton</STRONG> (Thumb, 120 bytes, Stack size 64 bytes, framewin_button.o(i.FRAMEWIN_AddButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateEx &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3e2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[3481188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[34811c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[3481200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[2fb3c14]"></a>FRAMEWIN_AddCloseButton</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_AddCloseButton &rArr; FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateEx &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[32bece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[32bed20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[32bf824]"></a>FRAMEWIN_Callback</STRONG> (Thumb, 456 bytes, Stack size 72 bytes, framewin.o(i.FRAMEWIN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2fb34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[32bf2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[32bf2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[32bf464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[32bf734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[32bfef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[32bff68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[32c42e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(i.FRAMEWIN_CreateUser)
</UL>
<P><STRONG><a name="[2f3e250]"></a>FRAMEWIN_CreateIndirect</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, framewin_createindirect.o(i.FRAMEWIN_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_CreateIndirect &rArr; FRAMEWIN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>
<BR>[Address Reference Count : 4]<UL><LI> guidemo_treeview.o(.constdata)
<LI> guidemo.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> messagebox.o(i.MESSAGEBOX_Create)
</UL>
<P><STRONG><a name="[32bf7ac]"></a>FRAMEWIN_CreateUser</STRONG> (Thumb, 228 bytes, Stack size 72 bytes, framewin.o(i.FRAMEWIN_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[32bf6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateIndirect
</UL>

<P><STRONG><a name="[2f3e214]"></a>FRAMEWIN_DrawSkinFlex</STRONG> (Thumb, 860 bytes, Stack size 80 bytes, framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_DrawSkinFlex &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bc980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[32bc9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[32bc9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[32bca34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3eb38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_DrawSkinFlex
<LI><a href="#[2fb5b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[32bca34]"></a>FRAMEWIN_GetActive</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, framewin_get.o(i.FRAMEWIN_GetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_GetActive &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[34811c4]"></a>FRAMEWIN_GetBorderSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, framewin_get.o(i.FRAMEWIN_GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_GetBorderSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[32bece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[32bdf10]"></a>FRAMEWIN_GetDefaultBorderSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, framewin_default.o(i.FRAMEWIN_GetDefaultBorderSize))
<BR><BR>[Called By]<UL><LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[2fb3bd8]"></a>FRAMEWIN_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, framewin_default.o(i.FRAMEWIN_GetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[2f3e1d8]"></a>FRAMEWIN_GetSkinFlexProps</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, framewin_skinflex.o(i.FRAMEWIN_GetSkinFlexProps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN_GetSkinFlexProps &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[3481188]"></a>FRAMEWIN_GetTitleHeight</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, framewin_get.o(i.FRAMEWIN_GetTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_GetTitleHeight &rArr; FRAMEWIN__CalcPositions &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[32bece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[348024c]"></a>FRAMEWIN_OwnerDraw</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, framewin_skinclassic.o(i.FRAMEWIN_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_OwnerDraw &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c097c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[32c0aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skinclassic.o(i._Create)
</UL>
<P><STRONG><a name="[32bf734]"></a>FRAMEWIN_SetActive</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetActive &rArr; _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[32bfef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[2fb3b9c]"></a>FRAMEWIN_SetClientColor</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, framewin_setcolors.o(i.FRAMEWIN_SetClientColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetClientColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[331b228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Callback
</UL>

<P><STRONG><a name="[2fb3b60]"></a>FRAMEWIN_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, framewin_default.o(i.FRAMEWIN_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[2f3e19c]"></a>FRAMEWIN_SetDefaultSkin</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, framewin_skin.o(i.FRAMEWIN_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[2fb3b24]"></a>FRAMEWIN_SetDefaultTextAlign</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, framewin_default.o(i.FRAMEWIN_SetDefaultTextAlign))
<BR><BR>[Called By]<UL><LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[3480198]"></a>FRAMEWIN_SetOwnerDraw</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, framewin_setownerdraw.o(i.FRAMEWIN_SetOwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetOwnerDraw &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3480738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
</UL>

<P><STRONG><a name="[2fb3ae8]"></a>FRAMEWIN_SetSkin</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, framewin_skin.o(i.FRAMEWIN_SetSkin))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetSkin &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bd04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[32bf554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[32bf608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[2f3e160]"></a>FRAMEWIN_SetSkinFlexProps</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, framewin_skinflex.o(i.FRAMEWIN_SetSkinFlexProps))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FRAMEWIN_SetSkinFlexProps &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[32bf6bc]"></a>FRAMEWIN_SetText</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[2f3e124]"></a>FRAMEWIN_SetTextAlign</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3eb38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[2f3e0e8]"></a>FRAMEWIN_SetTextColor</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, framewin_setcolors.o(i.FRAMEWIN_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3eb38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[32bf644]"></a>FRAMEWIN__CalcPositions</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, framewin.o(i.FRAMEWIN__CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__CalcPositions &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[32bf374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[32bf590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[32bf608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[32bece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[32bf554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3481188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
</UL>

<P><STRONG><a name="[32bf608]"></a>FRAMEWIN__CalcTitleHeight</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, framewin.o(i.FRAMEWIN__CalcTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[32c4c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[32bd04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[32bf5cc]"></a>FRAMEWIN__GetBorderSize</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, framewin.o(i.FRAMEWIN__GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FRAMEWIN__GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(.data)
</UL>
<P><STRONG><a name="[32bf590]"></a>FRAMEWIN__GetTitleLimits</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, framewin.o(i.FRAMEWIN__GetTitleLimits))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c9928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[32c9964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
</UL>
<BR>[Called By]<UL><LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[32bd04c]"></a>FRAMEWIN__UpdateButtons</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, framewin__updatebuttons.o(i.FRAMEWIN__UpdateButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[32c9928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[32c9964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[34815fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
</UL>

<P><STRONG><a name="[32bf554]"></a>FRAMEWIN__UpdatePositions</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN__UpdatePositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
</UL>

<P><STRONG><a name="[2caec54]"></a>FSMC_LCD_Init</STRONG> (Thumb, 224 bytes, Stack size 120 bytes, lcdconf.o(i.FSMC_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = FSMC_LCD_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[213796c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2ca6fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[2cac044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[2cac0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
<LI><a href="#[2caebdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2caec18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2137a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[2cac0bc]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2caec54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
</UL>

<P><STRONG><a name="[2cac044]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FSMC_NORSRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2caec54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
</UL>

<P><STRONG><a name="[318e2b8]"></a>GL_DispChar</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gui_char.o(i.GL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GL_DispChar &rArr; GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318e27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3182af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine_SJIS
<LI><a href="#[3186eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[30cec20]"></a>GL_DrawArc</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, gui_arc.o(i.GL_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GL_DrawArc &rArr; _DrawArc &rArr; floor &rArr; __aeabi_drsub
</UL>
<BR>[Calls]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[30cee78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[30ce0a4]"></a>GL_DrawBitmap</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3185474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[31854b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[318dbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[30ce680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
</UL>

<P><STRONG><a name="[318cd64]"></a>GL_DrawCircle</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, gui_circ.o(i.GL_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GL_DrawCircle &rArr; Draw8Point
</UL>
<BR>[Calls]<UL><LI><a href="#[318d340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3de18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[30cc0c4]"></a>GL_DrawLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_drawline.o(i.GL_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[33c71b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[32bb120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[33c71f0]"></a>GL_DrawLine1Ex</STRONG> (Thumb, 452 bytes, Stack size 64 bytes, gui_drawline.o(i.GL_DrawLine1Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[30ca3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[33c7010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[33c78bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[33c7c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[33c71b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[33c71b4]"></a>GL_DrawLineEx</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, gui_drawline.o(i.GL_DrawLineEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[30cbbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[33c704c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[33c7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[33c71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[33c7844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
<LI><a href="#[33c7934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc0c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[33c7010]"></a>GL_DrawPoint</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui_drawpoint.o(i.GL_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[318ccec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[33c71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[33c7934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>

<P><STRONG><a name="[318ccec]"></a>GL_FillCircle</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, gui_circ.o(i.GL_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[33c7010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[30cd4ec]"></a>GL_FillCircleAA_HiRes</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, guiaa_circle.o(i.GL_FillCircleAA_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = GL_FillCircleAA_HiRes &rArr; FillCircle &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30cd7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCircle
<LI><a href="#[30ceba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[30cebe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
</UL>

<P><STRONG><a name="[30cbbd8]"></a>GL_FillPolygon</STRONG> (Thumb, 466 bytes, Stack size 64 bytes, gui_fillpolygon.o(i.GL_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GL_FillPolygon &rArr; _Add
</UL>
<BR>[Calls]<UL><LI><a href="#[33c69bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[30cbe30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[33c71b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[33662dc]"></a>GL_SetDefault</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_setdefault.o(i.GL_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GL_SetDefault &rArr; GUI_SetTextAlign &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[30162ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[31854b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[32bb0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
</UL>
<BR>[Called By]<UL><LI><a href="#[3366714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[2caedf8]"></a>GPIO_Configuration</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2caebdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2caec18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2137a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[2caec18]"></a>GPIO_Init</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2caec54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
<LI><a href="#[2caec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tp_Config
<LI><a href="#[2caedf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[21379a8]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[213d114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
<LI><a href="#[2177a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
<LI><a href="#[2caeccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadY
<LI><a href="#[2caed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadX
</UL>

<P><STRONG><a name="[213796c]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[213d114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
<LI><a href="#[2177a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
<LI><a href="#[2caec54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
<LI><a href="#[2caec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tp_Config
<LI><a href="#[2caeccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadY
<LI><a href="#[2caed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadX
</UL>

<P><STRONG><a name="[2f36b40]"></a>GRAPH_AttachData</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, graph.o(i.GRAPH_AttachData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = GRAPH_AttachData &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
</UL>

<P><STRONG><a name="[2f36b04]"></a>GRAPH_AttachScale</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, graph.o(i.GRAPH_AttachScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = GRAPH_AttachScale &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[32bb51c]"></a>GRAPH_Callback</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, graph.o(i.GRAPH_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = GRAPH_Callback &rArr; _ManageScrollBars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[32bbeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32bbfa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph.o(i.GRAPH_CreateUser)
</UL>
<P><STRONG><a name="[2f36ac8]"></a>GRAPH_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, graph.o(i.GRAPH_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = GRAPH_CreateEx &rArr; GRAPH_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32bb4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[32bb4e0]"></a>GRAPH_CreateUser</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, graph.o(i.GRAPH_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GRAPH_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
</UL>

<P><STRONG><a name="[2f36a8c]"></a>GRAPH_DATA_YT_AddValue</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, graph_data_yt.o(i.GRAPH_DATA_YT_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; _InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddData_Sine
<LI><a href="#[2f36e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddData_Heartbeat
</UL>

<P><STRONG><a name="[2f36a50]"></a>GRAPH_DATA_YT_Create</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, graph_data_yt.o(i.GRAPH_DATA_YT_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GRAPH_DATA_YT_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f36a14]"></a>GRAPH_DATA_YT_Delete</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, graph_data_yt.o(i.GRAPH_DATA_YT_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GRAPH_DATA_YT_Delete &rArr; _OnDelete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3323478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f369d8]"></a>GRAPH_DetachData</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, graph.o(i.GRAPH_DetachData))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = GRAPH_DetachData &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32bb1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
</UL>

<P><STRONG><a name="[2f3699c]"></a>GRAPH_DetachScale</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, graph.o(i.GRAPH_DetachScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = GRAPH_DetachScale &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32bb1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f36960]"></a>GRAPH_SCALE_Create</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, graph_scale.o(i.GRAPH_SCALE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GRAPH_SCALE_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f36924]"></a>GRAPH_SCALE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graph_scale.o(i.GRAPH_SCALE_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GRAPH_SCALE_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f368e8]"></a>GRAPH_SCALE_SetOff</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, graph_scale.o(i.GRAPH_SCALE_SetOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GRAPH_SCALE_SetOff &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f368ac]"></a>GRAPH_SCALE_SetPos</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, graph_scale.o(i.GRAPH_SCALE_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GRAPH_SCALE_SetPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f36870]"></a>GRAPH_SetBorder</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = GRAPH_SetBorder &rArr; _ManageScrollBars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f36834]"></a>GRAPH_SetColor</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = GRAPH_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f367f8]"></a>GRAPH_SetGridDistX</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, graph.o(i.GRAPH_SetGridDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GRAPH_SetGridDistX &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f367bc]"></a>GRAPH_SetGridDistY</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, graph.o(i.GRAPH_SetGridDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GRAPH_SetGridDistY &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f36780]"></a>GRAPH_SetGridOffY</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, graph.o(i.GRAPH_SetGridOffY))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = GRAPH_SetGridOffY &rArr; _InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bc098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f36744]"></a>GRAPH_SetGridVis</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, graph.o(i.GRAPH_SetGridVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GRAPH_SetGridVis &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[32bb288]"></a>GRAPH__AddValue</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, graph.o(i.GRAPH__AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GRAPH__AddValue &rArr; _InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32bc098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
<LI><a href="#[366ab54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>

<P><STRONG><a name="[2f3e778]"></a>GUIDEMO_AddIntToString</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, guidemo.o(i.GUIDEMO_AddIntToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIDEMO_AddIntToString
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3e3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_UpdateControlText
</UL>

<P><STRONG><a name="[2f3e73c]"></a>GUIDEMO_AddStringToString</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_AddStringToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIDEMO_AddStringToString
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3e3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_UpdateControlText
</UL>

<P><STRONG><a name="[2f3bcd0]"></a>GUIDEMO_Automotive</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, guidemo_automotive.o(i.GUIDEMO_Automotive))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Automotive &rArr; _AutomotiveDemo &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3bbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[2f3bc58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_EnableHiRes
<LI><a href="#[2f3bc94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DisableHiRes
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3a308]"></a>GUIDEMO_BarGraph</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guidemo_bargraph.o(i.GUIDEMO_BarGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_BarGraph &rArr; _DemoBarGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3dfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2f3dff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f39354]"></a>GUIDEMO_Bitmap</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidemo_bitmap.o(i.GUIDEMO_Bitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Bitmap &rArr; _BitmapDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BitmapDemo
<LI><a href="#[2f3e3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfoWin
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3e700]"></a>GUIDEMO_CheckCancel</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_CheckCancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2f3ea0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbEffect
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[30137c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Loop
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
<LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2f38f58]"></a>GUIDEMO_ColorBar</STRONG> (Thumb, 564 bytes, Stack size 128 bytes, guidemo_colorbar.o(i.GUIDEMO_ColorBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_ColorBar &rArr; GUIDEMO_ShowIntro &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f38ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevCap
<LI><a href="#[2f38f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2f3e73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddStringToString
<LI><a href="#[2f3e778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddIntToString
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3e0ac]"></a>GUIDEMO_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidemo_conf.o(i.GUIDEMO_Config))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[2f38aa8]"></a>GUIDEMO_Cursor</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, guidemo_cursor.o(i.GUIDEMO_Cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Cursor &rArr; GUIDEMO_ShowIntro &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f37fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[2f3801c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[2f38184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[2f3dfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2f3dff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[2f3e3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3e688]"></a>GUIDEMO_Delay</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, guidemo.o(i.GUIDEMO_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2f3d620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2f3ea84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowProgress
<LI><a href="#[2f3eafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HideProgress
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
</UL>

<P><STRONG><a name="[2f3e64c]"></a>GUIDEMO_DrawBk</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidemo.o(i.GUIDEMO_DrawBk))
<BR><BR>[Called By]<UL><LI><a href="#[2f36d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[2f38850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_VScreen
<LI><a href="#[2f3888c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f3897c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
<LI><a href="#[2f38aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f39354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[2f39624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BitmapDemo
<LI><a href="#[2f3a308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
</UL>

<P><STRONG><a name="[2f38a6c]"></a>GUIDEMO_Fading</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidemo_fading.o(i.GUIDEMO_Fading))
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3e610]"></a>GUIDEMO_GetConfFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidemo.o(i.GUIDEMO_GetConfFlag))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2f3e5d4]"></a>GUIDEMO_GetTime</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_GetTime &rArr; GUI_GetTime &rArr; GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2fb2fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[30d6204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[30d6240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
</UL>

<P><STRONG><a name="[2f38a30]"></a>GUIDEMO_Graph</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo_graph.o(i.GUIDEMO_Graph))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Graph &rArr; _GraphDemo &rArr; _ShowGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfoWin
<LI><a href="#[2f3e520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3e598]"></a>GUIDEMO_HideControlWin</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_HideControlWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_HideControlWin &rArr; WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_WashingMachine
</UL>

<P><STRONG><a name="[2f3e55c]"></a>GUIDEMO_HideInfoWin</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_HideInfoWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_HideInfoWin &rArr; WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_WashingMachine
<LI><a href="#[2f38940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Skinning
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
</UL>

<P><STRONG><a name="[2f389f4]"></a>GUIDEMO_IconView</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidemo_iconview.o(i.GUIDEMO_IconView))
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f389b8]"></a>GUIDEMO_ImageFlow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidemo_imageflow.o(i.GUIDEMO_ImageFlow))
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3e070]"></a>GUIDEMO_Intro</STRONG> (Thumb, 248 bytes, Stack size 56 bytes, guidemo_intro.o(i.GUIDEMO_Intro))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f35808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetVersionString
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[366b07c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[2f3897c]"></a>GUIDEMO_Listview</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guidemo_listview.o(i.GUIDEMO_Listview))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Listview &rArr; _DemoListview &rArr; _Action &rArr; _AddRow &rArr; LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f34df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfoWin
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2137930]"></a>GUIDEMO_Main</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, guidemo.o(i.GUIDEMO_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 768 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Main &rArr; _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetDefaultSkin
<LI><a href="#[2f3d530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultSkin
<LI><a href="#[2f3d698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetDefaultSkin
<LI><a href="#[2f3d800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[2f3d878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDefaultSkin
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3da58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetAnimationCallback
<LI><a href="#[2f3e034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBytes
<LI><a href="#[2f3e0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Config
<LI><a href="#[2f3e160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkinFlexProps
<LI><a href="#[2f3e19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetDefaultSkin
<LI><a href="#[2f3e1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetSkinFlexProps
<LI><a href="#[2f3e28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetReactOnLevel
<LI><a href="#[2f3e304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultSkin
<LI><a href="#[2f3e610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>
<BR>[Called By]<UL><LI><a href="#[213d18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUserIF
</UL>

<P><STRONG><a name="[2f3e520]"></a>GUIDEMO_NotifyStartNext</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_NotifyStartNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_NotifyStartNext &rArr; GUIDEMO_UpdateControlText &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3e3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_UpdateControlText
<LI><a href="#[2f3ec28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearHalt
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2f3888c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
<LI><a href="#[2f3e3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
</UL>

<P><STRONG><a name="[2f3e4e4]"></a>GUIDEMO_ShowControlWin</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_ShowControlWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_ShowControlWin &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
</UL>

<P><STRONG><a name="[2f3e4a8]"></a>GUIDEMO_ShowInfo</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidemo.o(i.GUIDEMO_ShowInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_ShowInfo &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2f395e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowMagnifiedBitmap
<LI><a href="#[2f39624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BitmapDemo
<LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2f3e46c]"></a>GUIDEMO_ShowInfoWin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidemo.o(i.GUIDEMO_ShowInfoWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_ShowInfoWin &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3888c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[2f3897c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
<LI><a href="#[2f38a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
<LI><a href="#[2f39354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
</UL>

<P><STRONG><a name="[2f3e430]"></a>GUIDEMO_ShowIntro</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, guidemo.o(i.GUIDEMO_ShowIntro))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_ShowIntro &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2f3e3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f3e4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowControlWin
<LI><a href="#[2f3e55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideInfoWin
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_WashingMachine
<LI><a href="#[2f38850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_VScreen
<LI><a href="#[2f3888c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Skinning
<LI><a href="#[2f3897c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
<LI><a href="#[2f38a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
<LI><a href="#[2f38aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f39354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[2f3a308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
<LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
</UL>

<P><STRONG><a name="[2f38940]"></a>GUIDEMO_Skinning</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo_skinning.o(i.GUIDEMO_Skinning))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Skinning &rArr; _DemoSkinning &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideInfoWin
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f38904]"></a>GUIDEMO_Speed</STRONG> (Thumb, 408 bytes, Stack size 128 bytes, guidemo_speed.o(i.GUIDEMO_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Speed &rArr; GUIDEMO_ShowIntro &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2f3dfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2f3dff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2f3e73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddStringToString
<LI><a href="#[2f3e778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddIntToString
<LI><a href="#[2fb2e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[2fb2eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[2fb2fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[366b1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f388c8]"></a>GUIDEMO_TransparentDialog</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidemo_transparentdialog.o(i.GUIDEMO_TransparentDialog))
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3888c]"></a>GUIDEMO_Treeview</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, guidemo_treeview.o(i.GUIDEMO_Treeview))
<BR><BR>[Stack]<UL><LI>Max Depth = 784 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Treeview &rArr; _DemoTreeview &rArr; _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2f3dff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfoWin
<LI><a href="#[2f3e520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3e3f4]"></a>GUIDEMO_UpdateControlText</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, guidemo.o(i.GUIDEMO_UpdateControlText))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_UpdateControlText &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f3e73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddStringToString
<LI><a href="#[2f3e778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddIntToString
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[2f38850]"></a>GUIDEMO_VScreen</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, guidemo_vscreen.o(i.GUIDEMO_VScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_VScreen &rArr; _DemoVScreen &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[3013660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2f3e3b8]"></a>GUIDEMO_Wait</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidemo.o(i.GUIDEMO_Wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3e520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
<LI><a href="#[2f39354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[2f39624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BitmapDemo
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
</UL>

<P><STRONG><a name="[2f38814]"></a>GUIDEMO_WashingMachine</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo_washingmachine.o(i.GUIDEMO_WashingMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_WashingMachine &rArr; _DemoWashingMachine &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideInfoWin
<LI><a href="#[2f3e598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideControlWin
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[21775d0]"></a>GUIDRV_FlexColor_Config</STRONG> (Thumb, 96 bytes, Stack size 80 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUIDRV_FlexColor_Config &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[32831dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2177594]"></a>GUIDRV_FlexColor_SetFunc</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor_SetFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUIDRV_FlexColor_SetFunc &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[32831dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2177558]"></a>GUIDRV_FlexColor_SetFunc66708</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, guidrv_flexcolor_func66708.o(i.GUIDRV_FlexColor_SetFunc66708))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUIDRV_FlexColor_SetFunc66708 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[32831dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[217751c]"></a>GUIDRV_FlexColor_SetMode16bppC0B16</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUIDRV_FlexColor_SetMode16bppC0B16 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[32831dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[3283254]"></a>GUIDRV_FlexColor__GetPixelIndexNoCache</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__GetPixelIndexNoCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUIDRV_FlexColor__GetPixelIndexNoCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[32831dc]"></a>GUIDRV_FlexColor__InitOnce</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[217751c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetMode16bppC0B16
<LI><a href="#[2177558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc66708
<LI><a href="#[2177594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[21775d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_Config
<LI><a href="#[3284c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_SetVSize
<LI><a href="#[3284c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_SetSize
<LI><a href="#[3284d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
</UL>

<P><STRONG><a name="[32830b0]"></a>GUIDRV_FlexColor__SetPixelIndexNoCache</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetPixelIndexNoCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUIDRV_FlexColor__SetPixelIndexNoCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[3403f3c]"></a>GUIMONO_DispChar</STRONG> (Thumb, 298 bytes, Stack size 104 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[318dbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[3403f00]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[3403ec4]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[3403e88]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[2f3a2cc]"></a>GUIPROP_AA4_DispChar</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, guiaa_char4.o(i.GUIPROP_AA4_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = GUIPROP_AA4_DispChar &rArr; GUI_AA__DrawCharAA4 &rArr; _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[30ce068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
<LI><a href="#[30ce0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[2fb896c]"></a>GUIPROP_AA4_EXT_DispChar</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, guiaa_char4ext.o(i.GUIPROP_AA4_EXT_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = GUIPROP_AA4_EXT_DispChar &rArr; GUI_AA__DrawCharAA4 &rArr; _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[30cda14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
<LI><a href="#[30cdf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[30ce0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
</UL>
<BR>[Address Reference Count : 4]<UL><LI> guidemo_skinning.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[2f3a290]"></a>GUIPROP_AA4_GetCharDistX</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guiaa_char4.o(i.GUIPROP_AA4_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_AA4_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[2f3a254]"></a>GUIPROP_AA4_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guiaa_char4.o(i.GUIPROP_AA4_GetFontInfo))
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[2f3a218]"></a>GUIPROP_AA4_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guiaa_char4.o(i.GUIPROP_AA4_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIPROP_AA4_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[2fb8930]"></a>GUIPROP_DispChar</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUIPROP_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2fb2e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[30cdf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[30ce068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[318dbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 11]<UL><LI> guidemo_resource.o(.constdata)
<LI> hwhb_32.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f16_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> fcomic18b_1.o(.constdata)
<LI> fcomic24b_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[2fb88f4]"></a>GUIPROP_EXT_GetCharDistX</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, gui_charpext.o(i.GUIPROP_EXT_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIPROP_EXT_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[30cda14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 4]<UL><LI> guidemo_skinning.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[2fb88b8]"></a>GUIPROP_EXT_GetCharInfo</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gui_charpext.o(i.GUIPROP_EXT_GetCharInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIPROP_EXT_GetCharInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[30cda14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 4]<UL><LI> guidemo_skinning.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[2fb887c]"></a>GUIPROP_EXT_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT_GetFontInfo))
<BR>[Address Reference Count : 4]<UL><LI> guidemo_skinning.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[2fb8840]"></a>GUIPROP_EXT_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charpext.o(i.GUIPROP_EXT_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_EXT_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[30cda14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 4]<UL><LI> guidemo_skinning.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
<LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[3182dc8]"></a>GUIPROP_EXT__ClearLine</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, gui_encext.o(i.GUIPROP_EXT__ClearLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUIPROP_EXT__ClearLine &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2fb2e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[30cda14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
<LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[3186b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encext.o(.data)
</UL>
<P><STRONG><a name="[3182d8c]"></a>GUIPROP_EXT__DispLine</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, gui_encext.o(i.GUIPROP_EXT__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUIPROP_EXT__DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encext.o(.constdata)
</UL>
<P><STRONG><a name="[30cda14]"></a>GUIPROP_EXT__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[2fb8840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_IsInFont
<LI><a href="#[2fb88b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_GetCharInfo
<LI><a href="#[2fb88f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_GetCharDistX
<LI><a href="#[2fb896c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[3182dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[2fb8804]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 11]<UL><LI> guidemo_resource.o(.constdata)
<LI> hwhb_32.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f16_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> fcomic18b_1.o(.constdata)
<LI> fcomic24b_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[2fb87c8]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 11]<UL><LI> guidemo_resource.o(.constdata)
<LI> hwhb_32.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f16_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> fcomic18b_1.o(.constdata)
<LI> fcomic24b_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[2fb878c]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 11]<UL><LI> guidemo_resource.o(.constdata)
<LI> hwhb_32.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f16_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> fcomic18b_1.o(.constdata)
<LI> fcomic24b_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[30ce068]"></a>GUIPROP__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[2f3a218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_IsInFont
<LI><a href="#[2f3a290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_GetCharDistX
<LI><a href="#[2f3a2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
<LI><a href="#[2fb878c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[2fb8804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[2fb8930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[318ba68]"></a>GUITASK_CopyContext</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gui_task.o(i.GUITASK_CopyContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUITASK_CopyContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[21378f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[318ba2c]"></a>GUITASK_Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_task.o(i.GUITASK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUITASK_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2178cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[30cc5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[21378f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2f3bc94]"></a>GUI_AA_DisableHiRes</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_DisableHiRes))
<BR><BR>[Called By]<UL><LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
</UL>

<P><STRONG><a name="[301666c]"></a>GUI_AA_DrawArc</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, guiaa_arc.o(i.GUI_AA_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = GUI_AA_DrawArc &rArr; _DrawArcAA &rArr; GL_DrawArc &rArr; _DrawArc &rArr; floor &rArr; __aeabi_drsub
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[30cea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30cee78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>
<BR>[Called By]<UL><LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[30d2ab4]"></a>GUI_AA_DrawLine</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, guiaa_line.o(i.GUI_AA_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI_AA_DrawLine &rArr; _AA_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[30cea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[2f3bc58]"></a>GUI_AA_EnableHiRes</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_EnableHiRes))
<BR><BR>[Called By]<UL><LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
</UL>

<P><STRONG><a name="[30cebe4]"></a>GUI_AA_Exit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guiaa_lib.o(i.GUI_AA_Exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_AA_Exit &rArr; _FlushLine &rArr; LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[30ccf4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Called By]<UL><LI><a href="#[30cbe30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[30cc31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[30cd4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
<LI><a href="#[30cee78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[2f3bc1c]"></a>GUI_AA_FillPolygon</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, guiaa_poly.o(i.GUI_AA_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = GUI_AA_FillPolygon &rArr; _FillPolygonAA &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cbe30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[30cea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3beec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[2f3bf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
</UL>

<P><STRONG><a name="[30cc6a0]"></a>GUI_AA_Init</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, guiaa_lib.o(i.GUI_AA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[30cc5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[30cd03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
<LI><a href="#[30cd294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcClipRectHL
</UL>
<BR>[Called By]<UL><LI><a href="#[30cbe30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[30cc31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[30ceba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
</UL>

<P><STRONG><a name="[30ceba8]"></a>GUI_AA_Init_HiRes</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_Init_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30cd4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
<LI><a href="#[30cee78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[2f3bbe0]"></a>GUI_AA_SetFactor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_SetFactor))
<BR><BR>[Calls]<UL><LI><a href="#[30cd294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcClipRectHL
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
</UL>

<P><STRONG><a name="[30ce0e0]"></a>GUI_AA__DrawCharAA4</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, guiaa_char4.o(i.GUI_AA__DrawCharAA4))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUI_AA__DrawCharAA4 &rArr; _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_Trans
<LI><a href="#[30ce680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
<LI><a href="#[2fb896c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
</UL>

<P><STRONG><a name="[34be2d4]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_alloc_allocinit.o(i.GUI_ALLOC_AllocInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[318f4c4]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3190694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[3484734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[34be2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>

<P><STRONG><a name="[31b32ec]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_alloc_alloczero.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2f36a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3013ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[31b49a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[327ec7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[32811fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[32bb24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[3318258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[331bda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[331bf84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
<LI><a href="#[331cb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[331d280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpCellInfo
<LI><a href="#[336b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[33d2d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[3483b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[34bdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
</UL>

<P><STRONG><a name="[2f41964]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[2f419a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[318f488]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[319070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Delete
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2fb35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3013e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[31b49a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[327ec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[32811c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[32bbfa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[331bf0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3320688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[3323478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[33d2d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[3484734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[3485274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[34bdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
</UL>

<P><STRONG><a name="[30cc664]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[30cced4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[31871c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[31b7888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[31b7978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[340b688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[35012ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[318f44c]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[318f410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[32bb1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[3318258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[331a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[331cb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[3483b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[34b6318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[34be310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
</UL>

<P><STRONG><a name="[318f410]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtrArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_FreePtrArray &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[30cc628]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[319034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[31903c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeMemory
<LI><a href="#[31904b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[31905a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetFreeTag
<LI><a href="#[319070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[31871fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[318ba2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[31b7978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[32831dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[3284d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
<LI><a href="#[32c52d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[3500e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[318f3d4]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_GetMaxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[31904b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[318f230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
</UL>

<P><STRONG><a name="[2f3e034]"></a>GUI_ALLOC_GetNumFreeBytes</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetNumFreeBytes))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[318f2e4]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetSize))
<BR><BR>[Called By]<UL><LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[3318258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[33d2938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNumBytes
</UL>

<P><STRONG><a name="[318f2a8]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[32c4324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[318f26c]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3441c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[2f34458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[2f34494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[2f344d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[2f3450c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[2f34548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[2f34674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[2f346b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[2f346ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2f34890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[2f36744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2f36780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2f367bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2f367f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2f36834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2f36870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2f368ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2f368e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2f36960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f369d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2f36a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2f36a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[2f36b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[2f36b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[2f3d404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f3d440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[2f3d56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2f3d5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2f3d620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[2f3d65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[2f3e0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2f3e124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2fb36b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[2fb3728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[2fb3818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[2fb3b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[2fb3c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[2fb3cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[2fb3d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[2fb3db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[2fb3df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[2fb3e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[3013d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[3013da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[3013ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[3013f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[3013fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[3013ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[30140b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[30d2af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[318aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[318ac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[31b3e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[31b3ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[31b3f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[31b3fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[31b40c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[31b4138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[31b4228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[31b4390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[31b4480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[31b47c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[31b4840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[31b48b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[31b49a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[327c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveStaticDevice
<LI><a href="#[327ebc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[327ec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[327ec7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[327f1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[32812b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[32bb030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32bb1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[32bb4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[32bbeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32bbfa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[32bc098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
<LI><a href="#[32bca34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[32bd04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32bd484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[32bd4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[32bf554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[32bf590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[32bf5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[32bf6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[32bfef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[32bff68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[32c0cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c19a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[32c1a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[32c1b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[32c2830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[32c2bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[32c2f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c2fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[32c3280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[32c367c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[32c5350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[32c5a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c5ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[32c5ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[32c68e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c6958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[32c745c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[32c7510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[32c7678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[32c77a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[32c7eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[32c7f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[32c7f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[32c8014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[32c808c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[32c8de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
<LI><a href="#[3315dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3315e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33170c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[331713c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33171b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[3317b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3317fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[3318258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[3319464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33194dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[331a79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[331a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[331b7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[331bda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[331be1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[331be94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
<LI><a href="#[331bf0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[331bf84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
<LI><a href="#[331cb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[331cf74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetTextColor
<LI><a href="#[331cfb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetBkColor
<LI><a href="#[331d280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpCellInfo
<LI><a href="#[331db68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[331f5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[331f620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[331f65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[331f800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[331f8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__MoveSel
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[3320430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3320520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[3320688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3320dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[3320e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[33214d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[33215c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[3321ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3321d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3322adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3323400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3323478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[336b214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[336b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[336b4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[336c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[336c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[336c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[336c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[336cb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[336cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[336cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[336ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[336ceac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
<LI><a href="#[336cf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[336cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevItem
<LI><a href="#[336d014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
<LI><a href="#[336d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
<LI><a href="#[336d104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[336d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[336d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConnectLines
<LI><a href="#[336d2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[336d3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[336d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[3480198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
<LI><a href="#[348024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34806c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[3481188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[34811c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[3481a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[3481ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[3481b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[3481b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[3481b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[3481bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[3481c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[3481c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3481d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3481f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3483b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[3483b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[3484734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[34b6318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[34b81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[34b8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34b8988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[34b8a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[34b9054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[34b9090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[34b9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[34b9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[34b97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[34bca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[34bdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
<LI><a href="#[34be310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[34be34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[34be388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[355bee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3561d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3561dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3562550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonSize
<LI><a href="#[356591c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3565ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3566ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3566ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3566d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3566e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[3566ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[3566f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[3566fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3568310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[32c0c4c]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_realloc.o(i.GUI_ALLOC_Realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[32c1a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[331bda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[318f230]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_RequestSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[2f41928]"></a>GUI_ALLOC_SetAvBlockSize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_SetAvBlockSize))
<BR><BR>[Called By]<UL><LI><a href="#[2f419a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[318f1f4]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[32c4324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[318f1b8]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[2f3441c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[2f34458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[2f34494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[2f344d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[2f3450c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[2f34548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[2f34674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[2f346b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[2f346ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2f34890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[2f36744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2f36780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2f367bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2f367f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2f36834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2f36870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2f368ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2f368e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2f36960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f369d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2f36a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2f36a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[2f36b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[2f36b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[2f3d404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f3d440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[2f3d56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2f3d5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2f3d620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[2f3d65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[2f3e0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2f3e124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2fb36b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[2fb3728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[2fb3818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[2fb3b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[2fb3c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[2fb3cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[2fb3d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[2fb3db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[2fb3df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[2fb3e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[3013d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[3013da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[3013ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[3013f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[3013fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[3013ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[30140b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[30d2af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[318aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[318ac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[31b3e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[31b3ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[31b3f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[31b3fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[31b40c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[31b4138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[31b4228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[31b4390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[31b4480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[31b47c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[31b4840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[31b48b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[31b49a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[327c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveStaticDevice
<LI><a href="#[327ebc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[327ec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[327ec7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[327f1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[32812b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[32bb030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32bb1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[32bb4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[32bbeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32bbfa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[32bc098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
<LI><a href="#[32bca34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[32bd04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32bd484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[32bd4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[32bf554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[32bf590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[32bf5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[32bf6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[32bfef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[32bff68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[32c0cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c19a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[32c1a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[32c1b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[32c2830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[32c2bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[32c2f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c2fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[32c3280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[32c367c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[32c5350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[32c5a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c5ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[32c5ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[32c68e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c6958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[32c745c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[32c7510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[32c7678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[32c77a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[32c7eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[32c7f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[32c7f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[32c8014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[32c808c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[32c8de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
<LI><a href="#[3315dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3315e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33170c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[331713c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33171b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[3317b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3317fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[3318258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[3319464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33194dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[331a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[331b7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[331bda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[331be1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[331be94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
<LI><a href="#[331bf0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[331bf84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
<LI><a href="#[331bffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Compare
<LI><a href="#[331cb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[331cf74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetTextColor
<LI><a href="#[331cfb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetBkColor
<LI><a href="#[331d280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpCellInfo
<LI><a href="#[331db68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[331f5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[331f620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[331f65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[331f800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[331f8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__MoveSel
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[3320430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3320520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[3320688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3320dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[3320e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[33214d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[33215c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[3321ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3321d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3322adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3323400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3323478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[336b214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[336b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[336b4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[336c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[336c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[336c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[336c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[336cb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[336cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[336cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[336ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[336ceac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
<LI><a href="#[336cf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[336cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevItem
<LI><a href="#[336d014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
<LI><a href="#[336d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
<LI><a href="#[336d104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[336d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[336d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConnectLines
<LI><a href="#[336d2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[336d3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[336d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[3480198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
<LI><a href="#[348024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34806c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[3481188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[34811c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[3481a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[3481ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[3481b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[3481b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[3481b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[3481bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[3481c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[3481c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3481d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3481f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3483b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[3483b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[3484734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[34b6318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[34b81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[34b8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34b8988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[34b8a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[34b9054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[34b9090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[34b9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[34b9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[34b97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[34bca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[34bcb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[34bcbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[34bdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
<LI><a href="#[34be310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[34be388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[355bee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3561d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3561dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3562550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonSize
<LI><a href="#[356591c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[3565a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3565ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[3565b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3566ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3566ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3566d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3566e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[3566ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[3566f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[3566fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3568310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[318f17c]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f36654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3d044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[2f3d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2f3db0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[2fb35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[2fb3674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3016360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[3016414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3016450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30d285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[30d2898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[31b6b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[31b6ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[31b6be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[327ec04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[327ecb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
<LI><a href="#[327f7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[327f870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[327f8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[327f9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[327fc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[327fca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[327fd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[32811c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[32811fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[32812ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[32bf2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[32bf428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[32bf4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[32c42ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[32c736c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[32c73a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[32c9220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[32c9928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[32c9964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[336024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3361d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[336498c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[336579c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[3365cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[3366174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[3366354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[3366390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[3366408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[3366444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[3366480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[33664f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3366534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[3366570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[33665e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[3366624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[3366660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[33666d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[3366750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[33667c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[3367bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[3367c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[3367ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3367d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3367ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[3367f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3367fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3368028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[33680a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[3368118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[33682f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3369630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[33cc290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[33d2c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[33d2c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[33d2cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[33d2cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[33d2d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[33d2d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[33d30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[33d343c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[340a404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[340a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[340ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[340ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[3485b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[3486084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[3486174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[3487218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
<LI><a href="#[3487290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkPixel
<LI><a href="#[3487fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3487fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[3488ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3488b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[3488ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[3488c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[3488eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[3488f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[3489054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[34b3348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[34be2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[350166c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[350247c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[3502b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[35049c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[35049fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[3504d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[3506220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[3506874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[355b32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[355b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[355e98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[3560048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[3560bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>

<P><STRONG><a name="[32c3eb0]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[34be2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2f36b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[2f36b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[2fb3e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[32bb24c]"></a>GUI_ARRAY_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_array.o(i.GUI_ARRAY_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[32bb4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[32bb210]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[32bbfa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[3320688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[34b9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[32bb1d4]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gui_array_deleteitem.o(i.GUI_ARRAY_DeleteItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_DeleteItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f369d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
</UL>

<P><STRONG><a name="[32bb198]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_array.o(i.GUI_ARRAY_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f369d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32bbfa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[331bda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[331f65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[331fa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[3321ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3481d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[34bcb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[34bcbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[32bb15c]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34be388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f369d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32bbfa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[32c2bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3566ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[3321948]"></a>GUI_ARRAY_GetpItemLocked</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34be34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3441c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[2f34548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[331bffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Compare
<LI><a href="#[331d280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpCellInfo
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[331f8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__MoveSel
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3320688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[33214d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3321ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[34bcb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[34bcbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[3565ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[3565b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3566e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[3566f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[34bdaa0]"></a>GUI_ARRAY_InsertBlankItem</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, gui_array_insertitem.o(i.GUI_ARRAY_InsertBlankItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_InsertBlankItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[331de38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
</UL>

<P><STRONG><a name="[331de38]"></a>GUI_ARRAY_InsertItem</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_array_insertitem.o(i.GUI_ARRAY_InsertItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_InsertItem &rArr; GUI_ARRAY_SetItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[3318258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[34bdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
</UL>

<P><STRONG><a name="[331cb78]"></a>GUI_ARRAY_ResizeItemLocked</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gui_array_resizeitem.o(i.GUI_ARRAY_ResizeItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_ResizeItemLocked &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[34be310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[34be34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
</UL>

<P><STRONG><a name="[3318258]"></a>GUI_ARRAY_SetItem</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gui_array.o(i.GUI_ARRAY_SetItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_SetItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb36b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[331de38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
</UL>

<P><STRONG><a name="[34be388]"></a>GUI_ARRAY__GethItem</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[34be34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>

<P><STRONG><a name="[34be34c]"></a>GUI_ARRAY__GetpItemLocked</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_array.o(i.GUI_ARRAY__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34be388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[331cb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>

<P><STRONG><a name="[34be310]"></a>GUI_ARRAY__SethItem</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__SethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY__SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[331cb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
</UL>

<P><STRONG><a name="[31b17bc]"></a>GUI_AddDecMin</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_adddecmin.o(i.GUI_AddDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_AddDecMin &rArr; GUI_Long2Len
</UL>
<BR>[Calls]<UL><LI><a href="#[31b1708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[331adb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>

<P><STRONG><a name="[31b1780]"></a>GUI_AddDecShift</STRONG> (Thumb, 132 bytes, Stack size 20 bytes, gui_adddecshift.o(i.GUI_AddDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[31b17f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[31b18ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>

<P><STRONG><a name="[31b1744]"></a>GUI_AddSign</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_adddecshift.o(i.GUI_AddSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_AddSign
</UL>
<BR>[Called By]<UL><LI><a href="#[31b17f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
</UL>

<P><STRONG><a name="[318ad84]"></a>GUI_CURSOR_GetStateEx</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_curs1.o(i.GUI_CURSOR_GetStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_GetStateEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[34bc9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[2f3dff8]"></a>GUI_CURSOR_Hide</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_curs1.o(i.GUI_CURSOR_Hide))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_Hide &rArr; GUI_CURSOR_HideEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; GUI_MEMDEV_Select &rArr; WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3888c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
<LI><a href="#[2f3a308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[318ad48]"></a>GUI_CURSOR_HideEx</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gui_curs1.o(i.GUI_CURSOR_HideEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_HideEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; GUI_MEMDEV_Select &rArr; WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[318abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[318ac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[318ac58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3dff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
</UL>

<P><STRONG><a name="[2f3801c]"></a>GUI_CURSOR_Select</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_curs1.o(i.GUI_CURSOR_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_Select &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
</UL>

<P><STRONG><a name="[318ad0c]"></a>GUI_CURSOR_SelectEx</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, gui_curs1.o(i.GUI_CURSOR_SelectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[30cc5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318aab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[318ab2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[318ac58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[318b39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3801c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[318ac94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[34bc9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[2f37fe0]"></a>GUI_CURSOR_SetPosition</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_curs1.o(i.GUI_CURSOR_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_SetPosition &rArr; GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; GUI_MEMDEV_Select &rArr; WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
</UL>

<P><STRONG><a name="[318acd0]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gui_curs1.o(i.GUI_CURSOR_SetPositionEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; GUI_MEMDEV_Select &rArr; WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318aaf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[318abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[318ac58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[2f37fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[2f3dfbc]"></a>GUI_CURSOR_Show</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_curs1.o(i.GUI_CURSOR_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_Show &rArr; GUI_CURSOR_ShowEx &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318ac94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3888c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
<LI><a href="#[2f3a308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[318ac94]"></a>GUI_CURSOR_ShowEx</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_curs1.o(i.GUI_CURSOR_ShowEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_ShowEx &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[318b39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3dfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
</UL>

<P><STRONG><a name="[34fe264]"></a>GUI_CalcColorDist</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gui_calccolordist.o(i.GUI_CalcColorDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[34fe714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[2f3df80]"></a>GUI_Clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_Clear &rArr; GUI_GotoXY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2f3eb74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkSimple
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[3367b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2f3df44]"></a>GUI_ClearRect</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3beec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[2f3bf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[32bc200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[32c097c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[336af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
</UL>

<P><STRONG><a name="[336af44]"></a>GUI_ClearRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_clearrectex.o(i.GUI_ClearRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[32c097c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[2fb2eb8]"></a>GUI_Color2Index</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_color2index.o(i.GUI_Color2Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_Color2Index &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318c800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[2f3df08]"></a>GUI_CreateDialogBox</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dialog.o(i.GUI_CreateDialogBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2fb350c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[30d2820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[32c42e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>

<P><STRONG><a name="[31871fc]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[21774e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[31b7978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[327ec7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[21774e0]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[3187184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[31871fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[31871c0]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[30cc664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[31b7888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[31b7978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[327ec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[327ec7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[3187184]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[21774e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[2f39f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[31b4390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[327ebc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
</UL>

<P><STRONG><a name="[3187148]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Called By]<UL><LI><a href="#[2f39f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[31b3ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[327ec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[340c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[318710c]"></a>GUI_DEVICE__GetpDevice</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDevice))
<BR><BR>[Called By]<UL><LI><a href="#[2f39f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[31870d0]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[2177378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[21773b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[2f3dbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[318b93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[31aec24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevCap
<LI><a href="#[31af23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[32267d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[3226938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[32269b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[3226c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[33cd640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[3405a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[3406660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[3483b04]"></a>GUI_DRAW_SELF_Create</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gui_draw_self.o(i.GUI_DRAW_SELF_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_DRAW_SELF_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[3483b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>

<P><STRONG><a name="[32c5ddc]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gui_draw.o(i.GUI_DRAW__Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[33214d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3320e08]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[33214d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3320dcc]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[33214d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2f3decc]"></a>GUI_Delay</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gui_time.o(i.GUI_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2178d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[2178e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[318f2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[30137c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Loop
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
<LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[2f37cd4]"></a>GUI_DispCharAt</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_dispchar.o(i.GUI_DispCharAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3186eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[30d62b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCheckbox
</UL>

<P><STRONG><a name="[2f3bba4]"></a>GUI_DispDecAt</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispDecAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[31b1780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
</UL>

<P><STRONG><a name="[2f3a1a0]"></a>GUI_DispDecMin</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[31b17bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
</UL>

<P><STRONG><a name="[31b18ac]"></a>GUI_DispDecShift</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[31b1780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[3408d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[3322398]"></a>GUI_DispFloatMin</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_valf.o(i.GUI_DispFloatMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = GUI_DispFloatMin &rArr; _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>
<BR>[Called By]<UL><LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
</UL>

<P><STRONG><a name="[318e27c]"></a>GUI_DispNextLine</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_char.o(i.GUI_DispNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[318e2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>

<P><STRONG><a name="[31b17f8]"></a>GUI_DispSDecShift</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispSDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[31b1744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[31b1780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[3408d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[30d2a3c]"></a>GUI_DispString</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31866bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[31866f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[3186734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[3186770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[318e204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[31b17f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[31b18ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[34ba0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>

<P><STRONG><a name="[2f3bb68]"></a>GUI_DispStringAt</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_dispstringat.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3bba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3d6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2fb3728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[32c097c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2f3de90]"></a>GUI_DispStringHCenterAt</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gui_dispstringhcenter.o(i.GUI_DispStringHCenterAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3beec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[2f3bf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d5fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[30d609c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[30d62f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[30165f4]"></a>GUI_DispStringInRect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_dispstringinrect.o(i.GUI_DispStringInRect))
<BR><BR>[Called By]<UL><LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
<LI><a href="#[32c2830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3185a50]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, gui_dispstringinrect.o(i.GUI_DispStringInRectMax), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[3185a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[34b6228]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, gui_dispstringinrectwrap.o(i.GUI_DispStringInRectWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31866f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[3186734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[34ff7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[34ff7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[34ff830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>
<BR>[Called By]<UL><LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2f3de54]"></a>GUI_DrawBitmap</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f39624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BitmapDemo
<LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3beec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[2f3bf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3eb74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkSimple
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2f3ebec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[30d609c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[30d62b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCheckbox
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2f3a164]"></a>GUI_DrawBitmapMag</STRONG> (Thumb, 204 bytes, Stack size 88 bytes, gui_drawbitmapmag.o(i.GUI_DrawBitmapMag))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GUI_DrawBitmapMag &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3185474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[31854b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[318dbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[2f395e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowMagnifiedBitmap
<LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
</UL>

<P><STRONG><a name="[2f3de18]"></a>GUI_DrawCircle</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gui_circ.o(i.GUI_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_DrawCircle &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318cd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
</UL>

<P><STRONG><a name="[32c4c84]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, gui_drawfocusrect.o(i.GUI_DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318b978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[2fb3728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[32c5350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[3369978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[2f38f1c]"></a>GUI_DrawGradientH</STRONG> (Thumb, 106 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientH))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3184628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[3315594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[3316908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
<LI><a href="#[3318e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[2f3dddc]"></a>GUI_DrawGradientV</STRONG> (Thumb, 106 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientV))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3184628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2f3e994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2f3ebec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d62f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[32c28a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[32c53c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[331560c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[3316980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
<LI><a href="#[3318e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[332145c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[332154c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[3322f14]"></a>GUI_DrawGraphEx</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, gui_drawgraphex.o(i.GUI_DrawGraphEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GUI_DrawGraphEx &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[33c8078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraph
</UL>
<BR>[Called By]<UL><LI><a href="#[3323400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[2f3a128]"></a>GUI_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, gui_drawhline.o(i.GUI_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[2f3d4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[2f3d6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2fb3df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[32bc188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[32bc200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[32c28a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3315594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[331560c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[3315684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[33156fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[3316188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[33167a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[3316890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[332145c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[332154c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[33215c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3369900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[34b4eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[34b4f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3567c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
</UL>

<P><STRONG><a name="[32bb120]"></a>GUI_DrawLine</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_drawline.o(i.GUI_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc0c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[32bc188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[3315594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[331560c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
</UL>

<P><STRONG><a name="[32bc9f8]"></a>GUI_DrawPixel</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_drawpixel.o(i.GUI_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_DrawPixel &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[3316890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[30d2a00]"></a>GUI_DrawRect</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ca3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[30ca3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[32c53c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[33691f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[33692e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b4eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>

<P><STRONG><a name="[2f3a0ec]"></a>GUI_DrawRoundedRect</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gui_drawroundedrect.o(i.GUI_DrawRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = GUI_DrawRoundedRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3183944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
</UL>

<P><STRONG><a name="[30d29c4]"></a>GUI_DrawVLine</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_drawvline.o(i.GUI_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ca3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[2f3d6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[32bc188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[32bc200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[32c28a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3315594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[331560c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[3315684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[33156fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[3316188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[3316818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[3316890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[332145c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[332154c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3369900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[34b4eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[34b4f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[2fb3aac]"></a>GUI_EndDialog</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, dialog.o(i.GUI_EndDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_EndDialog &rArr; GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[32c42ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[32c439c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[32befb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClose
<LI><a href="#[331b228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Callback
</UL>

<P><STRONG><a name="[2f3dda0]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_exec.o(i.GUI_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[3182300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowControlWin
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2f3ea0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbEffect
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2fb3a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[3182300]"></a>GUI_Exec1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_exec.o(i.GUI_Exec1))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30d294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[2fb3a70]"></a>GUI_ExecCreatedDialog</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dialog.o(i.GUI_ExecCreatedDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[32c4324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[32c4360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MessageBox
</UL>

<P><STRONG><a name="[2f3a0b0]"></a>GUI_FillRect</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, gui_fillrect.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2fb2fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d609c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[30d62f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[32bc9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[32c28a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3315684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[33156fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[32bc9bc]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_fillrectex.o(i.GUI_FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[3369888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2f3a074]"></a>GUI_FillRoundedRect</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, gui_fillroundedrect.o(i.GUI_FillRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GUI_FillRoundedRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ca3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318cbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
</UL>

<P><STRONG><a name="[31b32b0]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_getbitmappixelindex.o(i.GUI_GetBitmapPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31b3274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31b3f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[31b3fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[31b40c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[31b4228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[31b4318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
<LI><a href="#[31b4750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkPixel
<LI><a href="#[31b47c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[31b4840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[31b48b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31b3274]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, gui_getbitmappixelindex.o(i.GUI_GetBitmapPixelIndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[31b4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31af458]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[3404fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
<LI><a href="#[3484734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[3484a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[2fb2e7c]"></a>GUI_GetBkColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_GetBkColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31bbf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb2fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[2fb8930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[3182dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[2f3baf0]"></a>GUI_GetCharDistX</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[3016504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[3182a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLineDistX_SJIS
<LI><a href="#[31866f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[3186eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[33cf224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
<LI><a href="#[33cf29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
<LI><a href="#[355de10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[355e284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[355e2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[318e240]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3186b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[31859d8]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getclientrect.o(i.GUI_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[3185a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2fb2e40]"></a>GUI_GetColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3184cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb2fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[2fb8930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[30d62b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCheckbox
<LI><a href="#[3182dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[3184628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[31851e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[318ac58]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_GetCursorLayer))
<BR><BR>[Called By]<UL><LI><a href="#[318acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[318ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[318b39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[32c439c]"></a>GUI_GetDialogStatusPtr</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, dialog.o(i.GUI_GetDialogStatusPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>

<P><STRONG><a name="[2fb39bc]"></a>GUI_GetDispPosY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getdisppos.o(i.GUI_GetDispPosY))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_GetDispPosY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
</UL>

<P><STRONG><a name="[2f3dc74]"></a>GUI_GetFontDistY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontDistY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[3185a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[318e27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[32c0aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[3317bc8]"></a>GUI_GetFontInfo</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_getfontinfo.o(i.GUI_GetFontInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontInfo &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2f3a038]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getfontsizey.o(i.GUI_GetFontSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31bb6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[3186eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[331a760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[336d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[340cdf8]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_GetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3226c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[32bb0e4]"></a>GUI_GetLineStyle</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_getlinestyle.o(i.GUI_GetLineStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_GetLineStyle &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[32bc188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
</UL>

<P><STRONG><a name="[3488028]"></a>GUI_GetOrg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_getorg.o(i.GUI_GetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_GetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34feed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[30ceb30]"></a>GUI_GetPenSize</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_pen.o(i.GUI_GetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_GetPenSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[30cee78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[2f3bab4]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getstringdistx.o(i.GUI_GetStringDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[31866f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[31bb2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[32c0aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c5350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[331a760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[336d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[3016504]"></a>GUI_GetTextExtend</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, gui_gettextextend.o(i.GUI_GetTextExtend))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_GetTextExtend &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[31bb6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[2f3dc38]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_time.o(i.GUI_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_GetTime &rArr; GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2178d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[33d2cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[340a404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[340a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
</UL>

<P><STRONG><a name="[2f35808]"></a>GUI_GetVersionString</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_getversionstring.o(i.GUI_GetVersionString))
<BR><BR>[Called By]<UL><LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
</UL>

<P><STRONG><a name="[318e204]"></a>GUI_GetYAdjust</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_GetYAdjust &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[331f7c4]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_getysizeoffont.o(i.GUI_GetYDistOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[331f9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[3481d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[32c4c48]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_getysizeoffont.o(i.GUI_GetYSizeOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[32bf608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[32c5350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[31b6c1c]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[31b7a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[32c9658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawColumnScaled
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3184d30]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[31851e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[31b7a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[3484a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[2f39ffc]"></a>GUI_GotoXY</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_goto.o(i.GUI_GotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_GotoXY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31ba7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
<LI><a href="#[31ba81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3486174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[34ba0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>

<P><STRONG><a name="[21378f4]"></a>GUI_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = GUI_Init &rArr; GUI__Config &rArr; LCD_X_Config &rArr; GUIDRV_FlexColor_Config &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2178d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[3013660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[318b888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[318b93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[318ba2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[318ba68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[318baa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[318c440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Called By]<UL><LI><a href="#[213d18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUserIF
</UL>

<P><STRONG><a name="[32c0c10]"></a>GUI_InvertRect</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, gui_invertrect.o(i.GUI_InvertRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_InvertRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31854b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[30ceaf4]"></a>GUI_Lock</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, gui_task.o(i.GUI_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2178c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[2178d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3441c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[2f34458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[2f34494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[2f344d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[2f3450c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[2f34548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f345fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[2f34638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[2f34674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[2f346b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[2f346ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[2f34728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2f34890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f36654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2f36744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2f36780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2f367bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2f367f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2f36834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2f36870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2f368ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2f368e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2f36960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f369d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2f36a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[2f36a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2f36a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[2f36b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[2f36b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[2f37cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[2f38f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2f39ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2f39f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f3a074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3a164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2f3bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3d044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[2f3d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[2f3d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f3d440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2f3d5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2f3d620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[2f3d65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2f3db0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3dbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[2f3dbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3de18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2f3e0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2f3e124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2fb2e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2fb2e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[2fb2eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[2fb3458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[2fb34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[2fb35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[2fb3674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[2fb36b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[2fb3818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[2fb38cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[2fb3980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[2fb39bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDispPosY
<LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[2fb3b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[2fb3c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[2fb3cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[2fb3d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[2fb3db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[2fb3e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[3013660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3013d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[3013da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[3013de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[3013e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[3013e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[3013ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[3013f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[3013f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[3013f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[3013fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[3013ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[30140b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[30162ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[3016360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[3016414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3016450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[301666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[30cc088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[30ceb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[30d2820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[30d285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[30d2898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[30d2ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[30d2af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[31854b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[3185a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[318aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[318aab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[318aaf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[318ab2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[318aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[318abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[318ac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[318ac94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[318acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[318ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[318ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[318e204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[318e240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[318e27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[318e2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[318f230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[31b6b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[31b6ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[31b6be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[31b96c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[31b97b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[327ebc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[327ec04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[327ec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[327ec7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[327ecb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
<LI><a href="#[32810d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[32811c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[32811fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[32bb030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[32bb0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[32bb0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[32bb120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[32bb1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[32bb4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[32bc980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[32bc9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[32bca34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[32bece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[32bf3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[32bf428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[32bf4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[32bf6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[32bf734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[32c0b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[32c0b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[32c0bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[32c0c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[32c3280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[32c367c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[32c42e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[32c4324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[32c5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[32c736c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[32c73a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[32c745c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[32c7510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[32c7678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[32c77a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[32c9220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[32c9928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[32c9964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[32c99a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[3317448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[3317bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[331b7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[331cf74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetTextColor
<LI><a href="#[331cfb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetBkColor
<LI><a href="#[331db68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[331f5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[331f620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[331f65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[3322f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[3323838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[336024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[33625b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[336579c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[3366174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[33661ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[33667c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[336ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[336b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[336b4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[336cc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[33d2cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[33d2cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[33d2d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[33d2d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[33d343c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[33d38b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[340a3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[340a404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[340a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[340cdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[3480198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
<LI><a href="#[3481188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[34811c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[34815fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[34819f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[3481a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[3481ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[3481b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[3481b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[3481b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[3481bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[3481c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[3481c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3481f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[3483b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[3483b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[3485b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[3487fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3487fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[3488028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[34b1728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[34b7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[34b81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[34b8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[34b9090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[34b9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[34be2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[34ff830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[35015b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[3506874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[355b32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[355b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[355bee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[35658e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[356591c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[3565bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3565ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[3565d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3565e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[31b1708]"></a>GUI_Long2Len</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_adddecshift.o(i.GUI_Long2Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[31b17bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[327ecb8]"></a>GUI_MEASDEV_ClearRect</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, guidev_measure.o(i.GUI_MEASDEV_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_MEASDEV_ClearRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ba00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[327ec7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
</UL>

<P><STRONG><a name="[327ec7c]"></a>GUI_MEASDEV_Create</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = GUI_MEASDEV_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31871c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[31871fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[327ecb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ba00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[327ec40]"></a>GUI_MEASDEV_Delete</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_MEASDEV_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3187148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[31871c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ba00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[327ec04]"></a>GUI_MEASDEV_GetRect</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_MEASDEV_GetRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ba00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[327ebc8]"></a>GUI_MEASDEV_Select</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_MEASDEV_Select &rArr; WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3187184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32810d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3281184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ba00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[3487fec]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, guidev_clear.o(i.GUI_MEMDEV_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Clear &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2f39fc0]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[32813a0]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31854b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[328110c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[32812b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>
<BR>[Called By]<UL><LI><a href="#[2f39fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[2f39f84]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Create &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[2f3ba78]"></a>GUI_MEMDEV_CreateAuto</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_auto.o(i.GUI_MEMDEV_CreateAuto))
<BR><BR>[Called By]<UL><LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
</UL>

<P><STRONG><a name="[2f3dbfc]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[2f39f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2f3dbc0]"></a>GUI_MEMDEV_CreateFixed</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, guidev_createfixed.o(i.GUI_MEMDEV_CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[32c9a18]"></a>GUI_MEMDEV_CreateStatic</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_CreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3486174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[2f3db48]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31871c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[32811c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[30d5fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[327c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveStaticDevice
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[3366570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[2f3ba3c]"></a>GUI_MEMDEV_DeleteAuto</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidev_auto.o(i.GUI_MEMDEV_DeleteAuto))
<BR><BR>[Called By]<UL><LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
</UL>

<P><STRONG><a name="[327eb8c]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 260 bytes, Stack size 64 bytes, guidev_banding.o(i.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3dbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[3016414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[31af14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[31af188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[32c9220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3487fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3487fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[3488028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[3488280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ba00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[3366444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[2f3ba00]"></a>GUI_MEMDEV_DrawAuto</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, guidev_auto.o(i.GUI_MEMDEV_DrawAuto))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_DrawAuto &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[327eb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[327ebc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[327ec04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[327ec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[327ec7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[327ecb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
</UL>

<P><STRONG><a name="[2f3db0c]"></a>GUI_MEMDEV_DrawPerspectiveX</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, guidev_perspective.o(i.GUI_MEMDEV_DrawPerspectiveX))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_DrawPerspectiveX &rArr; _DrawMemdevPerspective &rArr; _DrawColumnScaled &rArr; GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32c95e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMemdevPerspective
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
</UL>

<P><STRONG><a name="[2fb3980]"></a>GUI_MEMDEV_FadeInWindow</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeInWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_FadeInWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[327c7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UndoBK
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[2fb3944]"></a>GUI_MEMDEV_FadeOutWindow</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeOutWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_FadeOutWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[327c7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UndoBK
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[31b6be0]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31aeeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[32812b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[32c8f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Check
</UL>

<P><STRONG><a name="[2f3dad0]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[31b7810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327d1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[327f1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[32c8de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[34861ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[3485b98]"></a>GUI_MEMDEV_GetStaticDevice</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_GetStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetStaticDevice &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[32c99dc]"></a>GUI_MEMDEV_GetWindowDevice</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_GetWindowDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3486084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[31b6ba4]"></a>GUI_MEMDEV_GetXPos</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetXPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetXPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[34861ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[3016450]"></a>GUI_MEMDEV_GetXSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_getxsize.o(i.GUI_MEMDEV_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetXSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[327d1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[34861ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[31b6b68]"></a>GUI_MEMDEV_GetYPos</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetYPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetYPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[34861ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[3016414]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_getysize.o(i.GUI_MEMDEV_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[327d1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[34861ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[2fb3908]"></a>GUI_MEMDEV_MoveInWindow</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveInWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_MoveInWindow &rArr; _MoveWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[327c7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UndoBK
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[2fb38cc]"></a>GUI_MEMDEV_MoveOutWindow</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveOutWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_MoveOutWindow &rArr; _MoveWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[327c7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UndoBK
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
</UL>

<P><STRONG><a name="[33662a0]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3da1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[3487fb0]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_reduceysize.o(i.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_ReduceYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2f3da94]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Select &rArr; WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3187184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32810d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3281148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3281184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[31b40c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[2f3da58]"></a>GUI_MEMDEV_SetAnimationCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_moveandfade.o(i.GUI_MEMDEV_SetAnimationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[32c9220]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, guidev_setorg.o(i.GUI_MEMDEV_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_SetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3281184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[2f3da1c]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_write.o(i.GUI_MEMDEV_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Write &rArr; GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3016360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d5fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[33662a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[3016360]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, guidev_write.o(i.GUI_MEMDEV_WriteAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32812ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3da1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
</UL>

<P><STRONG><a name="[3281328]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, guidev.o(i.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[31871c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[31871fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[31aeeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[32811fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3dbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[2f3dbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[327d1c4]"></a>GUI_MEMDEV__FadeDeviceEx</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, guidev_moveandfade.o(i.GUI_MEMDEV__FadeDeviceEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__FadeDeviceEx &rArr; GUI_MEMDEV_GetYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3016414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3016450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[31b6ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[32c99a0]"></a>GUI_MEMDEV__Rotate</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, guidev_rotate.o(i.GUI_MEMDEV__Rotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__Rotate &rArr; _Rotate32 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[32c8de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
<LI><a href="#[32c8f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
</UL>

<P><STRONG><a name="[327f1a4]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 262 bytes, Stack size 96 bytes, guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[318dbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33d145c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[3484a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3484ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[32812ec]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3016360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[32812b0]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b6be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3484734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>
<BR>[Called By]<UL><LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[327eb50]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_mergerect.o(i.GUI_MergeRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ba00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3367ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[3016324]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_moverect.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[32bf3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[33171b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[331f6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[336669c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[336966c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34875d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[3487650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygon
<LI><a href="#[35049c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3504d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[2f3d9e0]"></a>GUI_PID_GetState</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_pid.o(i.GUI_PID_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_PID_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[31b8ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3ea0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbEffect
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[31b8878]"></a>GUI_PID_IsEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_pid.o(i.GUI_PID_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[2fb3890]"></a>GUI_PID_StoreState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_pid.o(i.GUI_PID_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[31b8d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
<LI><a href="#[31b9700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[34fe9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[31b97b4]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_PollKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31b96c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[31b9d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[33667c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[3404cd4]"></a>GUI_ReadRectEx</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, lcd_readrect.o(i.GUI_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ReadRectEx &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3404fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3484a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[31b3238]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_rectsintersect.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[31b47c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[31b4840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[31b48b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[32bf3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[32c097c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[3367ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3367d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3367f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3367fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3368028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[33cab5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[3368d0c]"></a>GUI_RestoreContext</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_savecontext.o(i.GUI_RestoreContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3368118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[33691f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[33692e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[2f3b9c4]"></a>GUI_RotatePolygon</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gui_polyrotate.o(i.GUI_RotatePolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI_RotatePolygon &rArr; GUI__SinHQ
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[3016270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3668598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[3668958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
</UL>

<P><STRONG><a name="[3014128]"></a>GUI_SPRITE_Create</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_sprite.o(i.GUI_SPRITE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_Create &rArr; GUI_SPRITE__CreateEx &rArr; _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[30140ec]"></a>GUI_SPRITE_Delete</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[31b3ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[31b3f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[318ac1c]"></a>GUI_SPRITE_Hide</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Hide))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_Hide &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b3ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[31b3f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[318ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[30140b0]"></a>GUI_SPRITE_SetBitmapAndPosition</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, gui_sprite.o(i.GUI_SPRITE_SetBitmapAndPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_SetBitmapAndPosition &rArr; _SetBitmapAndPosition &rArr; _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b4228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[31b49a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[3014290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSprite
<LI><a href="#[30d6204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
</UL>

<P><STRONG><a name="[318abe0]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; GUI_MEMDEV_Select &rArr; WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31b40c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[318acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[318ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[318aba4]"></a>GUI_SPRITE_Show</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b3fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[31b4390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[318b39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[318ab68]"></a>GUI_SPRITE__CreateEx</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, gui_sprite.o(i.GUI_SPRITE__CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE__CreateEx &rArr; _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31871c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[31871fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[31b3fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[31b4390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[31b49a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[3014128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[3368cd0]"></a>GUI_SaveContext_W</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_savecontext.o(i.GUI_SaveContext_W))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3368118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[33691f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[33692e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[3281274]"></a>GUI_SelectLCD</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_selectlcd.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[328110c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[3281148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[340c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[318ab2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[327ebc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[327ec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[318ab2c]"></a>GUI_SelectLayer</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[318b93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[3406660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[2f39f48]"></a>GUI_SetAlpha</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gui_setalpha.o(i.GUI_SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318710c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDevice
<LI><a href="#[3187148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[3187184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[31b7978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
</UL>

<P><STRONG><a name="[2f3d9a4]"></a>GUI_SetBkColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_setcolor.o(i.GUI_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_SetBkColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3eb74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkSimple
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32bc200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[33662dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3367b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[3368118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
</UL>

<P><STRONG><a name="[2f39f0c]"></a>GUI_SetClipRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_setcliprect.o(i.GUI_SetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_SetClipRect &rArr; WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[2f3d968]"></a>GUI_SetColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_setcolor.o(i.GUI_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[2f3beec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[2f3bf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3d4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[2f3d56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[2f3d6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2fb2fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[2fb3df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[2fb8930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d5fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[30d609c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[30d62b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCheckbox
<LI><a href="#[30d62f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[3182dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[31851e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[32bc188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[32bc200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[32bf02c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[32c2830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[32c28a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[32c5350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[32c53c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3315594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[331560c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[3315684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[33156fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[33167a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[3316818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[3316890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[332145c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[332154c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[33215c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3322adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3323400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[33662dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3368118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[33cfecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[33cff44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[33cffbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>

<P><STRONG><a name="[2fb2e04]"></a>GUI_SetColorIndex</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_setcolorindex.o(i.GUI_SetColorIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_SetColorIndex &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31b5d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[3185168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>

<P><STRONG><a name="[32c4360]"></a>GUI_SetDialogStatusPtr</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, dialog.o(i.GUI_SetDialogStatusPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_SetDialogStatusPtr &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[31854b0]"></a>GUI_SetDrawMode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_setdrawmode.o(i.GUI_SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[30cd7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCircle
<LI><a href="#[30ce0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[32c0c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[33662dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[2f3d92c]"></a>GUI_SetFont</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_setfont.o(i.GUI_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[2f38184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[2f3beec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[2f3bf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d5fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[30d609c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[30d62b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCheckbox
<LI><a href="#[30d62f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[32c2830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3319464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[3322adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[33662dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[348024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3566f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[318aaf0]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3226938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[318acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[318aab4]"></a>GUI_SetLayerSizeEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetLayerSizeEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[21773b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[318aa78]"></a>GUI_SetLayerVisEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetLayerVisEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[32267d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
</UL>
<BR>[Called By]<UL><LI><a href="#[318ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[318b39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[32bb0a8]"></a>GUI_SetLineStyle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_setlinestyle.o(i.GUI_SetLineStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetLineStyle &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[32bc188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[33662dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[3013660]"></a>GUI_SetOrg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_setorg.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[21378f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[2f38850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_VScreen
<LI><a href="#[30137c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Loop
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
</UL>

<P><STRONG><a name="[30cc088]"></a>GUI_SetPenShape</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_pen.o(i.GUI_SetPenShape))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetPenShape &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
</UL>

<P><STRONG><a name="[30162ac]"></a>GUI_SetPenSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_pen.o(i.GUI_SetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetPenSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[30cee78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
<LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[33662dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[2f39ed0]"></a>GUI_SetTextAlign</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_settextalign.o(i.GUI_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextAlign &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[33662dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[2f3d8f0]"></a>GUI_SetTextMode</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_settextmode.o(i.GUI_SetTextMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[2f38184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[2f3beec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[2f3bf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3d6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d5fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[30d609c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[30d62b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCheckbox
<LI><a href="#[30d62f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c097c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[32c2830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[3322adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[33662dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[31b9700]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[2fb3890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[30d2988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[31b973c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[3367ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[31b973c]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[31b9700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[32c8014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3367b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[34b97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[30d2988]"></a>GUI_StoreKeyMsg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_StoreKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_StoreKeyMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[31b9700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[31b9d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[30d6240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
</UL>

<P><STRONG><a name="[33d2d70]"></a>GUI_TIMER_Create</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui_timer.o(i.GUI_TIMER_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[340ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[33d2d34]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[33d2cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[340ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>

<P><STRONG><a name="[340a4f4]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gui_timer.o(i.GUI_TIMER_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Exec &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[33d2cf8]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Restart &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[340ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[340ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[33d2cbc]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_SetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_SetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33d2d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[33d2c80]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetFirstTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetFirstTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3366174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[33d2c44]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetNextTimerLin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetNextTimerLin
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3366174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[340a404]"></a>GUI_TIMER__GetPeriod</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER__GetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER__GetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[32c4324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[340a3c8]"></a>GUI_TIMER__IsActive</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER__IsActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER__IsActive &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[32c4324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[21774a4]"></a>GUI_TOUCH_Calibrate</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_Calibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TOUCH_Calibrate &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31b1fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[31b1ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[31b298c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2Phys
</UL>
<BR>[Called By]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[21378b8]"></a>GUI_TOUCH_Exec</STRONG> (Thumb, 372 bytes, Stack size 32 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_TOUCH_Exec &rArr; GUI_TOUCH_X_MeasureY &rArr; TPReadY &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[217b20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[217b248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[217b284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateY
<LI><a href="#[217b2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateX
<LI><a href="#[31b1fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[31b1ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[31b2914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreUnstable
</UL>
<BR>[Called By]<UL><LI><a href="#[213d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskKbd
</UL>

<P><STRONG><a name="[2177468]"></a>GUI_TOUCH_SetOrientation</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_SetOrientation))
<BR><BR>[Called By]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[3409e64]"></a>GUI_TOUCH_StoreState</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_touch_storestate.o(i.GUI_TOUCH_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[34fe9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31b202c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreUnstable
</UL>

<P><STRONG><a name="[34fe9a8]"></a>GUI_TOUCH_StoreStateEx</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_touch.o(i.GUI_TOUCH_StoreStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[366af8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3409e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>

<P><STRONG><a name="[31b202c]"></a>GUI_TOUCH_StoreUnstable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_touch_storeunstable.o(i.GUI_TOUCH_StoreUnstable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_TOUCH_StoreUnstable &rArr; GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[3409e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>
<BR>[Called By]<UL><LI><a href="#[31b2914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreUnstable
</UL>

<P><STRONG><a name="[217b2c0]"></a>GUI_TOUCH_X_ActivateX</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch.o(i.GUI_TOUCH_X_ActivateX))
<BR><BR>[Called By]<UL><LI><a href="#[21378b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[217b284]"></a>GUI_TOUCH_X_ActivateY</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch.o(i.GUI_TOUCH_X_ActivateY))
<BR><BR>[Called By]<UL><LI><a href="#[21378b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[217b248]"></a>GUI_TOUCH_X_MeasureX</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gui_x_touch.o(i.GUI_TOUCH_X_MeasureX))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_TOUCH_X_MeasureX &rArr; TPReadX &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2caed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadX
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[21378b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[217b20c]"></a>GUI_TOUCH_X_MeasureY</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gui_x_touch.o(i.GUI_TOUCH_X_MeasureY))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_TOUCH_X_MeasureY &rArr; TPReadY &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2caeccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadY
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[21378b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[32c0bd4]"></a>GUI_UC_Encode</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_uc.o(i.GUI_UC_Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_UC_Encode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[32c1b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[32c0b98]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_uc.o(i.GUI_UC_GetCharCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_UC_GetCharCode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[33cf29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
<LI><a href="#[33cf314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorCharacter
</UL>

<P><STRONG><a name="[32c0b5c]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_uc.o(i.GUI_UC_GetCharSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_UC_GetCharSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[32c1b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[33cf29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[32c0b20]"></a>GUI_UC__CalcSizeOfChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC__CalcSizeOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[32c1b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[3182d14]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[3016504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[3182d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__DispLine
<LI><a href="#[3182dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[31866bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[31866f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[31bb2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[33cab5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[33cf224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
<LI><a href="#[355de10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[355e284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[355e2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[33cedec]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumBytes2NumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumBytes2NumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[33cf29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[3186770]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[3185a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[32c1b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[34ff7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[355de10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[3281238]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[327fc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[327fd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3488eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[3489054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[32811fc]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[32811c0]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[30ceab8]"></a>GUI_Unlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_task.o(i.GUI_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[2178b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3441c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[2f34458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[2f34494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[2f344d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[2f3450c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[2f34548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f345fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[2f34638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[2f34674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[2f346b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[2f346ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[2f34728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2f34890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f36654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2f36744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2f36780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2f367bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2f367f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2f36834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2f36870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2f368ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2f368e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2f36960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f369d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2f36a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[2f36a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2f36a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[2f36b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[2f36b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[2f37cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[2f38f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2f39ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2f39f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f3a074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3a164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2f3bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3d044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[2f3d134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[2f3d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f3d440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2f3d5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2f3d620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[2f3d65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2f3db0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3dbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[2f3dbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3de18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2f3e0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2f3e124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2fb2e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2fb2e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[2fb2eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[2fb3458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[2fb34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[2fb35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[2fb3674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[2fb36b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[2fb3818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[2fb38cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[2fb3980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[2fb39bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDispPosY
<LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[2fb3b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[2fb3c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[2fb3cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[2fb3d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[2fb3db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[2fb3e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[3013660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3013d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[3013da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[3013de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[3013e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[3013e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[3013ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[3013f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[3013f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[3013f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[3013fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[3013ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[30140b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[30162ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[3016360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[3016414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3016450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[301666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[30cc088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[30ceb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[30d2820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[30d285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[30d2898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[30d2ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[30d2af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[31854b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[3185a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[318aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[318aab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[318aaf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[318ab2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[318aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[318abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[318ac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[318ac94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[318acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[318ad48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[318ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[318e204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[318e240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[318e27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[318e2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[318f230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[31b6b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[31b6ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[31b6be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[31b96c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[31b97b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[327ebc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[327ec04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[327ec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[327ec7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[327ecb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
<LI><a href="#[32810d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[32811fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[32bb030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[32bb0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[32bb0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[32bb120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[32bb1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[32bb4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[32bc980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[32bc9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[32bca34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[32bece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[32bf3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[32bf428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[32bf4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[32bf6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[32bf734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[32c0b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[32c0b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[32c0bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[32c0c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[32c3280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[32c367c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[32c42e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[32c4324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[32c5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[32c736c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[32c73a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[32c745c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[32c7510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[32c7678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[32c77a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[32c9220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[32c9928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[32c9964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[32c99a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[3317448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[3317bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[331b7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[331cf74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetTextColor
<LI><a href="#[331cfb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetBkColor
<LI><a href="#[331db68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[331f5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[331f620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[331f65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[3322f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[3323838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[336024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[33625b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[336579c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[3366174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[33661ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[33667c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[336ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[336b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[336b4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[336cc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[33d2cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[33d2cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[33d2d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[33d2d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[33d343c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[33d38b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[340a3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[340a404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[340a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[340cdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[3480198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
<LI><a href="#[3481188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[34811c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[34815fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[34819f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[3481a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[3481ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[3481b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[3481b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[3481b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[3481bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[3481c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[3481c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3481f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[3483b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[3483b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[3485b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[3487fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3487fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[3488028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[34b1728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[34b7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[34b81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[34b8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[34b9090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[34b9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[34be2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[34ff830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[35015b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[3506874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[355b32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[355b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[355bee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[35658e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[356591c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[3565bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3565ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[3565d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3565e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[32c4324]"></a>GUI_WaitEvent</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gui_waitevent.o(i.GUI_WaitEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_WaitEvent &rArr; GUI_TIMER__IsActive &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[318f2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[3408424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WaitEvent
<LI><a href="#[340a3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[340a404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[34ff830]"></a>GUI_WrapGetNumLines</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gui_dispstringinrectwrap.o(i.GUI_WrapGetNumLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34ff7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[2f419a0]"></a>GUI_X_Config</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guiconf.o(i.GUI_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2f41928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_SetAvBlockSize
<LI><a href="#[2f41964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[318baa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[2178e6c]"></a>GUI_X_Delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_x_ucos.o(i.GUI_X_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = GUI_X_Delay &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[218174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[2178df4]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x_ucos.o(i.GUI_X_ExecIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = GUI_X_ExecIdle &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[218174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[2178d7c]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_ucos.o(i.GUI_X_GetTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[2178d40]"></a>GUI_X_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_x_ucos.o(i.GUI_X_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[217be00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[2178d04]"></a>GUI_X_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[2137840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[21378f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2178cc8]"></a>GUI_X_InitOS</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_InitOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_InitOS &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[2137840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[217f1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[318ba2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>

<P><STRONG><a name="[2178c8c]"></a>GUI_X_Lock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[217dcf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[2178b9c]"></a>GUI_X_Unlock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_x_ucos.o(i.GUI_X_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[217dc78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
</UL>

<P><STRONG><a name="[3484ab8]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__AllocAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[3500e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[327f1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[31b6c58]"></a>GUI__AlphaSuppressMixing</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setalpha.o(i.GUI__AlphaSuppressMixing))
<BR><BR>[Called By]<UL><LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[32c0aa8]"></a>GUI__CalcTextRect</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gui__calctextrect.o(i.GUI__CalcTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[348024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
</UL>

<P><STRONG><a name="[31b6b2c]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b8080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[31b8170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[31b81e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
<LI><a href="#[3484824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>

<P><STRONG><a name="[33d145c]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 356 bytes, Stack size 24 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__CompactPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[327f1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[318baa4]"></a>GUI__Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_core.o(i.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUIDRV_FlexColor_Config &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[2f419a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[30cc5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[21378f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[3016270]"></a>GUI__CosHQ</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui__sinhq.o(i.GUI__CosHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__CosHQ &rArr; GUI__SinHQ
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3b9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[32c8de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
</UL>

<P><STRONG><a name="[3186734]"></a>GUI__DispLine</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[33cab5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[3185a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[3185a14]"></a>GUI__DispStringInRect</STRONG> (Thumb, 316 bytes, Stack size 72 bytes, gui_dispstringinrect.o(i.GUI__DispStringInRect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[318599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[31859d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[31866bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[31866f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[3186734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[3186770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[3185a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[32c89b0]"></a>GUI__DivideRound32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__divideround32.o(i.GUI__DivideRound32))
<BR><BR>[Called By]<UL><LI><a href="#[33171b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[3484a7c]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 310 bytes, Stack size 96 bytes, gui__alpha.o(i.GUI__DoAlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[3184d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[31af458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[31b6ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[33cf5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[3404cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[3500e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[327f1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[32bc980]"></a>GUI__DrawTwinArc2</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GUI__DrawTwinArc2 &rArr; _DrawTwinArc2 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[33cffbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[32c5da0]"></a>GUI__DrawTwinArc4</STRONG> (Thumb, 96 bytes, Stack size 64 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[33cff44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[32c28a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[31b6af0]"></a>GUI__ExpandPixelIndices</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[31b7b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
</UL>

<P><STRONG><a name="[33cf5e4]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3484a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[3317448]"></a>GUI__FillTrippleArc</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i.GUI__FillTrippleArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = GUI__FillTrippleArc &rArr; _FillTrippleArc &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[33cfecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
</UL>

<P><STRONG><a name="[3500e38]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gui__alpha.o(i.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[30cc5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3484a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3484ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>

<P><STRONG><a name="[32c0a6c]"></a>GUI__GetCursorCharacter</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui__getcursorpos.o(i.GUI__GetCursorCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__GetCursorCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[32c0a30]"></a>GUI__GetCursorPosChar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosChar))
<BR><BR>[Called By]<UL><LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>

<P><STRONG><a name="[32c09f4]"></a>GUI__GetCursorPosX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosX))
<BR><BR>[Called By]<UL><LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[31bb6e0]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getfontsizey.o(i.GUI__GetFontSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[3016504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
</UL>

<P><STRONG><a name="[31866f8]"></a>GUI__GetLineDistX</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[3186b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[3185a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[31866bc]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[3185a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[355e20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[31bb2e4]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui__getnumchars.o(i.GUI__GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[32c0cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[34feed0]"></a>GUI__GetOrg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_getorg.o(i.GUI__GetOrg))
<BR><BR>[Called By]<UL><LI><a href="#[3488028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
</UL>

<P><STRONG><a name="[3186b6c]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318e240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3182dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[31866f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[3186eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[318599c]"></a>GUI__HandleEOLine</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui__handleeoline.o(i.GUI__HandleEOLine), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3185a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[31b31fc]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__intersectrect.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[31b47c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[31b4840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[31b48b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[31b4a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3366660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3367c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[3185960]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui__intersectrects.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[3185a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[32c097c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[3366228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[33664f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3366750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[3367d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3367ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[3367f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3367fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3368028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[3366264]"></a>GUI__ManageCache</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[33cd640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3368118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[33cab5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[33cd640]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3366264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[31b6ab4]"></a>GUI__MixColors</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui__setpixelalpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[30cdfb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors
<LI><a href="#[3184cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[31b7900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[327d1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[327fe88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[32c8de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
<LI><a href="#[3484a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[34861ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[32bb06c]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__reducerect.o(i.GUI__ReduceRect))
<BR><BR>[Called By]<UL><LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32bf3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[32c0940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[3319464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[30cc5ec]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[30cc6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[318b888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[318ba2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[318baa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[31904b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[31b7978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[33d2d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[3500e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[3184cf4]"></a>GUI__SetPixelAlpha</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gui__setpixelalpha.o(i.GUI__SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[318c800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[31b6ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[33cc68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Called By]<UL><LI><a href="#[31851e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[32c9658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawColumnScaled
</UL>

<P><STRONG><a name="[32c754c]"></a>GUI__SetText</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gui__settext.o(i.GUI__SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[331f788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[33cc290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[32bf6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[32c7678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
</UL>

<P><STRONG><a name="[2f36708]"></a>GUI__SinHQ</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, gui__sinhq.o(i.GUI__SinHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddData_Sine
<LI><a href="#[2f3b9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[3016270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[32c8de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
</UL>

<P><STRONG><a name="[34ff7f4]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui__wrap.o(i.GUI__WrapGetNumBytesToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3186770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[355de10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[34ff830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>

<P><STRONG><a name="[34ff7b8]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[355e20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[355de10]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[3186770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[355e20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[34ff7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[30cc5b0]"></a>GUI__memset</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gui__memset.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[30cd03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
<LI><a href="#[318b414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[318ba2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[318c3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[319043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[32831dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[32c52d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[336d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[34be2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>

<P><STRONG><a name="[328269c]"></a>GUI__memset16</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui__memset16.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[3282bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[3488eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[318cbfc]"></a>GUI__sqrt32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__sqrt32.o(i.GUI__sqrt32))
<BR><BR>[Called By]<UL><LI><a href="#[2f3a074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[3183944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[33cfddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
<LI><a href="#[33cfe54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
</UL>

<P><STRONG><a name="[35009c4]"></a>GUI__strcmp</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui__strcmp.o(i.GUI__strcmp))
<BR><BR>[Called By]<UL><LI><a href="#[33cc290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[33cc290]"></a>GUI__strcmp_hp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui__strcmp.o(i.GUI__strcmp_hp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__strcmp_hp
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[35009c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[331f788]"></a>GUI__strlen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui__strlen.o(i.GUI__strlen))
<BR><BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2fb36b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[33c7088]"></a>GUI_cos</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.GUI_cos))
<BR><BR>[Called By]<UL><LI><a href="#[33c71b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[33c704c]"></a>GUI_sin</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gui_drawline.o(i.GUI_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[33c71b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[331f74c]"></a>HEADER_AddItem</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, header.o(i.HEADER_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = HEADER_AddItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
</UL>

<P><STRONG><a name="[34bc18c]"></a>HEADER_Callback</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, header.o(i.HEADER_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = HEADER_Callback &rArr; _HandlePID &rArr; _LimitDragWitdh &rArr; HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[34bc9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[34bcb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header.o(i.HEADER_CreateUser)
</UL>
<P><STRONG><a name="[331f710]"></a>HEADER_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, header.o(i.HEADER_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = HEADER_CreateEx &rArr; HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>

<P><STRONG><a name="[34bc114]"></a>HEADER_CreateUser</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, header.o(i.HEADER_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[32beca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[331f7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[33699f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[331f710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
</UL>

<P><STRONG><a name="[2f3d8b4]"></a>HEADER_DrawSkinFlex</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, header_skinflex.o(i.HEADER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = HEADER_DrawSkinFlex &rArr; _DrawOverlap &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[332145c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[33214d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[332154c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[33215c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[331f6d4]"></a>HEADER_GetHeight</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, header.o(i.HEADER_GetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = HEADER_GetHeight &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[331ddfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[331f8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[3320430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3320610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[331f698]"></a>HEADER_GetItemWidth</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, header.o(i.HEADER_GetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = HEADER_GetItemWidth &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34bca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[331f65c]"></a>HEADER_GetNumItems</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, header.o(i.HEADER_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = HEADER_GetNumItems &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[331f620]"></a>HEADER_GetSel</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, header_getsel.o(i.HEADER_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = HEADER_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[2f3d878]"></a>HEADER_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, header_skin.o(i.HEADER_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[331b7c8]"></a>HEADER_SetDirIndicator</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, header.o(i.HEADER_SetDirIndicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = HEADER_SetDirIndicator &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[331bda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[2f34890]"></a>HEADER_SetDragLimit</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, header_setdraglimit.o(i.HEADER_SetDragLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = HEADER_SetDragLimit &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[34bbfe8]"></a>HEADER_SetItemWidth</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, header.o(i.HEADER_SetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[34bca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[331f5a8]"></a>HEADER_SetScrollPos</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, header.o(i.HEADER_SetScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[331f800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[213f0b8]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.I2C1_ER_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f07c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.I2C1_EV_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f040]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.I2C2_ER_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f004]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.I2C2_EV_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[30cdfb4]"></a>LCD_AA_MixColors</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd_aa.o(i.LCD_AA_MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_AA_MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[30cdec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[30ce680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
</UL>

<P><STRONG><a name="[318c800]"></a>LCD_Color2Index</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[2fb2eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[30cde88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA_Xor
<LI><a href="#[30cdec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[30cdf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[3184cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[3185168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[3281148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3406e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[3406e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[318dbec]"></a>LCD_DrawBitmap</STRONG> (Thumb, 510 bytes, Stack size 88 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[2fb8930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[30ce0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[31851e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[327f1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[3403f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[3484734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[30ca3f0]"></a>LCD_DrawHLine</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[3183944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[31ae300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE8
<LI><a href="#[31ae774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
<LI><a href="#[32bf02c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[33cfecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[33cff44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[33cffbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_core.o(.constdata)
<LI> gui_drawgradient.o(i.GUI_DrawGradientV)
</UL>
<P><STRONG><a name="[318b978]"></a>LCD_DrawPixel</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[3183944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[33c8078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[30ca3b4]"></a>LCD_DrawVLine</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[3183944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[33c71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[33c8078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawgradient.o(i.GUI_DrawGradientH)
</UL>
<P><STRONG><a name="[318dbb0]"></a>LCD_FillRect</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2fb8930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[3182dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[3184628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[31851e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[318b93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[318dbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[31ae300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE8
<LI><a href="#[31ae774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
<LI><a href="#[32c0c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[3403f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[340669c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
</UL>

<P><STRONG><a name="[2f3d800]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixel &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
</UL>

<P><STRONG><a name="[31b6a78]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
<LI><a href="#[3406660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[31bbf50]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2fb2e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[3184cb8]"></a>LCD_GetColorIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[3185168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>

<P><STRONG><a name="[2f38ee0]"></a>LCD_GetDevCap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_info.o(i.LCD_GetDevCap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetDevCap &rArr; _GetDevCap
</UL>
<BR>[Calls]<UL><LI><a href="#[31aec24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevCap
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
</UL>

<P><STRONG><a name="[31af2f0]"></a>LCD_GetNumColors</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[34fe624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[34fe69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[34fe714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[31af2b4]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[3406660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[3405a6c]"></a>LCD_GetNumLayers</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3406660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[31af278]"></a>LCD_GetPalette</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31af23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[34fe624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[34fe714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[31af23c]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPaletteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[31af278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[33cc68c]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[34fdaa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[30cde88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA_Xor
<LI><a href="#[30cdec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[3184cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
</UL>

<P><STRONG><a name="[34fdaa8]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[33cc68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[3226c44]"></a>LCD_GetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_GetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[340cdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[21773f0]"></a>LCD_GetSwapXY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetSwapXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetSwapXY &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[31af188]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[30cc574]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[31b7978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[3500e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[2f3d7c4]"></a>LCD_GetVYSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_VScreen
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
</UL>

<P><STRONG><a name="[31af14c]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2f3d788]"></a>LCD_GetXSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2f38184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f395e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowMagnifiedBitmap
<LI><a href="#[2f39624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BitmapDemo
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[2f3beec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[2f3bf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3e994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2f3ebec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2fb2fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[31b1ff0]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[21378b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[21774a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[2f3d74c]"></a>LCD_GetYSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2f38850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_VScreen
<LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[2f38f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[2f395e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowMagnifiedBitmap
<LI><a href="#[2f39624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BitmapDemo
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[2f3bf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowIntro
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2f3ebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[2f3ebec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[2fb2fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[30d6204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[30d62f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[31b1fb4]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[21378b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[21774a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[3185474]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[30ce0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[31ae300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE8
<LI><a href="#[31ae774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
</UL>

<P><STRONG><a name="[30cdf78]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[318c800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[30ce680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
<LI><a href="#[3185474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[30cdf3c]"></a>LCD_Index2Color</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2fb2e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[30cde88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA_Xor
<LI><a href="#[30cdec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[30ce680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
<LI><a href="#[31b7ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[33cc68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[3406660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[30cb458]"></a>LCD_Index2Color_565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_565_index2color.o(i.LCD_Index2Color_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[31b1078]"></a>LCD_Index2Color_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_888_index2color.o(i.LCD_Index2Color_888))
<BR>[Address Reference Count : 2]<UL><LI> guicc_888.o(.constdata)
<LI> gui__alpha.o(i.GUI__DoAlphaBlending)
</UL>
<P><STRONG><a name="[3184c7c]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888_index2color.o(i.LCD_Index2Color_8888))
<BR>[Address Reference Count : 5]<UL><LI> gui_drawbitmap_8888.o(i._DrawBitmap_8888)
<LI> gui_drawbitmap_8888.o(.constdata)
<LI> guicc_8888.o(.constdata)
<LI> guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha)
<LI> gui__alpha.o(i.GUI__DoAlphaBlending)
</UL>
<P><STRONG><a name="[318b93c]"></a>LCD_Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = LCD_Init &rArr; LCD_InitLUT &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[318ab2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[3281184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[3406660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>
<BR>[Called By]<UL><LI><a href="#[21378f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[3406660]"></a>LCD_InitLUT</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = LCD_InitLUT &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[318ab2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[31af2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[31b6a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[32269b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[3405a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
</UL>
<BR>[Called By]<UL><LI><a href="#[318b93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[21777ec]"></a>LCD_RD_M_Data</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcdconf.o(i.LCD_RD_M_Data))
<BR>[Address Reference Count : 1]<UL><LI> lcdconf.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[340c9c0]"></a>LCD_SelectLCD</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[3187148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[3281184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[318b900]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[318c440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[348024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[31b5dd0]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[3281148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3406e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[3366228]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[3367c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[3281184]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[318b93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[327ebc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[32810d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[32c9220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[340c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[318b8c4]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fb3728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[3184628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[31851e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[318c440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33691f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[33692e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[348024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b4eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[34b4f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3561d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[31b5d94]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2fb2e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[31ae300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE8
<LI><a href="#[31ae774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
<LI><a href="#[3281148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3406e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
</UL>

<P><STRONG><a name="[30cdf00]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[2f3a2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2fb8930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[2fb896c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[31854b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[318b93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[3403f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[32269b0]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3406660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[30cdec4]"></a>LCD_SetPixelAA</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lcd_aa.o(i.LCD_SetPixelAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[30cdfb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors
<LI><a href="#[318c800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[33cc68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Called By]<UL><LI><a href="#[30ccf4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_char4.o(i.GUI_AA__DrawCharAA4)
</UL>
<P><STRONG><a name="[30cde88]"></a>LCD_SetPixelAA_Xor</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lcd_aa.o(i.LCD_SetPixelAA_Xor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_SetPixelAA_Xor &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[318c800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[33cc68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_char4.o(i.GUI_AA__DrawCharAA4)
</UL>
<P><STRONG><a name="[31ae51c]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gui_setpixelindex.o(i.LCD_SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[31ae774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
<LI><a href="#[32c9658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawColumnScaled
</UL>

<P><STRONG><a name="[3226938]"></a>LCD_SetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[318aaf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[21773b4]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[318aab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
</UL>

<P><STRONG><a name="[2177378]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2177684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[32267d0]"></a>LCD_SetVisEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[318aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
</UL>

<P><STRONG><a name="[3281148]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[318c800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[31b5d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[31b5dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[2177774]"></a>LCD_WR_CMD</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcdconf.o(i.LCD_WR_CMD))
<BR><BR>[Called By]<UL><LI><a href="#[2177a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
</UL>

<P><STRONG><a name="[2177738]"></a>LCD_WR_Data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdconf.o(i.LCD_WR_Data))
<BR><BR>[Called By]<UL><LI><a href="#[2177a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[21776fc]"></a>LCD_WR_M_Data</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcdconf.o(i.LCD_WR_M_Data))
<BR>[Address Reference Count : 1]<UL><LI> lcdconf.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[21776c0]"></a>LCD_WR_REG</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcdconf.o(i.LCD_WR_REG))
<BR>[Address Reference Count : 1]<UL><LI> lcdconf.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[2177684]"></a>LCD_X_Config</STRONG> (Thumb, 196 bytes, Stack size 104 bytes, lcdconf.o(i.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LCD_X_Config &rArr; GUIDRV_FlexColor_Config &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2177378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[21773b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[21773f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXY
<LI><a href="#[2177468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_SetOrientation
<LI><a href="#[21774a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[21774e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[2177594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[21775d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_Config
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[318baa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[2177648]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcdconf.o(i.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_X_DisplayDriver &rArr; _InitController
</UL>
<BR>[Calls]<UL><LI><a href="#[2177a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
</UL>
<BR>[Called By]<UL><LI><a href="#[3284d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
</UL>

<P><STRONG><a name="[340669c]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 408 bytes, Stack size 80 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[31aeef4]"></a>LCD__GetBPP</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[31aeeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[31aeeb8]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[31aeef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[31b6be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[3565e44]"></a>LISTBOX_AddKey</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>
<BR>[Called By]<UL><LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[3565e08]"></a>LISTBOX_AddString</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX_AddString))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[3565a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3565b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3565bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[3481cc8]"></a>LISTBOX_AddStringH</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, listbox_addstringh.o(i.LISTBOX_AddStringH))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddStringH &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[3565a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3565b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3565dcc]"></a>LISTBOX_Callback</STRONG> (Thumb, 438 bytes, Stack size 48 bytes, listbox.o(i.LISTBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = LISTBOX_Callback &rArr; LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2fb34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[331f530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3565e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[3566ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3566ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[3566d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3566ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(i.LISTBOX_CreateUser)
</UL>
<P><STRONG><a name="[3481c8c]"></a>LISTBOX_CreateAsChild</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, listbox_create.o(i.LISTBOX_CreateAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3565d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3565d90]"></a>LISTBOX_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, listbox.o(i.LISTBOX_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = LISTBOX_CreateEx &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[3481c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
</UL>

<P><STRONG><a name="[3565d54]"></a>LISTBOX_CreateUser</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, listbox.o(i.LISTBOX_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3565bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3565d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>

<P><STRONG><a name="[3565d18]"></a>LISTBOX_DecSel</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = LISTBOX_DecSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3481c50]"></a>LISTBOX_GetSel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = LISTBOX_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3565ca0]"></a>LISTBOX_IncSel</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3565c64]"></a>LISTBOX_InvalidateItem</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_InvalidateItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3565a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[3565a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[3481b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[3481bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[3565bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[3565c28]"></a>LISTBOX_OwnerDraw</STRONG> (Thumb, 484 bytes, Stack size 72 bytes, listbox.o(i.LISTBOX_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = LISTBOX_OwnerDraw &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[331f7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[34b0210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[3565ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(i.LISTBOX_CreateUser)
</UL>
<P><STRONG><a name="[3481c14]"></a>LISTBOX_SetAutoScrollV</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, listbox_setautoscroll.o(i.LISTBOX_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[32c367c]"></a>LISTBOX_SetBkColor</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listbox_setbkcolor.o(i.LISTBOX_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetBkColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3481bd8]"></a>LISTBOX_SetFont</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listbox_font.o(i.LISTBOX_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetFont &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3481b9c]"></a>LISTBOX_SetItemDisabled</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, listbox_itemdisabled.o(i.LISTBOX_SetItemDisabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetItemDisabled &rArr; LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3481b60]"></a>LISTBOX_SetItemSpacing</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, listbox_itemspacing.o(i.LISTBOX_SetItemSpacing))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetItemSpacing &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3481b24]"></a>LISTBOX_SetOwner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listbox_setowner.o(i.LISTBOX_SetOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetOwner &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3481ae8]"></a>LISTBOX_SetScrollbarColor</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, listbox_setscrollbarcolor.o(i.LISTBOX_SetScrollbarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetScrollbarColor &rArr; LISTBOX__SetScrollbarColor &rArr; SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[35659d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3481aac]"></a>LISTBOX_SetScrollbarWidth</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, listbox_setscrollbarwidth.o(i.LISTBOX_SetScrollbarWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetScrollbarWidth &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3565994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3481a70]"></a>LISTBOX_SetSel</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3566ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3565bec]"></a>LISTBOX_SetText</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>
<BR>[Called By]<UL><LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[3481a34]"></a>LISTBOX_SetTextAlign</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listbox_settextalign.o(i.LISTBOX_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[32c3280]"></a>LISTBOX_SetTextColor</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, listbox_settextcolor.o(i.LISTBOX_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3565b74]"></a>LISTBOX_UpdateScrollers</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_UpdateScrollers))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3566d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3566f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[3481c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3565b38]"></a>LISTBOX__AddSize</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX__AddSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = LISTBOX__AddSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[3565afc]"></a>LISTBOX__GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listbox.o(i.LISTBOX__GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTBOX__GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3566d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3566e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[3566ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[3566f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3565ac0]"></a>LISTBOX__GetpStringLocked</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX__GetpStringLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LISTBOX__GetpStringLocked &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[34bb73c]"></a>LISTBOX__InvalidateInsideArea</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[32c3280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[32c367c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3565a84]"></a>LISTBOX__InvalidateItem</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX__InvalidateItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3566e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3566ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[3565a48]"></a>LISTBOX__InvalidateItemAndBelow</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX__InvalidateItemAndBelow))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateItemAndBelow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3566e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[3565a0c]"></a>LISTBOX__InvalidateItemSize</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX__InvalidateItemSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LISTBOX__InvalidateItemSize &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[3481cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[3565c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3565e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[35659d0]"></a>LISTBOX__SetScrollbarColor</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX__SetScrollbarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = LISTBOX__SetScrollbarColor &rArr; SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[356591c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[3481ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[3565994]"></a>LISTBOX__SetScrollbarWidth</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX__SetScrollbarWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[35658e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[3565958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetDefaultWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[3481aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[2f34854]"></a>LISTVIEW_AddColumn</STRONG> (Thumb, 146 bytes, Stack size 64 bytes, listview.o(i.LISTVIEW_AddColumn))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
<LI><a href="#[2fb5a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
</UL>

<P><STRONG><a name="[2f34818]"></a>LISTVIEW_AddRow</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, listview.o(i.LISTVIEW_AddRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[32bb24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[331f788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[331fa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[2fb5bb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddListviewItem
</UL>

<P><STRONG><a name="[331fb48]"></a>LISTVIEW_Callback</STRONG> (Thumb, 442 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_Callback &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[331f530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[331f5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[331f620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[3320430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3320598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[3320688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[2f347dc]"></a>LISTVIEW_CompareDec</STRONG> (Thumb, 130 bytes, Stack size 28 bytes, listview_setsort.o(i.LISTVIEW_CompareDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LISTVIEW_CompareDec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_listview.o(.constdata)
</UL>
<P><STRONG><a name="[2f347a0]"></a>LISTVIEW_CompareText</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, listview_setsort.o(i.LISTVIEW_CompareText))
<BR><BR>[Calls]<UL><LI><a href="#[366a53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_listview.o(.constdata)
</UL>
<P><STRONG><a name="[2f34764]"></a>LISTVIEW_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_CreateEx &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>

<P><STRONG><a name="[2fb3854]"></a>LISTVIEW_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, listview_createindirect.o(i.LISTVIEW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_CreateIndirect &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[331fb0c]"></a>LISTVIEW_CreateUser</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[331f710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[2fb3854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateIndirect
</UL>

<P><STRONG><a name="[2f34728]"></a>LISTVIEW_DecSel</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_DecSel &rArr; LISTVIEW__MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[331f8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2f346ec]"></a>LISTVIEW_EnableSort</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listview_setsort.o(i.LISTVIEW_EnableSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_EnableSort &rArr; _CreateSortObject &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331bf84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[331cfb0]"></a>LISTVIEW_GetBkColor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, listview_getbkcolor.o(i.LISTVIEW_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetBkColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[331d280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpCellInfo
</UL>

<P><STRONG><a name="[2f346b0]"></a>LISTVIEW_GetHeader</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listview_getheader.o(i.LISTVIEW_GetHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetHeader &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[2f34674]"></a>LISTVIEW_GetNumColumns</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listview_getnumcolumns.o(i.LISTVIEW_GetNumColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetNumColumns &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331fa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3441c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[2f34548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2f34638]"></a>LISTVIEW_GetNumRows</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listview_getnumrows.o(i.LISTVIEW_GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetNumRows &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[2fb5b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
<LI><a href="#[2fb5bb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddListviewItem
</UL>

<P><STRONG><a name="[2fb3818]"></a>LISTVIEW_GetSel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listview_getsel.o(i.LISTVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
</UL>

<P><STRONG><a name="[331cf74]"></a>LISTVIEW_GetTextColor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, listview_gettextcolor.o(i.LISTVIEW_GetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetTextColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[331d280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpCellInfo
</UL>

<P><STRONG><a name="[2f345fc]"></a>LISTVIEW_IncSel</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_IncSel &rArr; LISTVIEW__MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[331f8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2f345c0]"></a>LISTVIEW_InsertRow</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, listview_insertrow.o(i.LISTVIEW_InsertRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f345fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32bb24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[331ddfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[331de38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
<LI><a href="#[331f788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[331f968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetSel
<LI><a href="#[331fa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>

<P><STRONG><a name="[2f34584]"></a>LISTVIEW_SetAutoScrollV</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview_setautoscroll.o(i.LISTVIEW_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[331db68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[2f34548]"></a>LISTVIEW_SetCompareFunc</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, listview_setsort.o(i.LISTVIEW_SetCompareFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetCompareFunc &rArr; LISTVIEW_GetNumColumns &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f34674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[2f3450c]"></a>LISTVIEW_SetGridVis</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, listview_setgridvis.o(i.LISTVIEW_SetGridVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetGridVis &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
<LI><a href="#[2fb5a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
</UL>

<P><STRONG><a name="[2f344d0]"></a>LISTVIEW_SetItemBkColor</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, listview_setitemcolor.o(i.LISTVIEW_SetItemBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetItemBkColor &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331d280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpCellInfo
<LI><a href="#[331f8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2fb37dc]"></a>LISTVIEW_SetItemText</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, listview_setitemtext.o(i.LISTVIEW_SetItemText))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331cb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[331f788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[331f8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[331fa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5bb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddListviewItem
</UL>

<P><STRONG><a name="[2f34494]"></a>LISTVIEW_SetLBorder</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, listview_setlborder.o(i.LISTVIEW_SetLBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetLBorder &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
<LI><a href="#[2fb5a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
</UL>

<P><STRONG><a name="[2f34458]"></a>LISTVIEW_SetRBorder</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listview_setrborder.o(i.LISTVIEW_SetRBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetRBorder &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
<LI><a href="#[2fb5a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
</UL>

<P><STRONG><a name="[2f3441c]"></a>LISTVIEW_SetSort</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, listview_setsort.o(i.LISTVIEW_SetSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetSort &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f34674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331bf84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[331fa1c]"></a>LISTVIEW__GetNumColumns</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW__GetNumColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTVIEW__GetNumColumns &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[331d280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpCellInfo
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3320688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>

<P><STRONG><a name="[331f9e0]"></a>LISTVIEW__GetNumRows</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW__GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTVIEW__GetNumRows &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[331d280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpCellInfo
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[331f8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__MoveSel
<LI><a href="#[3320430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3320520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[3320688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[331f9a4]"></a>LISTVIEW__GetRowDistY</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW__GetRowDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTVIEW__GetRowDistY
</UL>
<BR>[Calls]<UL><LI><a href="#[331f7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[331ddfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[331f8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[3320430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3320610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[331f968]"></a>LISTVIEW__GetSel</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW__GetSel))
<BR><BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2fb3818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[331be94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
</UL>

<P><STRONG><a name="[331f92c]"></a>LISTVIEW__InvalidateInsideArea</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3441c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[2f34458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[2f34494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[2f3450c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[331f8f0]"></a>LISTVIEW__InvalidateRow</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW__InvalidateRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[331f6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[331f9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f344d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>

<P><STRONG><a name="[331ddfc]"></a>LISTVIEW__InvalidateRowAndBelow</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, listview_deleterow.o(i.LISTVIEW__InvalidateRowAndBelow))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateRowAndBelow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[331f6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[331f9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
</UL>

<P><STRONG><a name="[331f8b4]"></a>LISTVIEW__MoveSel</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW__MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[2f345fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[2f34728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[3320520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[331f878]"></a>LISTVIEW__SetSel</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__SetSel &rArr; LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[331f800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
<LI><a href="#[331f8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[331be1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[331f8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__MoveSel
<LI><a href="#[3320430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[3320520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[331f83c]"></a>LISTVIEW__UpdateScrollParas</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, listview.o(i.LISTVIEW__UpdateScrollParas))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[331f65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[331f800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[3320610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[3323838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3450c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[331db68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[331f800]"></a>LISTVIEW__UpdateScrollPos</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW__UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[331f5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[33239dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[3323a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[331b228]"></a>MESSAGEBOX_Callback</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, messagebox.o(i.MESSAGEBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = MESSAGEBOX_Callback &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2fb3aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2fb3b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messagebox.o(i.MESSAGEBOX_Create)
</UL>
<P><STRONG><a name="[2fb37a0]"></a>MESSAGEBOX_Create</STRONG> (Thumb, 352 bytes, Stack size 152 bytes, messagebox.o(i.MESSAGEBOX_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = MESSAGEBOX_Create &rArr; GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2fb3bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetDefaultFont
<LI><a href="#[3016504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[32bdf10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetDefaultBorderSize
<LI><a href="#[32c4c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[331b1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetDefaultFont
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MessageBox
</UL>

<P><STRONG><a name="[213787c]"></a>OSInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, os_core.o(i.OSInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = OSInit &rArr; OS_InitTaskStat &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2181710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[2182ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[2182afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[2182b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[2182b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitRdyList
<LI><a href="#[2182bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitMisc
<LI><a href="#[2182bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
<LI><a href="#[2ca2af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookEnd
<LI><a href="#[2ca2b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookBegin
</UL>
<BR>[Called By]<UL><LI><a href="#[2137a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ca2b34]"></a>OSInitHookBegin</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSInitHookBegin))
<BR><BR>[Called By]<UL><LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2ca2af8]"></a>OSInitHookEnd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSInitHookEnd))
<BR><BR>[Called By]<UL><LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2cb07c0]"></a>OSIntExit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, os_core.o(i.OSIntExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[2182a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
<LI><a href="#[2ca2288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[213ee24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_a.o(.text)
</UL>
<P><STRONG><a name="[217f1cc]"></a>OSMboxCreate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, os_mbox.o(i.OSMboxCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSMboxCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[2181a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2178cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
</UL>

<P><STRONG><a name="[2137840]"></a>OSSemCreate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, os_sem.o(i.OSSemCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[2181a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[213d150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskCreate
<LI><a href="#[2178cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[2178d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[217dcf0]"></a>OSSemPend</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, os_sem.o(i.OSSemPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2181968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2181a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[2181ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTOAbort
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2178c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
</UL>

<P><STRONG><a name="[217dc78]"></a>OSSemPost</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, os_sem.o(i.OSSemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[2181968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2181a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2178b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>

<P><STRONG><a name="[2137804]"></a>OSStart</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, os_core.o(i.OSStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSStart
</UL>
<BR>[Calls]<UL><LI><a href="#[2182a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
<LI><a href="#[2ca2300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[2137a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21377c8]"></a>OSStatInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, os_core.o(i.OSStatInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OSStatInit &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[218174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[213d114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
</UL>

<P><STRONG><a name="[2ca2abc]"></a>OSTCBInitHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTCBInitHook))
<BR><BR>[Calls]<UL><LI><a href="#[2137bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TCBInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[21818b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[213778c]"></a>OSTaskCreate</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, os_task.o(i.OSTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[21818b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[2181968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2ca2990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2137a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2137750]"></a>OSTaskCreateExt</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, os_task.o(i.OSTaskCreateExt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[217c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStkClr
<LI><a href="#[21818b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[2181968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2ca2990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[213d150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskCreate
<LI><a href="#[2182ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[2182afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
</UL>

<P><STRONG><a name="[2ca2a80]"></a>OSTaskCreateHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskCreateHook))
<BR><BR>[Calls]<UL><LI><a href="#[2137b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskCreateHook
</UL>
<BR>[Called By]<UL><LI><a href="#[21818b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[2ca2a08]"></a>OSTaskIdleHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskIdleHook))
<BR><BR>[Calls]<UL><LI><a href="#[2137b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskIdleHook
</UL>
<BR>[Called By]<UL><LI><a href="#[2181878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[21817c4]"></a>OSTaskNameSet</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, os_task.o(i.OSTaskNameSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTaskNameSet
</UL>
<BR>[Calls]<UL><LI><a href="#[21818f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
<LI><a href="#[218192c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrCopy
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2182ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[2182afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
</UL>

<P><STRONG><a name="[2ca29cc]"></a>OSTaskStatHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskStatHook))
<BR><BR>[Calls]<UL><LI><a href="#[2137ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStatHook
</UL>
<BR>[Called By]<UL><LI><a href="#[218183c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[2181788]"></a>OSTaskStkChk</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, os_task.o(i.OSTaskStkChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2181800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStatStkChk
</UL>

<P><STRONG><a name="[2ca2990]"></a>OSTaskStkInit</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskStkInit))
<BR><BR>[Called By]<UL><LI><a href="#[2137750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[213778c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[2ca2954]"></a>OSTaskSwHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskSwHook))
<BR><BR>[Calls]<UL><LI><a href="#[2137a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskSwHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_a.o(.text)
</UL>
<P><STRONG><a name="[218174c]"></a>OSTimeDly</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, os_time.o(i.OSTimeDly))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2181968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2137714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[21377c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[2178df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
<LI><a href="#[2178e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[218183c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[2137714]"></a>OSTimeDlyHMSM</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, os_time.o(i.OSTimeDlyHMSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[218174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[213d114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
<LI><a href="#[213d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskKbd
</UL>

<P><STRONG><a name="[217be00]"></a>OSTimeGet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, os_time.o(i.OSTimeGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2178d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>

<P><STRONG><a name="[21376d8]"></a>OSTimeSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, os_time.o(i.OSTimeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSTimeSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2137a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2cb0748]"></a>OSTimeTick</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, os_core.o(i.OSTimeTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca2918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[213ee24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[2ca2918]"></a>OSTimeTickHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTimeTickHook))
<BR><BR>[Called By]<UL><LI><a href="#[2cb0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[213769c]"></a>OS_CPU_SysTickInit</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bsp.o(i.OS_CPU_SysTickInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OS_CPU_SysTickInit &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2caeba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[213d114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
</UL>

<P><STRONG><a name="[2181ad0]"></a>OS_EventTOAbort</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, os_core.o(i.OS_EventTOAbort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_EventTOAbort
</UL>
<BR>[Called By]<UL><LI><a href="#[217dcf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>

<P><STRONG><a name="[2181a94]"></a>OS_EventTaskRdy</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, os_core.o(i.OS_EventTaskRdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[217dc78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>

<P><STRONG><a name="[2181a58]"></a>OS_EventTaskWait</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, os_core.o(i.OS_EventTaskWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_EventTaskWait
</UL>
<BR>[Called By]<UL><LI><a href="#[217dcf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>

<P><STRONG><a name="[2181a1c]"></a>OS_EventWaitListInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, os_core.o(i.OS_EventWaitListInit))
<BR><BR>[Called By]<UL><LI><a href="#[2137840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[217f1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>

<P><STRONG><a name="[2181710]"></a>OS_FlagInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, os_flag.o(i.OS_FlagInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_FlagInit
</UL>
<BR>[Calls]<UL><LI><a href="#[21819e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[21819e0]"></a>OS_MemClr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, os_core.o(i.OS_MemClr))
<BR><BR>[Called By]<UL><LI><a href="#[2181710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[2182b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[2182bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
</UL>

<P><STRONG><a name="[2181968]"></a>OS_Sched</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, os_core.o(i.OS_Sched))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2182a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
<LI><a href="#[2ca22c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCtxSw
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2137750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[213778c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[217dc78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[217dcf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[218174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[218192c]"></a>OS_StrCopy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_core.o(i.OS_StrCopy))
<BR><BR>[Called By]<UL><LI><a href="#[21817c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
</UL>

<P><STRONG><a name="[21818f0]"></a>OS_StrLen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, os_core.o(i.OS_StrLen))
<BR><BR>[Called By]<UL><LI><a href="#[21817c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
</UL>

<P><STRONG><a name="[21818b4]"></a>OS_TCBInit</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, os_core.o(i.OS_TCBInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca2a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
<LI><a href="#[2ca2abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[2137750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[213778c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[2181878]"></a>OS_TaskIdle</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, os_core.o(i.OS_TaskIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OS_TaskIdle
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca2a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(i.OS_InitTaskIdle)
</UL>
<P><STRONG><a name="[218183c]"></a>OS_TaskStat</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, os_core.o(i.OS_TaskStat))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = OS_TaskStat &rArr; OS_TaskStatStkChk &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[218174c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2181800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStatStkChk
<LI><a href="#[2ca29cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
<LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(i.OS_InitTaskStat)
</UL>
<P><STRONG><a name="[2181800]"></a>OS_TaskStatStkChk</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, os_core.o(i.OS_TaskStatStkChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OS_TaskStatStkChk &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[2181788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
</UL>
<BR>[Called By]<UL><LI><a href="#[218183c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[217c760]"></a>OS_TaskStkClr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, os_task.o(i.OS_TaskStkClr))
<BR><BR>[Called By]<UL><LI><a href="#[2137750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[331a8c8]"></a>PROGBAR_Callback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = PROGBAR_Callback &rArr; PROGBAR_CreateIndirect &rArr; PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3d710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateIndirect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar.o(i.PROGBAR_CreateUser)
</UL>
<P><STRONG><a name="[2f3d710]"></a>PROGBAR_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, progbar_createindirect.o(i.PROGBAR_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = PROGBAR_CreateIndirect &rArr; PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[331a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[331a850]"></a>PROGBAR_CreateUser</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, progbar.o(i.PROGBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[331a670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[331adb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateIndirect
</UL>

<P><STRONG><a name="[2f3d6d4]"></a>PROGBAR_DrawSkinFlex</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, progbar_skinflex.o(i.PROGBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = PROGBAR_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3318e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[2f3d698]"></a>PROGBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, progbar_skin.o(i.PROGBAR_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[2f3d65c]"></a>PROGBAR_SetFont</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, progbar_setfont.o(i.PROGBAR_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[2f3d620]"></a>PROGBAR_SetMinMax</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, progbar_setminmax.o(i.PROGBAR_SetMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetMinMax &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[2f3d5e4]"></a>PROGBAR_SetTextAlign</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, progbar_settextalign.o(i.PROGBAR_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[2f3d5a8]"></a>PROGBAR_SetValue</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, progbar.o(i.PROGBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[327eb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[331a724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[331a760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[331a79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[331adb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
</UL>

<P><STRONG><a name="[331a79c]"></a>PROGBAR__GetTextLocked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, progbar.o(i.PROGBAR__GetTextLocked))
<BR><BR>[Calls]<UL><LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3319464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[331a760]"></a>PROGBAR__GetTextRect</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR__GetTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3319464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[331a724]"></a>PROGBAR__Value2Pos</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR__Value2Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PROGBAR__Value2Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3319464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[213ef8c]"></a>PVD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PVD_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[34b9270]"></a>RADIO_AddValue</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, radio.o(i.RADIO_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34b9090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[34b9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[34b91bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
</UL>

<P><STRONG><a name="[34b9234]"></a>RADIO_Callback</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, radio.o(i.RADIO_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = RADIO_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[34b9108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[34b91bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
<LI><a href="#[34b97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(i.RADIO_CreateUser)
</UL>
<P><STRONG><a name="[2fb3764]"></a>RADIO_CreateIndirect</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, radio_createindirect.o(i.RADIO_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = RADIO_CreateIndirect &rArr; RADIO_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[3318654]"></a>RADIO_CreateUser</STRONG> (Thumb, 206 bytes, Stack size 72 bytes, radio.o(i.RADIO_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = RADIO_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[32c3eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[3369720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateIndirect
</UL>

<P><STRONG><a name="[34b91bc]"></a>RADIO_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, radio.o(i.RADIO_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = RADIO_Dec &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34b9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[34b9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[2fb3728]"></a>RADIO_DrawSkinFlex</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, radio_skinflex.o(i.RADIO_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = RADIO_DrawSkinFlex &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[3317448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(i._DemoSkinning)
</UL>
<P><STRONG><a name="[34b9108]"></a>RADIO_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radio.o(i.RADIO_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = RADIO_Inc &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34b9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[34b9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[2fb36ec]"></a>RADIO_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, radio_skin.o(i.RADIO_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[2fb36b0]"></a>RADIO_SetText</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, radio_settext.o(i.RADIO_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = RADIO_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3318258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[331f788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[34b9090]"></a>RADIO_SetValue</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, radio.o(i.RADIO_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34b9054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[34b9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[34b97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[3317b50]"></a>RADIO__GetButtonSize</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, radio.o(i.RADIO__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RADIO__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(.data)
</UL>
<P><STRONG><a name="[34b9054]"></a>RADIO__SetValue</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, radio.o(i.RADIO__SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[34b9090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>

<P><STRONG><a name="[2ca6fe0]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2caec54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
</UL>

<P><STRONG><a name="[2caebdc]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2caec54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
<LI><a href="#[2caec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tp_Config
<LI><a href="#[2caedf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[2caedbc]"></a>RCC_Configuration</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_Configuration &rArr; SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2caea38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2137a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[2caeba0]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[213769c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickInit
</UL>

<P><STRONG><a name="[213ef50]"></a>RCC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.RCC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213ef14]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.RTCAlarm_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213eed8]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[34b8280]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34b7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[34b8118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[34b8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[34b8988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[34b8244]"></a>SCROLLBAR_Callback</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[34b7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[34b8118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[34b8190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[34b8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34b8988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(i.SCROLLBAR_CreateUser)
</UL>
<P><STRONG><a name="[3360b34]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, scrollbar_create.o(i.SCROLLBAR_CreateAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[34b8208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3360eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[34b8208]"></a>SCROLLBAR_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, scrollbar.o(i.SCROLLBAR_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34b81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[3360b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>

<P><STRONG><a name="[34b81cc]"></a>SCROLLBAR_CreateUser</STRONG> (Thumb, 242 bytes, Stack size 64 bytes, scrollbar.o(i.SCROLLBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32beca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[34b7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[34b8208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[34b8190]"></a>SCROLLBAR_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Dec &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34b8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[2f3d56c]"></a>SCROLLBAR_DrawSkinFlex</STRONG> (Thumb, 370 bytes, Stack size 72 bytes, scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_DrawSkinFlex &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331614c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[3316188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[3316728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[3565958]"></a>SCROLLBAR_GetDefaultWidth</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar_defaults.o(i.SCROLLBAR_GetDefaultWidth))
<BR><BR>[Called By]<UL><LI><a href="#[3565994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[32bb030]"></a>SCROLLBAR_GetValue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, scrollbar_getvalue.o(i.SCROLLBAR_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_GetValue &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[32bbeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
</UL>

<P><STRONG><a name="[34b8118]"></a>SCROLLBAR_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34b8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[356591c]"></a>SCROLLBAR_SetColor</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, scrollbar_setcolor.o(i.SCROLLBAR_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[35659d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>

<P><STRONG><a name="[2f3d530]"></a>SCROLLBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scrollbar_skin.o(i.SCROLLBAR_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[34b7fec]"></a>SCROLLBAR_SetValue</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[34b8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[35658e0]"></a>SCROLLBAR_SetWidth</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scrollbar_setwidth.o(i.SCROLLBAR_SetWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34b7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[355bee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[3565994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[34b7fb0]"></a>SCROLLBAR__InvalidatePartner</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__InvalidatePartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR__InvalidatePartner &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30d2820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[34b7f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[34b81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[35658e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[3316cc8]"></a>SCROLLBAR__Rect2VRect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__Rect2VRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCROLLBAR__Rect2VRect
</UL>
<BR>[Called By]<UL><LI><a href="#[33171b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[2f3d4f4]"></a>SLIDER_DrawSkinFlex</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, slider_skinflex.o(i.SLIDER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = SLIDER_DrawSkinFlex &rArr; _DrawThumbV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[3315594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[331560c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[3315684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[33156fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[2f3d4b8]"></a>SLIDER_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, slider_skin.o(i.SLIDER_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[213ee9c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SPI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213ee60]"></a>SPI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SPI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[2caeb64]"></a>SPI_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[2caec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tp_Config
</UL>

<P><STRONG><a name="[2caeb28]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2caed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>

<P><STRONG><a name="[2caeaec]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[2caed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>

<P><STRONG><a name="[2caeab0]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[2caed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>

<P><STRONG><a name="[2caea74]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2caec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tp_Config
</UL>

<P><STRONG><a name="[2caed80]"></a>SPI_WriteByte</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp.o(i.SPI_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2caeab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[2caeaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[2caeb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2caeccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadY
<LI><a href="#[2caed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadX
</UL>

<P><STRONG><a name="[2caed44]"></a>SpiDelay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp.o(i.SpiDelay))
<BR><BR>[Called By]<UL><LI><a href="#[2caeccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadY
<LI><a href="#[2caed08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPReadX
</UL>

<P><STRONG><a name="[213ee24]"></a>SysTickHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_it.o(i.SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = SysTickHandler &rArr; OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2cb070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[2cb0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[2cb07c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[2caea38]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[30d0804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[2caedbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[213ede8]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TAMPER_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[34b6318]"></a>TEXT_Callback</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, text.o(i.TEXT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = TEXT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(i.TEXT_CreateUser)
</UL>
<P><STRONG><a name="[2f3d47c]"></a>TEXT_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, text_createindirect.o(i.TEXT_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = TEXT_CreateIndirect &rArr; TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>
<BR>[Address Reference Count : 3]<UL><LI> guidemo.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> messagebox.o(i.MESSAGEBOX_Create)
</UL>
<P><STRONG><a name="[336e70c]"></a>TEXT_CreateUser</STRONG> (Thumb, 142 bytes, Stack size 72 bytes, text.o(i.TEXT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateIndirect
</UL>

<P><STRONG><a name="[331b1ec]"></a>TEXT_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, text_default.o(i.TEXT_GetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[2f3d440]"></a>TEXT_SetFont</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text_setfont.o(i.TEXT_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = TEXT_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[2f3d404]"></a>TEXT_SetText</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, text_settext.o(i.TEXT_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c754c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_UpdateControlText
<LI><a href="#[2f3e4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfo
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[213edac]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM1_BRK_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213ed70]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM1_CC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213ed34]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM1_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213ecf8]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM1_UP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213ecbc]"></a>TIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213ec80]"></a>TIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213ec44]"></a>TIM4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[2caed08]"></a>TPReadX</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp.o(i.TPReadX))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TPReadX &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[213796c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[21379a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2caed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDelay
<LI><a href="#[2caed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[217b248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
</UL>

<P><STRONG><a name="[2caeccc]"></a>TPReadY</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp.o(i.TPReadY))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TPReadY &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[213796c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[21379a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2caed44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDelay
<LI><a href="#[2caed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[217b20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
</UL>

<P><STRONG><a name="[336b55c]"></a>TREEVIEW_AttachItem</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, treeview.o(i.TREEVIEW_AttachItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_AttachItem &rArr; _LinkItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[336cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[336d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3013e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
</UL>

<P><STRONG><a name="[336b520]"></a>TREEVIEW_Callback</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, treeview.o(i.TREEVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_Callback &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2fb35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[331f530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[336cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[336d3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>
<BR>[Address Reference Count : 1]<UL><LI> treeview.o(i.TREEVIEW_CreateUser)
</UL>
<P><STRONG><a name="[3014074]"></a>TREEVIEW_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, treeview_createindirect.o(i.TREEVIEW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_CreateIndirect &rArr; TREEVIEW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[336b4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_treeview.o(.constdata)
</UL>
<P><STRONG><a name="[336b4a8]"></a>TREEVIEW_CreateUser</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, treeview.o(i.TREEVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c7420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3014074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateIndirect
</UL>

<P><STRONG><a name="[3014038]"></a>TREEVIEW_DecSel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, treeview.o(i.TREEVIEW_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_DecSel &rArr; _MoveSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[336cc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[3013ffc]"></a>TREEVIEW_GetItem</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, treeview.o(i.TREEVIEW_GetItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_GetItem &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevItem
<LI><a href="#[336d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[30142cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[3013fc0]"></a>TREEVIEW_GetSel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[336cc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[3013f84]"></a>TREEVIEW_ITEM_Collapse</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, treeview.o(i.TREEVIEW_ITEM_Collapse))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_ITEM_Collapse &rArr; _CollapseItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[336d2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[336b3f4]"></a>TREEVIEW_ITEM_Create</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, treeview.o(i.TREEVIEW_ITEM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_ITEM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3013e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
</UL>

<P><STRONG><a name="[3013f48]"></a>TREEVIEW_ITEM_Expand</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, treeview.o(i.TREEVIEW_ITEM_Expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_ITEM_Expand &rArr; _ExpandItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[336d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
</UL>
<BR>[Called By]<UL><LI><a href="#[30142cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
<LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[3013f0c]"></a>TREEVIEW_ITEM_GetInfo</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_ITEM_GetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_ITEM_GetInfo &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[3013ed0]"></a>TREEVIEW_ITEM_SetImage</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, treeview.o(i.TREEVIEW_ITEM_SetImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_ITEM_SetImage &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[3013e94]"></a>TREEVIEW_IncSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, treeview.o(i.TREEVIEW_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_IncSel &rArr; _MoveSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[336cc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[3013e58]"></a>TREEVIEW_InsertItem</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, treeview.o(i.TREEVIEW_InsertItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_InsertItem &rArr; TREEVIEW_AttachItem &rArr; _LinkItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[336b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
</UL>
<BR>[Called By]<UL><LI><a href="#[30142cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[336b214]"></a>TREEVIEW_OwnerDraw</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, treeview.o(i.TREEVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_OwnerDraw &rArr; _OnOwnerdraw_Paint &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[336cb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> treeview.o(i.TREEVIEW_CreateUser)
</UL>
<P><STRONG><a name="[3013e1c]"></a>TREEVIEW_SetAutoScrollH</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetAutoScrollH))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_SetAutoScrollH &rArr; _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[336c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[30142cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[3013de0]"></a>TREEVIEW_SetAutoScrollV</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[336c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[30142cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[3013da4]"></a>TREEVIEW_SetHasLines</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetHasLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_SetHasLines &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[3013d68]"></a>TREEVIEW_SetSelMode</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetSelMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = TREEVIEW_SetSelMode &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[213ec08]"></a>USART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213ebcc]"></a>USART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213eb90]"></a>USART3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USART3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213eb54]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USBWakeUp_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213eb18]"></a>USB_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USB_HP_CAN_TX_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213eadc]"></a>USB_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USB_LP_CAN_RX0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[32c7510]"></a>WIDGET_AndState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_AndState))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[32c76f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[32c8014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[348015c]"></a>WIDGET_EFFECT_3D_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i.WIDGET_EFFECT_3D_DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WIDGET_EFFECT_3D_DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[34b4eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[33699f0]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET_GetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[34f8990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonSize
</UL>

<P><STRONG><a name="[32c74d4]"></a>WIDGET_HandleActive</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, widget.o(i.WIDGET_HandleActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[32c0940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32c745c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3369630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[32bb51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[331a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[34b6318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[34b9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[32c7498]"></a>WIDGET_OrState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_OrState))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2f3e2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[32c76f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[32c808c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2f36690]"></a>WIDGET_SetDefaultEffect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, widget.o(i.WIDGET_SetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[331a670]"></a>WIDGET_SetEffect</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, widget_seteffect.o(i.WIDGET_SetEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[32c745c]"></a>WIDGET_SetState</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, widget.o(i.WIDGET_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[355bee4]"></a>WIDGET_SetWidth</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, widget_setwidth.o(i.WIDGET_SetWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[355b32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[355b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[35658e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[3369978]"></a>WIDGET__DrawFocusRect</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, widget.o(i.WIDGET__DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawFocusRect &rArr; GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[331614c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3316188]"></a>WIDGET__DrawTriangle</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, widget.o(i.WIDGET__DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[3561d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3369900]"></a>WIDGET__DrawVLine</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, widget.o(i.WIDGET__DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawVLine &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[331614c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[32c09b8]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET__EFFECT_DrawDown))
<BR><BR>[Called By]<UL><LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[3323a54]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WIDGET__EFFECT_DrawDownRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[331614c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[336a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>
<BR>[Called By]<UL><LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[33698c4]"></a>WIDGET__EFFECT_DrawUpRect</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WIDGET__EFFECT_DrawUpRect &rArr; _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[331614c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[336a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>
<BR>[Called By]<UL><LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3561d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3369888]"></a>WIDGET__FillRectEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, widget.o(i.WIDGET__FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WIDGET__FillRectEx &rArr; GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32bc9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[331614c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3561d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[32c097c]"></a>WIDGET__FillStringInRect</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, widget_fillstringinrect.o(i.WIDGET__FillStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[336af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[348024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
</UL>

<P><STRONG><a name="[336984c]"></a>WIDGET__GetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, widget.o(i.WIDGET__GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetBkColor &rArr; WM_GetBkColor &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[32c4450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIALOG_GetBkColor
<LI><a href="#[3369720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3321894]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[33170c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3321ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3561d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[32c0940]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[33696a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[33697d4]"></a>WIDGET__GetXSize</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, widget.o(i.WIDGET__GetXSize))
<BR><BR>[Called By]<UL><LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[3369798]"></a>WIDGET__GetYSize</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, widget.o(i.WIDGET__GetYSize))
<BR><BR>[Called By]<UL><LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[32c7420]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widget.o(i.WIDGET__Init))
<BR><BR>[Called By]<UL><LI><a href="#[32bb4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[32c77a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[336b4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[34b81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[331614c]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, widget.o(i.WIDGET__RotateRect90))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[3323a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[3369888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[33698c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[3369900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[3369978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
</UL>

<P><STRONG><a name="[3323a18]"></a>WIDGET__SetScrollState</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(i.WIDGET__SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[33696e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[331f800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
<LI><a href="#[336c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[328110c]"></a>WM_Activate</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[3281274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[2f36654]"></a>WM_BringToBottom</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, wm_bringtobottom.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3365cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[33664bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[32bf4a0]"></a>WM_BringToTop</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm_bringtotop.o(i.WM_BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WM_BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3366354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[33665e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[34b1728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[32bff68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[33239dc]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_checkscrollpos.o(i.WM_CheckScrollBounds))
<BR><BR>[Called By]<UL><LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[331f4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[331f56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[331f800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
<LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3566c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[331f56c]"></a>WM_CheckScrollPos</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_checkscrollpos.o(i.WM_CheckScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_CheckScrollPos
</UL>
<BR>[Calls]<UL><LI><a href="#[33239dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[331f800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
</UL>

<P><STRONG><a name="[2fb3674]"></a>WM_ClrHasTrans</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, wm_settrans.o(i.WM_ClrHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WM_ClrHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[2fb3638]"></a>WM_CreateTimer</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_timer.o(i.WM_CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[33d2cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[33d2d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[2fb5a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[3366804]"></a>WM_CreateWindow</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, wm.o(i.WM_CreateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[318b888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[2fb35fc]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[3366318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[33665e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[30d6060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[32bb4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[32c3a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[32c77a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[3366804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindow
<LI><a href="#[336b4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[336e70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[34b81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[32810d0]"></a>WM_Deactivate</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm.o(i.WM_Deactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3281184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[327ebc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
</UL>

<P><STRONG><a name="[2f3d3c8]"></a>WM_DefaultProc</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33661ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[33696a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[2f3e994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[2f3ea48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[2fb5a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[30d5f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[30d6024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWin
<LI><a href="#[32bb51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[331a8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[331b228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Callback
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[3367b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[34b6318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[34b9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[2fb35c0]"></a>WM_DeleteTimer</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wm_timer.o(i.WM_DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[33d2d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[3366174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[34b8a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>

<P><STRONG><a name="[2f3d38c]"></a>WM_DeleteWindow</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, wm.o(i.WM_DeleteWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = WM_DeleteWindow &rArr; WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3366174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[3366318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[3366390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[3366480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[3366624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[3368190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[30d6114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[30d6150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeMain
<LI><a href="#[30d618c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[33667c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[3368190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[3481f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[3565d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[2f3d350]"></a>WM_DisableMemdev</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wm_memdev.o(i.WM_DisableMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_DisableMemdev &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[32bf7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[2fb3584]"></a>WM_DisableWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_enablewindow.o(i.WM_DisableWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_DisableWindow &rArr; WM_SetEnableState &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[336579c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
</UL>

<P><STRONG><a name="[2f3d314]"></a>WM_EnableMemdev</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, wm_memdev.o(i.WM_EnableMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_EnableMemdev &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[30d294c]"></a>WM_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(i.WM_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[33667c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[3182300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[33667c8]"></a>WM_Exec1</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, wm.o(i.WM_Exec1))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b97b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[3368118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>
<BR>[Called By]<UL><LI><a href="#[30d294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[34b1728]"></a>WM_ForEachDesc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_foreachdesc.o(i.WM_ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_ForEachDesc &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3560048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[336678c]"></a>WM_GetActiveWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_GetActiveWindow))
<BR><BR>[Called By]<UL><LI><a href="#[33637bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>

<P><STRONG><a name="[3369720]"></a>WM_GetBkColor</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_getbkcolor.o(i.WM_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetBkColor &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3318654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[336984c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
</UL>

<P><STRONG><a name="[32c4c0c]"></a>WM_GetClientRect</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wm_getclientrect.o(i.WM_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[31859d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32c5350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[3317f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3321894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[3323a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[3369270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[3369360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
<LI><a href="#[348015c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
<LI><a href="#[34b4fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
<LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2fb3548]"></a>WM_GetClientRectEx</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM_GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33696a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[32c2f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[3315dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3319464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[331f6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[331fb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[34bca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
</UL>

<P><STRONG><a name="[2fb350c]"></a>WM_GetClientWindow</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, wm_getclientwindow.o(i.WM_GetClientWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetClientWindow &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>

<P><STRONG><a name="[2f3d2d8]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_getdesktopwindow.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[2f34df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2f3e55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideInfoWin
<LI><a href="#[2f3e598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideControlWin
<LI><a href="#[2f3e994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2fb38cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[2fb3980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[318c440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[327c7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UndoBK
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[2f3d29c]"></a>WM_GetDialogItem</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_getdialogitem.o(i.WM_GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[336498c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_UpdateControlText
<LI><a href="#[2f3e4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfo
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[2f3ea84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowProgress
<LI><a href="#[2f3eafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HideProgress
<LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[2fb5a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[2fb5ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
<LI><a href="#[2fb5b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
<LI><a href="#[3014254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3323a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[3360eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[34b7f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[3565994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[35659d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>

<P><STRONG><a name="[32c9964]"></a>WM_GetFirstChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_getfirstchild.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_GetFirstChild &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[327c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveStaticDevice
<LI><a href="#[32bd04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[32bf590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[3366570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3366750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[33d343c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[3506874]"></a>WM_GetFlags</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getflags.o(i.WM_GetFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_GetFlags &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[34819f8]"></a>WM_GetFocussedWindow</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_getfocussedwindow.o(i.WM_GetFocussedWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_GetFocussedWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[336024c]"></a>WM_GetHasTrans</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_GetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_GetHasTrans &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[34b66d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35616c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[2f3d260]"></a>WM_GetId</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_getid.o(i.WM_GetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[32bbeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[331b228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Callback
<LI><a href="#[336498c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[34b7f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[3506220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[34b0210]"></a>WM_GetInsideRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getinsiderect.o(i.WM_GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRect &rArr; WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[32beca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[32beca8]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_getinsiderect.o(i.WM_GetInsideRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf02c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[34b0210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[34b81cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[34bc114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[33239a0]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, wm_getinsiderectexscrollbar.o(i.WM_GetInsideRectExScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[32beca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[3506874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[32bc098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
<LI><a href="#[32bc188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[32bc200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[331ddfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[331f8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[3320430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3320610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3323400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[336ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3565a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3565c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3566d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[3566ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>

<P><STRONG><a name="[32c9928]"></a>WM_GetNextSibling</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_getnextsibling.o(i.WM_GetNextSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[327c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveStaticDevice
<LI><a href="#[32bd04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[32bf590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
</UL>

<P><STRONG><a name="[3323964]"></a>WM_GetOrgX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_getorg.o(i.WM_GetOrgX))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_GetOrgX &rArr; WM_GetWindowOrgX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
</UL>
<BR>[Called By]<UL><LI><a href="#[32bc200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
</UL>

<P><STRONG><a name="[3323928]"></a>WM_GetOrgY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_getorg.o(i.WM_GetOrgY))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_GetOrgY &rArr; WM_GetWindowOrgY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30d285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
</UL>
<BR>[Called By]<UL><LI><a href="#[32bc200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
</UL>

<P><STRONG><a name="[30d2910]"></a>WM_GetParent</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_getparent.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f36654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[30d5f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
<LI><a href="#[30d6114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[30d618c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[32bf3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[32bf428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[331f5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[3320598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[3362538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[33661ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[336984c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[34b3348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[34b7f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[34b7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[34bca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3566ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>

<P><STRONG><a name="[34b7f38]"></a>WM_GetScrollPartner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_getscrollpartner.o(i.WM_GetScrollPartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[34b7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[331f530]"></a>WM_GetScrollState</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_getscrollstate.o(i.WM_GetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[33238ec]"></a>WM_GetScrollbarH</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getscrollbar.o(i.WM_GetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3506220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[32bb51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[33171b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[33238b0]"></a>WM_GetScrollbarV</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getscrollbar.o(i.WM_GetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3506220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[32bb51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[33171b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[34bca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[30d28d4]"></a>WM_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_userdata.o(i.WM_GetUserData))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WM_GetUserData &rArr; WM__GetUserDataEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[32c73a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[30d6150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeMain
</UL>

<P><STRONG><a name="[30d2898]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getorg.o(i.WM_GetWindowOrgX))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowOrgX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[3323964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
</UL>

<P><STRONG><a name="[30d285c]"></a>WM_GetWindowOrgY</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getorg.o(i.WM_GetWindowOrgY))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowOrgY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[3323928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
</UL>

<P><STRONG><a name="[32c98ec]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_getwindowrect.o(i.WM_GetWindowRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[32bf3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[33171b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[3561e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[2f3d224]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33637bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
<LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c5a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c68e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[34bca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
</UL>

<P><STRONG><a name="[2f3d1e8]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33637bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d609c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
<LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[32c5a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c68e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34bcb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[34bcbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
</UL>

<P><STRONG><a name="[31b883c]"></a>WM_HandlePID</STRONG> (Thumb, 620 bytes, Stack size 136 bytes, wm_touch.o(i.WM_HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = WM_HandlePID &rArr; GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; GUI_MEMDEV_Select &rArr; WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[2fb34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318acd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b8878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsEmpty
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3362574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[33625b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[33661b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[340cdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[34b0e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
<LI><a href="#[350157c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[35015b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[35015f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
<LI><a href="#[350166c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[336addc]"></a>WM_HasCaptured</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_hascaptured.o(i.WM_HasCaptured))
<BR><BR>[Called By]<UL><LI><a href="#[32bf3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[32bf464]"></a>WM_HasFocus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_hasfocus.o(i.WM_HasFocus))
<BR><BR>[Called By]<UL><LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[2f3d1ac]"></a>WM_HideWindow</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wm_hide.o(i.WM_HideWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33664bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideInfoWin
<LI><a href="#[2f3e598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideControlWin
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2f3eafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HideProgress
<LI><a href="#[2fb38cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[3360eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[318b888]"></a>WM_Init</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = WM_Init &rArr; WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30cc5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[33661b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[3366804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[21378f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[3323874]"></a>WM_InvalidateRect</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[33664bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[3366570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[33665ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[3366660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[336669c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[32bc098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
<LI><a href="#[331ddfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[331f8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[336c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3565a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
</UL>

<P><STRONG><a name="[2f3d170]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f36744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2f367bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2f367f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2f36834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2f36870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2f368ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2f368e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f369d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2f36b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[2f36b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[2f3d044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3d404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f3d440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[2f3d5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2f3d620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[2f3d65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[2f3e0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2f3e124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2fb3674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[2fb36b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[2fb3b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[2fb3c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[2fb3cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[2fb3d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[2fb3db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[2fb3e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[3013d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[3013da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[3013ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[30d6114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[30d6150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeMain
<LI><a href="#[30d618c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[30d61c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyMain
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[318b888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[32bbeb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[32bf4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[32bf6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[32bfef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[32c0e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[32c745c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[32c7510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[32c7678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[331b7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[331f5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[331f74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[336c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[336c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[336cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[336d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[336d2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[33d343c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[3480198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
<LI><a href="#[3481a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[3481aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[3481ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[3483b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[34b1980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[34b7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[34b7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[34b9054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[356591c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[33d343c]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm_show.o(i.WM_InvalidateWindowAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32c9964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[33d343c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[33d343c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[3366750]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32c9964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3366750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[3367ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[33664f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3366750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[34b8f64]"></a>WM_IsFocussable</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, wm_isfocussable.o(i.WM_IsFocussable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_IsFocussable &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[32c42e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[34b97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2f3d134]"></a>WM_IsVisible</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm_isvisible.o(i.WM_IsVisible))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_IsVisible &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfo
</UL>

<P><STRONG><a name="[2fb34d0]"></a>WM_IsWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_iswindow.o(i.WM_IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3366480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[3362538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[2f3d0f8]"></a>WM_MakeModal</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, wm_makemodal.o(i.WM_MakeModal))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WM_MakeModal &rArr; WM__SendPIDMessage &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3362538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[3362574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[33625b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[32bf428]"></a>WM_MoveChildTo</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, wm_movechildto.o(i.WM_MoveChildTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM_MoveChildTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[35049c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
</UL>

<P><STRONG><a name="[33d38b0]"></a>WM_MoveTo</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_move.o(i.WM_MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[35049fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
</UL>

<P><STRONG><a name="[34815fc]"></a>WM_MoveWindow</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_move.o(i.WM_MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[35049c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[32bd04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[32bf3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[3369630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[32c73e4]"></a>WM_NotifyParent</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_notifyparent.o(i.WM_NotifyParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[33661ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[32c1b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[32c1b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[32c8014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[32c808c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[3360b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[336c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3481df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[34b7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34b9054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[34b97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[31b96c4]"></a>WM_OnKey</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, wm_onkey.o(i.WM_OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_OnKey &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[31b97b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[35015f4]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_pid__getprevstate.o(i.WM_PID__SetPrevState))
<BR><BR>[Called By]<UL><LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[33625b0]"></a>WM_ReleaseCapture</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_setcapture.o(i.WM_ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_ReleaseCapture &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[350346c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[3360738]"></a>WM_ResizeWindow</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, wm_resizewindow.o(i.WM_ResizeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[327eb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[3366318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[33664bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[3366570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3369630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[32bd04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[3369630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[355b32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[355b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>

<P><STRONG><a name="[2fb3494]"></a>WM_RestartTimer</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_timer.o(i.WM_RestartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_RestartTimer &rArr; GUI_TIMER_SetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33d2cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[33d2cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[2fb5a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34b8988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[35015b8]"></a>WM_Screen2hWin</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_screen2win.o(i.WM_Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_Screen2hWin &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[355e914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>
<BR>[Called By]<UL><LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[2f3d0bc]"></a>WM_SelectWindow</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_SelectWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3281184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30d5f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[318b888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[3366444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[3486174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[2f3d080]"></a>WM_SendMessage</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm.o(i.WM_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2f3e994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[2fb350c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[30d5f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
<LI><a href="#[32beca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[32c4360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
<LI><a href="#[32c439c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
<LI><a href="#[331a670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[331f530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[33696e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[3369720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[33d30f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[34b8f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
</UL>

<P><STRONG><a name="[30d2820]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_sendmessagenopara.o(i.WM_SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_SendMessageNoPara &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3361d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[3366408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[34b7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[33661ec]"></a>WM_SendToParent</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_sendtoparent.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WM_SendToParent &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[2f3d044]"></a>WM_SetCallback</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_setcallback.o(i.WM_SetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WM_SetCallback &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2fb3c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
<LI><a href="#[2fb5b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[336ada0]"></a>WM_SetCapture</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm_setcapture.o(i.WM_SetCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_SetCapture &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[350346c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[32bf3ec]"></a>WM_SetCaptureMove</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, wm_setcapturemove.o(i.WM_SetCaptureMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WM_SetCaptureMove &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[336ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[336addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[34815fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[32bff68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2137660]"></a>WM_SetCreateFlags</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_setcreateflags.o(i.WM_SetCreateFlags))
<BR><BR>[Called By]<UL><LI><a href="#[213d18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUserIF
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[3366714]"></a>WM_SetDefault</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm.o(i.WM_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault &rArr; GUI_SetTextAlign &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[33662dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[3366408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[3486174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[336579c]"></a>WM_SetEnableState</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, wm_enablewindow.o(i.WM_SetEnableState))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_SetEnableState &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
</UL>

<P><STRONG><a name="[2f343e0]"></a>WM_SetFocus</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, wm_setfocus.o(i.WM_SetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_SetFocus &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[30142cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
<LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[30d6060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
<LI><a href="#[30d6114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[30d618c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[30d6240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
<LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[32bf3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[32bff68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[32c42e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[3481ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3481fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[34b97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[32c42e8]"></a>WM_SetFocusOnNextChild</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(i.WM_SetFocusOnNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WM_SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34b8f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[350292c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
<LI><a href="#[3502b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
</UL>

<P><STRONG><a name="[32bf3b0]"></a>WM_SetFocusOnPrevChild</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, wm_setfocusonprevchild.o(i.WM_SetFocusOnPrevChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WM_SetFocusOnPrevChild &rArr; WM_SetFocus &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34b8f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[35026d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
<LI><a href="#[350292c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
</UL>
<BR>[Called By]<UL><LI><a href="#[32bffe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
</UL>

<P><STRONG><a name="[2f36618]"></a>WM_SetHasTrans</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_SetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[2fb3df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[3561dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
</UL>

<P><STRONG><a name="[33696e4]"></a>WM_SetScrollState</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, wm_setscrollstate.o(i.WM_SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3323a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>

<P><STRONG><a name="[331f4f4]"></a>WM_SetScrollValue</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_checkscrollpos.o(i.WM_SetScrollValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_SetScrollValue
</UL>
<BR>[Calls]<UL><LI><a href="#[33239dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3323838]"></a>WM_SetScrollbarH</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(i.WM_SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3360bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[336c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[2fb3458]"></a>WM_SetScrollbarV</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(i.WM_SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3360b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3481c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[3013d2c]"></a>WM_SetSize</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm_setsize.o(i.WM_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[327c7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UndoBK
<LI><a href="#[327cbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeBK
<LI><a href="#[32bf554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[3481d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[3185924]"></a>WM_SetUserClipRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_setusercliprect.o(i.WM_SetUserClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[33666d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f39f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[3185a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32c097c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3315dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3319464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3321ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[30d27e4]"></a>WM_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_userdata.o(i.WM_SetUserData))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WM_SetUserData &rArr; WM__SetUserDataEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[32c736c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[30d6060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
</UL>

<P><STRONG><a name="[2f3d008]"></a>WM_SetWindowPos</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_setwindowpos.o(i.WM_SetWindowPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = WM_SetWindowPos &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[33d38b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
</UL>

<P><STRONG><a name="[355b368]"></a>WM_SetXSize</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, wm_setxsize.o(i.WM_SetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WM_SetXSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[355bee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[355b32c]"></a>WM_SetYSize</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, wm_setysize.o(i.WM_SetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[355bee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[2f3cfcc]"></a>WM_ShowWindow</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, wm_show.o(i.WM_ShowWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33d343c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2f3e46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfoWin
<LI><a href="#[2f3e4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowControlWin
<LI><a href="#[2f3ea84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowProgress
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[2fb3980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[2f3cf90]"></a>WM_ValidateWindow</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, wm_validatewindow.o(i.WM_ValidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM_ValidateWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2f3e55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideInfoWin
<LI><a href="#[2f3e598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideControlWin
<LI><a href="#[2fb38cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[2fb3980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[33666d8]"></a>WM__ActivateClipRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3366660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3367c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[33661b0]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[318b888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[336669c]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM__Client2Screen))
<BR><BR>[Calls]<UL><LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3367c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[3366660]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3366444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[33666d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[3486084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[3486174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[3366174]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, wm_timer.o(i.WM__DeleteAssocTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = WM__DeleteAssocTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33d2c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[33d2c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[32c42ac]"></a>WM__DeleteSecure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm.o(i.WM__DeleteSecure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__DeleteSecure
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[3360eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[3366624]"></a>WM__DetachWindow</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm.o(i.WM__DetachWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3366354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[33664bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[3560048]"></a>WM__ForEachDesc</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, wm__foreachdesc.o(i.WM__ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3560048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[34b1728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[3560048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[33696a8]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[32c0940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>

<P><STRONG><a name="[34b3348]"></a>WM__GetFirstSibling</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm__getfirstsibling.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3365cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[350292c]"></a>WM__GetFocussedChild</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wm__getfocussedchild.o(i.WM__GetFocussedChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetFocussedChild &rArr; WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[3560bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[32c42e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[350247c]"></a>WM__GetLastSibling</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm__getlastsibling.o(i.WM__GetLastSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetLastSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[35026d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[30cea7c]"></a>WM__GetNextIVR</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33666d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[33680a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2f3a074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3a164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[2f3bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[2f3db0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3de18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[3016360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[301666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[30d2ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[3186734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[3186eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[32bb120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[32bc980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[32bc9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32bf02c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[32c0c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[32c5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[3317448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[3322f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[3366408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[30cea40]"></a>WM__GetOrgX_AA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__getorg_aa.o(i.WM__GetOrgX_AA))
<BR><BR>[Called By]<UL><LI><a href="#[2f3bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[301666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[30d2ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
</UL>

<P><STRONG><a name="[30cea04]"></a>WM__GetOrgY_AA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__getorg_aa.o(i.WM__GetOrgY_AA))
<BR><BR>[Called By]<UL><LI><a href="#[2f3bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[301666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[30d2ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
</UL>

<P><STRONG><a name="[3365cc4]"></a>WM__GetPrevSibling</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__getprevsibling.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[34b3348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[35026d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[32c73a8]"></a>WM__GetUserDataEx</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_userdata.o(i.WM__GetUserDataEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WM__GetUserDataEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33d2938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNumBytes
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30d28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
</UL>

<P><STRONG><a name="[32bf374]"></a>WM__GetWindowSizeX</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeX))
<BR><BR>[Called By]<UL><LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[3481d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
</UL>

<P><STRONG><a name="[32bf338]"></a>WM__GetWindowSizeY</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[30ce9c8]"></a>WM__InitIVRSearch</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[3366660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[336669c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[33666d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2f3a074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3a164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[2f3bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[2f3db0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3de18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[3016360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[301666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[30d2ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[3186734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[3186eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[32813a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[32bb120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[32bc980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[32bc9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[32bd40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32bf02c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[32c0c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[32c5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[3317448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[3322f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[3366408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[3480648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[33665e8]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[32bf4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[33665ac]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3367ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[3366570]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32c9964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3366570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3366570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[3366534]"></a>WM__InvalidateParent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__InvalidateParent
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[35049c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[33664f8]"></a>WM__InvalidateRect</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33664f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[3366750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[3367ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[33664bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[33664f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[33664bc]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33664f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3366624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[32bf2fc]"></a>WM__IsAncestor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__isancestor.o(i.WM__IsAncestor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[3362574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>

<P><STRONG><a name="[32bf2c0]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm__isancestor.o(i.WM__IsAncestorOrSelf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestorOrSelf &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[32bf2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[3560bc4]"></a>WM__IsChild</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm__ischild.o(i.WM__IsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[350292c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
</UL>

<P><STRONG><a name="[32c5d64]"></a>WM__IsEnabled</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm__isenabled.o(i.WM__IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2fb3df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[336d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[34837f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[34f8918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[350157c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[35624d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3362574]"></a>WM__IsInModalArea</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_touch.o(i.WM__IsInModalArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__IsInModalArea &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[32bf2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[355e5cc]"></a>WM__IsInWindow</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_screen2win.o(i.WM__IsInWindow))
<BR><BR>[Called By]<UL><LI><a href="#[355e98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[3366480]"></a>WM__IsWindow</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wm.o(i.WM__IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2fb34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[35049fc]"></a>WM__MoveTo</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_move.o(i.WM__MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[35049c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[33d38b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[35049c0]"></a>WM__MoveWindow</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, wm_move.o(i.WM__MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3366318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[3366534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[3504d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[34815fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[35049fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>

<P><STRONG><a name="[3366444]"></a>WM__Paint</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, wm.o(i.WM__Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[3366660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[33682f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Called By]<UL><LI><a href="#[3368118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[3366408]"></a>WM__Paint1</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, wm.o(i.WM__Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WM__Paint1 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[30d2820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[3366714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[33663cc]"></a>WM__RectIsNZ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm.o(i.WM__RectIsNZ))
<BR><BR>[Called By]<UL><LI><a href="#[3367ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[34b0e04]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__RemoveCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3366390]"></a>WM__RemoveFromLinList</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveFromLinList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[3366354]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveWindowFromList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[3366624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[336966c]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__screen2client.o(i.WM__Screen2Client))
<BR><BR>[Calls]<UL><LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[336a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[32bf284]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__sendmessage.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[31b96c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[3320598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[336579c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[33661ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[3366318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[3366408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[350157c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[350346c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3566ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>

<P><STRONG><a name="[350157c]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm__sendmessageifenabled.o(i.WM__SendMessageIfEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[3362538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[3361d04]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, wm__sendmessagenopara.o(i.WM__SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
</UL>

<P><STRONG><a name="[3366318]"></a>WM__SendMsgNoData</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[35049c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3504d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[3362538]"></a>WM__SendPIDMessage</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, wm_touch.o(i.WM__SendPIDMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM__SendPIDMessage &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[350157c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[350166c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[350166c]"></a>WM__SendTouchMessage</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_touch.o(i.WM__SendTouchMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM__SendTouchMessage &rArr; WM__SendPIDMessage &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3362538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[31b883c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3360bac]"></a>WM__SetScrollbarH</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3360eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[3323838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[3360b70]"></a>WM__SetScrollbarV</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3360eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>

<P><STRONG><a name="[32c736c]"></a>WM__SetUserDataEx</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_userdata.o(i.WM__SetUserDataEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WM__SetUserDataEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33d2938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNumBytes
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30d27e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
</UL>

<P><STRONG><a name="[3369630]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 206 bytes, Stack size 56 bytes, wm__updatechildpositions.o(i.WM__UpdateChildPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[34815fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3360738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[213eaa0]"></a>WWDG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.WWDG_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[3667878]"></a>ceil</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, ceil.o(i.ceil))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ceil &rArr; __aeabi_drsub
</UL>
<BR>[Calls]<UL><LI><a href="#[3664b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[3669d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[3669dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[3408c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
</UL>

<P><STRONG><a name="[3667698]"></a>floor</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = floor &rArr; __aeabi_drsub
</UL>
<BR>[Calls]<UL><LI><a href="#[3664b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[3669d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[3669dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[3408c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
</UL>

<P><STRONG><a name="[2137a5c]"></a>main</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = main &rArr; BSP_Init &rArr; FSMC_LCD_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21376d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
<LI><a href="#[213778c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[2137804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
<LI><a href="#[21379e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_IntDis
<LI><a href="#[2137a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3663e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[36674f4]"></a>sqrt</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[36649d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[3667134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[3669330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
</UL>

<P><STRONG><a name="[2caec90]"></a>tp_Config</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, bsp.o(i.tp_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tp_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[213796c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2caea74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[2caeb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[2caebdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2caec18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2137a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[366a17c]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[2f3be74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_1
<LI><a href="#[2f3beb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_0
<LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[3408c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
</UL>

<P><STRONG><a name="[366a140]"></a>_d2f</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3664d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[366a104]"></a>__fpl_inf_d2f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[3669dbc]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3beb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_0
<LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[3667698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[3667878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
</UL>

<P><STRONG><a name="[3669d80]"></a>_dadd</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3664e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[3669df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[3669d44]"></a>__fpl_inf_dadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[3664e84]"></a>__fpl_dcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3663570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[3664c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[366918c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[3669984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[3669c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3669d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[3664d58]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[3663570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[36649d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[366972c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[366a140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[3664c68]"></a>__fpl_dcmp_InfNaN</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3663480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[3664e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[3664ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
<LI><a href="#[36692f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[3664c2c]"></a>__fpl_inf_dcmp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[366459c]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3663480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[366477c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[3667c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[3667ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[366873c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[3664560]"></a>__fpl_inf_fcmp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[36699c0]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>

<P><STRONG><a name="[3669984]"></a>_ddiv</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3664e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[366990c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv_mantissas
</UL>

<P><STRONG><a name="[3669948]"></a>__fpl_inf_ddiv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[366990c]"></a>_ddiv_mantissas</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3669984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[3669768]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[366972c]"></a>_dfix</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3664d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[36696f0]"></a>__fpl_inf_dfix</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[3669510]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[2f38184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[2f3be74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_1
<LI><a href="#[2f3beb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_0
<LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[36694d4]"></a>_dflt</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[3669498]"></a>__dflt_normalise</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[3669330]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Called By]<UL><LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[36674f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[36692f4]"></a>_dcmple</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3664c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[36691c8]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3be74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_1
<LI><a href="#[2f3beb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_0
<LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[366918c]"></a>_dmul</STRONG> (Thumb, 440 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3664e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[3669150]"></a>__fpl_inf_dmul</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)

<P><STRONG><a name="[3664b00]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Called By]<UL><LI><a href="#[3667698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[3667878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
</UL>

<P><STRONG><a name="[3664ac4]"></a>_drcmple</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3664c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[3669d08]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3be74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_1
<LI><a href="#[2f3beb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_0
<LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[3667698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[3667878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
</UL>

<P><STRONG><a name="[3669ccc]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3669df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[3669e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[36649d4]"></a>_dsqrt</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[3664d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[36674f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[3664998]"></a>__fpl_inf_dsqrt</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[3669c90]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[3669c54]"></a>_dsub</STRONG> (Thumb, 572 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3664e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[3669e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[3669c18]"></a>__fpl_inf_dsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[36648a8]"></a>__dunder</STRONG> (Thumb, 234 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[366486c]"></a>__dunder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[3669060]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[3408c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
</UL>

<P><STRONG><a name="[3669024]"></a>_f2d</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[3668fe8]"></a>__fpl_inf_f2d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[3668d18]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[318ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcInterSectLin
<LI><a href="#[3408c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
<LI><a href="#[3408c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
<LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[3668cdc]"></a>_fadd</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366477c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[3668d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[3668ca0]"></a>__fpl_inf_fadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[366477c]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3663570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[366459c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[3667da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[366891c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[3668bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[3668cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[366468c]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3663570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[3667a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbnf
<LI><a href="#[3668304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[366855c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[3669024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[3668958]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3b9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[318ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcInterSectLin
<LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
</UL>

<P><STRONG><a name="[366891c]"></a>_fdiv</STRONG> (Thumb, 476 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366477c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[36688e0]"></a>__fpl_inf_fdiv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fdiv.o(x$fpl$fdiv), UNUSED)

<P><STRONG><a name="[3668778]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, feqf.o(x$fpl$feqf))
<BR><BR>[Called By]<UL><LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[318ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcInterSectLin
<LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
</UL>

<P><STRONG><a name="[366873c]"></a>_fcmpeq</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366459c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[3668598]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Called By]<UL><LI><a href="#[2f3b9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
<LI><a href="#[3408d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[366855c]"></a>_ffix</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[3668520]"></a>__fpl_inf_ffix</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ffix.o(x$fpl$ffix), UNUSED)

<P><STRONG><a name="[3668340]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[3408c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
</UL>

<P><STRONG><a name="[3668304]"></a>_ffixu</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[36682c8]"></a>__fpl_inf_ffixu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ffixu.o(x$fpl$ffixu), UNUSED)

<P><STRONG><a name="[36680e8]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
</UL>

<P><STRONG><a name="[36680ac]"></a>_fflt</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[3668070]"></a>__fflt_normalise</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fflt_clz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3667ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffltu
</UL>

<P><STRONG><a name="[3668034]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
<LI><a href="#[3408d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[3667ff8]"></a>_ffltu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3668070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fflt_normalise
</UL>

<P><STRONG><a name="[3667f08]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[3667ecc]"></a>_fcmple</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366459c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[3667ddc]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Called By]<UL><LI><a href="#[2f3b9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[318ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcInterSectLin
<LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3408c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
<LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
<LI><a href="#[3408d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[3667da0]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366477c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[3667d64]"></a>__fpl_inf_fmul</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[3664470]"></a>__fpl_normalise2</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, fnorm2_clz.o(x$fpl$fnorm2), UNUSED)

<P><STRONG><a name="[3667c74]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[3667c38]"></a>_frcmple</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366459c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[3668bec]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[318ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcInterSectLin
<LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[3408c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
<LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[3668bb0]"></a>_fsub</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366477c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[3668d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[3668b74]"></a>__fpl_inf_fsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[3664380]"></a>__funder</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[3664344]"></a>__funder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[3663570]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[3663480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[366468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[366477c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[3664d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[3664e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[3667a94]"></a>__ARM_scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scalbnf.o(x$fpl$scalbnf))
<BR><BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[3667a58]"></a>scalbnf</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, scalbnf.o(x$fpl$scalbnf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[366468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[3667a1c]"></a>__fpl_inf_scalbnf</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, scalbnf.o(x$fpl$scalbnf), UNUSED)

<P><STRONG><a name="[3663480]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[3663570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[366459c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[3664c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[3664290]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, usenofp.o(x$fpl$usenofp), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[213f7c0]"></a>NMIException</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[213f7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMIException
</UL>
<BR>[Called By]<UL><LI><a href="#[213f7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMIException
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f784]"></a>HardFaultException</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[213f784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFaultException
</UL>
<BR>[Called By]<UL><LI><a href="#[213f784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFaultException
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f748]"></a>MemManageException</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[213f748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManageException
</UL>
<BR>[Called By]<UL><LI><a href="#[213f748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManageException
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f70c]"></a>BusFaultException</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[213f70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFaultException
</UL>
<BR>[Called By]<UL><LI><a href="#[213f70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFaultException
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f6d0]"></a>UsageFaultException</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[213f6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFaultException
</UL>
<BR>[Called By]<UL><LI><a href="#[213f6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFaultException
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f694]"></a>DebugMonitor</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[213f694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor
</UL>
<BR>[Called By]<UL><LI><a href="#[213f694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213f658]"></a>SVCHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[213f658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVCHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[213f658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVCHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_startup.o(RESET)
</UL>
<P><STRONG><a name="[213d1c8]"></a>AppTaskKbd</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app.o(i.AppTaskKbd))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = AppTaskKbd &rArr; GUI_TOUCH_Exec &rArr; GUI_TOUCH_X_MeasureY &rArr; TPReadY &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2137714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[21378b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.App_TaskCreate)
</UL>
<P><STRONG><a name="[213d18c]"></a>AppTaskUserIF</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app.o(i.AppTaskUserIF))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = AppTaskUserIF &rArr; GUIDEMO_Main &rArr; _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2137660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCreateFlags
<LI><a href="#[21378f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.App_TaskCreate)
</UL>
<P><STRONG><a name="[213d150]"></a>App_TaskCreate</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, app.o(i.App_TaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = App_TaskCreate &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2137750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[2137840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[213d114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
</UL>

<P><STRONG><a name="[213d114]"></a>App_TaskStart</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app.o(i.App_TaskStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = App_TaskStart &rArr; App_TaskCreate &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[213769c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickInit
<LI><a href="#[2137714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[21377c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[213796c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[21379a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[213d150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.main)
</UL>
<P><STRONG><a name="[2182bec]"></a>OS_InitEventList</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, os_core.o(i.OS_InitEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_InitEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[21819e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2182bb0]"></a>OS_InitMisc</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, os_core.o(i.OS_InitMisc))
<BR><BR>[Called By]<UL><LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2182b74]"></a>OS_InitRdyList</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, os_core.o(i.OS_InitRdyList))
<BR><BR>[Called By]<UL><LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2182b38]"></a>OS_InitTCBList</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, os_core.o(i.OS_InitTCBList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_InitTCBList
</UL>
<BR>[Calls]<UL><LI><a href="#[21819e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2182afc]"></a>OS_InitTaskIdle</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, os_core.o(i.OS_InitTaskIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2137750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[21817c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
</UL>
<BR>[Called By]<UL><LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2182ac0]"></a>OS_InitTaskStat</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, os_core.o(i.OS_InitTaskStat))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = OS_InitTaskStat &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2137750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[21817c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
</UL>
<BR>[Called By]<UL><LI><a href="#[213787c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2182a84]"></a>OS_SchedNew</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, os_core.o(i.OS_SchedNew))
<BR><BR>[Called By]<UL><LI><a href="#[2137804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[2181968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2cb07c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[2177a80]"></a>_InitController</STRONG> (Thumb, 596 bytes, Stack size 16 bytes, lcdconf.o(i._InitController))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitController
</UL>
<BR>[Calls]<UL><LI><a href="#[213796c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[21379a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2177738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_Data
<LI><a href="#[2177774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_CMD
<LI><a href="#[2177828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2177648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[2f3ec28]"></a>_ClearHalt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidemo.o(i._ClearHalt))
<BR><BR>[Called By]<UL><LI><a href="#[2f3e520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2f3e9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[2f3eac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[2f3ebec]"></a>_DrawBk</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, guidemo.o(i._DrawBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DrawBk &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[2f3ebb0]"></a>_DrawBkCircle</STRONG> (Thumb, 286 bytes, Stack size 56 bytes, guidemo.o(i._DrawBkCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _DrawBkCircle &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3da1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2f3db0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3dbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[2f3dbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3de18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[2f3eb74]"></a>_DrawBkSimple</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidemo.o(i._DrawBkSimple))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _DrawBkSimple &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[2f3eb38]"></a>_FRAMEWIN_DrawSkinFlex</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guidemo.o(i._FRAMEWIN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _FRAMEWIN_DrawSkinFlex &rArr; FRAMEWIN_DrawSkinFlex &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3e0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2f3e124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[2f3eafc]"></a>_HideProgress</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo.o(i._HideProgress))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _HideProgress &rArr; WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[2f3eac0]"></a>_Main</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, guidemo.o(i._Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[2f3d350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2f3dfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[2f3dff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[2f3e070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[2f3e3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_UpdateControlText
<LI><a href="#[2f3ec28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearHalt
</UL>
<BR>[Called By]<UL><LI><a href="#[2137930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[2f3ea84]"></a>_ShowProgress</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo.o(i._ShowProgress))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _ShowProgress &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[2f3ea48]"></a>_cbBk</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, guidemo.o(i._cbBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _cbBk &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[2f3ea0c]"></a>_cbEffect</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, guidemo.o(i._cbEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _cbEffect &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i.GUIDEMO_Main)
</UL>
<P><STRONG><a name="[2f3e9d0]"></a>_cbFrameWinControl</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, guidemo.o(i._cbFrameWinControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _cbFrameWinControl &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[2f3d0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3d404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2f3d440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[2f3d5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[2f3d65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3e2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[2f3ec28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearHalt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i._Main)
</UL>
<P><STRONG><a name="[2f3e994]"></a>_cbFrameWinInfo</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, guidemo.o(i._cbFrameWinInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _cbFrameWinInfo &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo.o(i._Main)
</UL>
<P><STRONG><a name="[2f3bfa0]"></a>_AutomotiveDemo</STRONG> (Thumb, 452 bytes, Stack size 184 bytes, guidemo_automotive.o(i._AutomotiveDemo))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = _AutomotiveDemo &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3b9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[2f3ba00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[2f3ba3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DeleteAuto
<LI><a href="#[2f3ba78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateAuto
<LI><a href="#[2f3bba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3668778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
</UL>

<P><STRONG><a name="[2f3bf64]"></a>_DrawBk</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, guidemo_automotive.o(i._DrawBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _DrawBk &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2f3bba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
</UL>

<P><STRONG><a name="[2f3bf28]"></a>_Draw_0</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, guidemo_automotive.o(i._Draw_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _Draw_0 &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_automotive.o(.data)
</UL>
<P><STRONG><a name="[2f3beec]"></a>_Draw_1</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, guidemo_automotive.o(i._Draw_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _Draw_1 &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_automotive.o(.data)
</UL>
<P><STRONG><a name="[2f3beb0]"></a>_GetAngle_0</STRONG> (Thumb, 498 bytes, Stack size 240 bytes, guidemo_automotive.o(i._GetAngle_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = _GetAngle_0 &rArr; _WriteGear &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3be38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[36691c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3669510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3669d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[3669dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[366a17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_automotive.o(.data)
</UL>
<P><STRONG><a name="[2f3be74]"></a>_GetAngle_1</STRONG> (Thumb, 338 bytes, Stack size 128 bytes, guidemo_automotive.o(i._GetAngle_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _GetAngle_1 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[36691c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3669510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3669d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[366a17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_automotive.o(.data)
</UL>
<P><STRONG><a name="[2f3be38]"></a>_WriteGear</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, guidemo_automotive.o(i._WriteGear))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _WriteGear &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[2f3bba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3beb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_0
<LI><a href="#[2f3bfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
</UL>

<P><STRONG><a name="[2f3a7b8]"></a>_DemoBarGraph</STRONG> (Thumb, 306 bytes, Stack size 176 bytes, guidemo_bargraph.o(i._DemoBarGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 784 + Unknown Stack Size
<LI>Call Chain = _DemoBarGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
</UL>

<P><STRONG><a name="[2f3a77c]"></a>_DrawDiagramAt</STRONG> (Thumb, 284 bytes, Stack size 56 bytes, guidemo_bargraph.o(i._DrawDiagramAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = _DrawDiagramAt &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[2f39f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2f39fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[2f3a074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3a164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[2f3a740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
</UL>

<P><STRONG><a name="[2f3a740]"></a>_DrawLabel</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, guidemo_bargraph.o(i._DrawLabel))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DrawLabel &rArr; GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f3a1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[2f3a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
</UL>

<P><STRONG><a name="[2f39624]"></a>_BitmapDemo</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, guidemo_bitmap.o(i._BitmapDemo))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = _BitmapDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f395e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowMagnifiedBitmap
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3e3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2f3e4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfo
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Called By]<UL><LI><a href="#[2f39354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
</UL>

<P><STRONG><a name="[2f395e8]"></a>_ShowMagnifiedBitmap</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidemo_bitmap.o(i._ShowMagnifiedBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _ShowMagnifiedBitmap &rArr; GUI_DrawBitmapMag &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3e4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[2f39624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BitmapDemo
</UL>

<P><STRONG><a name="[2f38184]"></a>_DispCursor</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, guidemo_cursor.o(i._DispCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _DispCursor &rArr; _ShowCursorType &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f38148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[3669510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3669768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[36699c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
</UL>

<P><STRONG><a name="[2f38148]"></a>_ShowCursorType</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, guidemo_cursor.o(i._ShowCursorType))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _ShowCursorType &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f37cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>

<P><STRONG><a name="[2f36e10]"></a>_AddData_Heartbeat</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, guidemo_graph.o(i._AddData_Heartbeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _AddData_Heartbeat &rArr; GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; _InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_graph.o(.data)
</UL>
<P><STRONG><a name="[2f36dd4]"></a>_AddData_Sine</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, guidemo_graph.o(i._AddData_Sine))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _AddData_Sine &rArr; GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; _InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[2f36a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_graph.o(.data)
</UL>
<P><STRONG><a name="[2f36d98]"></a>_GraphDemo</STRONG> (Thumb, 470 bytes, Stack size 72 bytes, guidemo_graph.o(i._GraphDemo))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = _GraphDemo &rArr; _ShowGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f36654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2f36690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[2f36744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[2f36780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[2f367bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[2f367f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[2f36834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[2f36870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[2f368ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[2f368e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[2f36924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Delete
<LI><a href="#[2f36960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f36a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[2f36a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[2f36ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
<LI><a href="#[2f36b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[2f36d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[2f3d044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3e4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
</UL>

<P><STRONG><a name="[2f36d5c]"></a>_ShowGraph</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, guidemo_graph.o(i._ShowGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = _ShowGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3699c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[2f369d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[2f36b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[2f3cf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3dda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3e520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[2f36d20]"></a>_cbBk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidemo_graph.o(i._cbBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _cbBk &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3e64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_graph.o(i._GraphDemo)
</UL>
<P><STRONG><a name="[2f34e6c]"></a>_Action</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, guidemo_listview.o(i._Action))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = _Action &rArr; _AddRow &rArr; LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3441c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[2f344d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[2f345fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[2f34638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[2f34674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[2f34728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[2f34e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3e4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfo
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>

<P><STRONG><a name="[2f34e30]"></a>_AddRow</STRONG> (Thumb, 152 bytes, Stack size 96 bytes, guidemo_listview.o(i._AddRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = _AddRow &rArr; LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f345c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[355a6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[366b1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[2f34df4]"></a>_DemoListview</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, guidemo_listview.o(i._DemoListview))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = _DemoListview &rArr; _Action &rArr; _AddRow &rArr; LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f34764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[2f34db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
<LI><a href="#[2f34e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3897c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
</UL>

<P><STRONG><a name="[2f34db8]"></a>_InitListview</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, guidemo_listview.o(i._InitListview))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = _InitListview &rArr; LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f34458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[2f34494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[2f3450c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[2f34548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[2f34584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
<LI><a href="#[2f346b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[2f346ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2f34890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>

<P><STRONG><a name="[2fb5bb8]"></a>_AddListviewItem</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guidemo_skinning.o(i._AddListviewItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = _AddListviewItem &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f34638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[2f34818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2fb37dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
</UL>

<P><STRONG><a name="[2fb5b7c]"></a>_DemoSkinning</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, guidemo_skinning.o(i._DemoSkinning))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = _DemoSkinning &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[2f3d044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2fb36ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetDefaultSkin
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[2fb3b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetDefaultTextAlign
<LI><a href="#[2fb3b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetDefaultFont
<LI><a href="#[2fb3bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetDefaultFont
<LI><a href="#[2fb3d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetDefaultSkin
<LI><a href="#[2fb3ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetDefaultSkin
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Skinning
</UL>

<P><STRONG><a name="[2fb5b40]"></a>_DrawSkin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidemo_skinning.o(i._DrawSkin))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _DrawSkin &rArr; FRAMEWIN_DrawSkinFlex &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3e214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_skinning.o(i._DemoSkinning)
<LI> guidemo_skinning.o(i._cbDialogOrder)
</UL>
<P><STRONG><a name="[2fb5b04]"></a>_GetVehicle</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, guidemo_skinning.o(i._GetVehicle))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _GetVehicle &rArr; EDIT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f34638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fb3818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[366b07c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
</UL>

<P><STRONG><a name="[2fb5ac8]"></a>_InitDialogOrder</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, guidemo_skinning.o(i._InitDialogOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _InitDialogOrder &rArr; DROPDOWN_SetBkColor &rArr; DROPDOWN_SetTextColor &rArr; LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fb3584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
<LI><a href="#[2fb3d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[2fb3db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[2fb3e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[2fb5a8c]"></a>_InitDialogSelect</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, guidemo_skinning.o(i._InitDialogSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = _InitDialogSelect &rArr; _AddListviewItem &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f34458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[2f34494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[2f3450c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[2f34854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fb3458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[2fb5bb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddListviewItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
</UL>

<P><STRONG><a name="[2fb5a50]"></a>_MessageBox</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidemo_skinning.o(i._MessageBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = _MessageBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb37a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[2fb3a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb5924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
</UL>

<P><STRONG><a name="[2fb5a14]"></a>_cbAnimation</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, guidemo_skinning.o(i._cbAnimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _cbAnimation &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[2fb3890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(i._DemoSkinning)
</UL>
<P><STRONG><a name="[2fb59d8]"></a>_cbBkWindow</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, guidemo_skinning.o(i._cbBkWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _cbBkWindow &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2fb39bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDispPosY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(i._DemoSkinning)
</UL>
<P><STRONG><a name="[2fb599c]"></a>_cbDialogOrder</STRONG> (Thumb, 410 bytes, Stack size 40 bytes, guidemo_skinning.o(i._cbDialogOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = _cbDialogOrder &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[2fb34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2fb350c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2fb3674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[2fb36b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[2fb3980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[2fb3a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
<LI><a href="#[2fb3aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2fb3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[2fb3b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[2fb3c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
<LI><a href="#[2fb3c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[2fb3cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[2fb5ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(i._DemoSkinning)
</UL>
<P><STRONG><a name="[2fb5960]"></a>_cbDialogProgress</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, guidemo_skinning.o(i._cbDialogProgress))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = _cbDialogProgress &rArr; GUI_MEMDEV_FadeOutWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[2fb350c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2fb35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[2fb3aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(i._cbDialogOrder)
</UL>
<P><STRONG><a name="[2fb5924]"></a>_cbDialogSelect</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, guidemo_skinning.o(i._cbDialogSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _cbDialogSelect &rArr; _MessageBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[2fb38cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[2fb3aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2fb5a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MessageBox
<LI><a href="#[2fb5a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[2fb5b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(i._cbDialogOrder)
</UL>
<P><STRONG><a name="[2fb2fe4]"></a>_GetPixelsPerSecond</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, guidemo_speed.o(i._GetPixelsPerSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _GetPixelsPerSecond &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2fb2e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[3014344]"></a>_Action</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, guidemo_treeview.o(i._Action))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3e4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowInfo
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[2f3e610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[3013d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[3013da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[3013e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_IncSel
<LI><a href="#[3013ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[3013f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[3013f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[3013f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[3013fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[3014038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_DecSel
<LI><a href="#[3014290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[3014308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>

<P><STRONG><a name="[3014308]"></a>_DemoTreeview</STRONG> (Thumb, 204 bytes, Stack size 96 bytes, guidemo_treeview.o(i._DemoTreeview))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = _DemoTreeview &rArr; _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3df08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2f3e610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[2fb350c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[3014128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
<LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3888c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
</UL>

<P><STRONG><a name="[30142cc]"></a>_InitTreeview</STRONG> (Thumb, 438 bytes, Stack size 16 bytes, guidemo_treeview.o(i._InitTreeview))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = _InitTreeview &rArr; TREEVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3013de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[3013e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[3013e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[3013f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[3013ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3014254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[3014290]"></a>_MoveSprite</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, guidemo_treeview.o(i._MoveSprite))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _MoveSprite &rArr; GUI_SPRITE_SetBitmapAndPosition &rArr; _SetBitmapAndPosition &rArr; _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[30140b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[3014344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[3014254]"></a>_cbDialog</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guidemo_treeview.o(i._cbDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = _cbDialog &rArr; _InitTreeview &rArr; TREEVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[30142cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_treeview.o(i._DemoTreeview)
</UL>
<P><STRONG><a name="[3013804]"></a>_DemoVScreen</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, guidemo_vscreen.o(i._DemoVScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = _DemoVScreen &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3e688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[3013660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[30137c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Loop
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_VScreen
</UL>

<P><STRONG><a name="[30137c8]"></a>_Loop</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidemo_vscreen.o(i._Loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = _Loop &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2f3e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[3013660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[3013804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoVScreen
</UL>

<P><STRONG><a name="[30d63a8]"></a>_CreateBitmap</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, guidemo_washingmachine.o(i._CreateBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _CreateBitmap &rArr; _DrawGradientRoundBar &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[30162ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[301666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[30d285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[30d2898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[30d2ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[30d636c]"></a>_CreateButton</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, guidemo_washingmachine.o(i._CreateButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _CreateButton &rArr; _DrawGradientRoundBar &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[30162ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[301666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[30d285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[30d2898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[30d627c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
</UL>

<P><STRONG><a name="[30d6330]"></a>_DemoWashingMachine</STRONG> (Thumb, 312 bytes, Stack size 80 bytes, guidemo_washingmachine.o(i._DemoWashingMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = _DemoWashingMachine &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2137660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCreateFlags
<LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[2f3decc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[3014128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
<LI><a href="#[30d2820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[30d2b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[30d6204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[30d6240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_WashingMachine
</UL>

<P><STRONG><a name="[30d62f4]"></a>_DrawBackground</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, guidemo_washingmachine.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[30d6024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWin
</UL>

<P><STRONG><a name="[30d62b8]"></a>_DrawCheckbox</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._DrawCheckbox))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _DrawCheckbox &rArr; GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f37cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
</UL>

<P><STRONG><a name="[30d627c]"></a>_DrawGradientRoundBar</STRONG> (Thumb, 446 bytes, Stack size 176 bytes, guidemo_washingmachine.o(i._DrawGradientRoundBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = _DrawGradientRoundBar &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[36674f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[36691c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3669330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3669510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3669768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[3669c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3669d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[3669dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[30d6240]"></a>_ExecMachine</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._ExecMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _ExecMachine &rArr; WM_SetFocus &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[30d2988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[30d6204]"></a>_ExecSpriteAnimation</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, guidemo_washingmachine.o(i._ExecSpriteAnimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _ExecSpriteAnimation &rArr; GUI_SPRITE_SetBitmapAndPosition &rArr; _SetBitmapAndPosition &rArr; _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3e5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[30140b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[30d6330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[30d61c8]"></a>_OnKeyMain</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, guidemo_washingmachine.o(i._OnKeyMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _OnKeyMain &rArr; _OpenSubMenu &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[30d6060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[30d618c]"></a>_OnKeySub</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, guidemo_washingmachine.o(i._OnKeySub))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _OnKeySub &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
</UL>

<P><STRONG><a name="[30d6150]"></a>_OnPIDStateChangeMain</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._OnPIDStateChangeMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _OnPIDStateChangeMain &rArr; _OpenSubMenu &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[30d28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[30d6060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[30d6114]"></a>_OnPIDStateChangeSub</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, guidemo_washingmachine.o(i._OnPIDStateChangeSub))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _OnPIDStateChangeSub &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
</UL>

<P><STRONG><a name="[30d60d8]"></a>_OnPaintMain</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._OnPaintMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _OnPaintMain &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2f3bba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3da1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[30d62b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCheckbox
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[30d609c]"></a>_OnPaintSub</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._OnPaintSub))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _OnPaintSub &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[30d5f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
</UL>

<P><STRONG><a name="[30d6060]"></a>_OpenSubMenu</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, guidemo_washingmachine.o(i._OpenSubMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _OpenSubMenu &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30d27e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
</UL>
<BR>[Called By]<UL><LI><a href="#[30d6150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeMain
<LI><a href="#[30d61c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyMain
</UL>

<P><STRONG><a name="[30d6024]"></a>_cbBkWin</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidemo_washingmachine.o(i._cbBkWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _cbBkWin &rArr; _DrawBackground &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[30d62f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._DemoWashingMachine)
</UL>
<P><STRONG><a name="[30d5fe8]"></a>_cbButton</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, guidemo_washingmachine.o(i._cbButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = _cbButton &rArr; _CreateButton &rArr; _DrawGradientRoundBar &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3da1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[30d2af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[30d636c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._DemoWashingMachine)
</UL>
<P><STRONG><a name="[30d5fac]"></a>_cbMain</STRONG> (Thumb, 332 bytes, Stack size 48 bytes, guidemo_washingmachine.o(i._cbMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = _cbMain &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2fb35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[30d27e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[30d28d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[30d294c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[30d60d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[30d6150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeMain
<LI><a href="#[30d61c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyMain
<LI><a href="#[30d63a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._DemoWashingMachine)
</UL>
<P><STRONG><a name="[30d5f70]"></a>_cbStatus</STRONG> (Thumb, 450 bytes, Stack size 32 bytes, guidemo_washingmachine.o(i._cbStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _cbStatus &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3da1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3dbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2f3de90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[30d285c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[30d2898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._cbMain)
</UL>
<P><STRONG><a name="[30d5f34]"></a>_cbSubMenu</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, guidemo_washingmachine.o(i._cbSubMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _cbSubMenu &rArr; _OnPaintSub &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[30d609c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[30d6114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[30d618c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(i._OpenSubMenu)
</UL>
<P><STRONG><a name="[30d0804]"></a>SetSysClock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Called By]<UL><LI><a href="#[2caea38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[30cee78]"></a>_DrawArcAA</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, guiaa_arc.o(i._DrawArcAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DrawArcAA &rArr; GL_DrawArc &rArr; _DrawArc &rArr; floor &rArr; __aeabi_drsub
</UL>
<BR>[Calls]<UL><LI><a href="#[30162ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[30ceb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[30ceba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[30cebe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[30cec20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[301666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[30ce680]"></a>_DrawCharAA4_NoTrans</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, guiaa_char4.o(i._DrawCharAA4_NoTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[30cdf78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[30cdfb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors
<LI><a href="#[30ce0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[30ce0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
</UL>

<P><STRONG><a name="[30ce608]"></a>_DrawCharAA4_Trans</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, guiaa_char4.o(i._DrawCharAA4_Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawCharAA4_Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[30ce0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
</UL>

<P><STRONG><a name="[30cd7f8]"></a>FillCircle</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, guiaa_circle.o(i.FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = FillCircle &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[31854b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[30cd4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[30cd294]"></a>CalcClipRectHL</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, guiaa_lib.o(i.CalcClipRectHL))
<BR><BR>[Called By]<UL><LI><a href="#[2f3bbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[30cc6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>

<P><STRONG><a name="[30cd03c]"></a>_CleanLine</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guiaa_lib.o(i._CleanLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _CleanLine &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[30ccf4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>

<P><STRONG><a name="[30ccfc4]"></a>_DrawHLine</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, guiaa_lib.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawHLine &rArr; _FlushLine &rArr; LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[30ccf4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[30ccf4c]"></a>_FlushLine</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, guiaa_lib.o(i._FlushLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _FlushLine &rArr; LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[30cd03c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
<LI><a href="#[30cdec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
</UL>
<BR>[Called By]<UL><LI><a href="#[30ccfc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[30cebe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>

<P><STRONG><a name="[30cced4]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guiaa_lib.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[30cc31c]"></a>_AA_DrawLine</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, guiaa_line.o(i._AA_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _AA_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[30162ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[30cc088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[30cc0c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[30cc6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[30cd4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
<LI><a href="#[30ceb30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[30cebe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
</UL>

<P><STRONG><a name="[30cbe30]"></a>_FillPolygonAA</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, guiaa_poly.o(i._FillPolygonAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _FillPolygonAA &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cbbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[30cc6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[30cebe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
</UL>

<P><STRONG><a name="[30cb9bc]"></a>_Color2IndexBulk</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, guicc_565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[30cb944]"></a>_Color2Index_565</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guicc_565.o(i._Color2Index_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[30cb8cc]"></a>_GetIndexMask_565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_565.o(i._GetIndexMask_565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[30cb854]"></a>_Index2ColorBulk</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, guicc_565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[319070c]"></a>_AddFreeMemory</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[319025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[31903c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeMemory
<LI><a href="#[319052c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[319034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[31904b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[3190694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[3190694]"></a>_Alloc</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[319025c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[319034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[31903c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeMemory
<LI><a href="#[31904b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[31905a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetFreeTag
<LI><a href="#[319070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>

<P><STRONG><a name="[319061c]"></a>_AssignMemory</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, gui_alloc.o(i._AssignMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _AssignMemory &rArr; _TestRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[31902d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TestRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[31904b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[31905a4]"></a>_GetFreeTag</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gui_alloc.o(i._GetFreeTag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetFreeTag
</UL>
<BR>[Calls]<UL><LI><a href="#[319052c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[3190694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[319052c]"></a>_GetMinIndex</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_alloc.o(i._GetMinIndex))
<BR><BR>[Called By]<UL><LI><a href="#[31903c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeMemory
<LI><a href="#[31905a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetFreeTag
<LI><a href="#[319070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[31904b4]"></a>_InitOnce</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _InitOnce &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[319061c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AssignMemory
<LI><a href="#[319070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[318f3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[3190694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[319043c]"></a>_OnExit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_alloc.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_alloc.o(i._InitOnce)
</UL>
<P><STRONG><a name="[31903c4]"></a>_RemoveFreeMemory</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[319052c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[3190694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[319070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[319034c]"></a>_RemoveHoles</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[319070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[366ab54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[3190694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[31902d4]"></a>_TestRAM</STRONG> (Thumb, 234 bytes, Stack size 20 bytes, gui_alloc.o(i._TestRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _TestRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[319061c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AssignMemory
</UL>

<P><STRONG><a name="[319025c]"></a>_WriteTagData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i._WriteTagData))
<BR><BR>[Called By]<UL><LI><a href="#[3190694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[319070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[318ee70]"></a>_CalcInterSectLin</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gui_arc.o(i._CalcInterSectLin))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _CalcInterSectLin &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3668778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[3668958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[3668bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3668d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[318edf8]"></a>_CalcX</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_arc.o(i._CalcX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _CalcX
</UL>
<BR>[Called By]<UL><LI><a href="#[318ed80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[318ed80]"></a>_DrawArc</STRONG> (Thumb, 578 bytes, Stack size 120 bytes, gui_arc.o(i._DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _DrawArc &rArr; floor &rArr; __aeabi_drsub
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[3016270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[318edf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcX
<LI><a href="#[318ee70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcInterSectLin
<LI><a href="#[3667698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[3667878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[3667a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[3667c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3667f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[3668034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[36680e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3668340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[3668598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[3668bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3668d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3669060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3669768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[30cec20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
</UL>

<P><STRONG><a name="[318d340]"></a>Draw8Point</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, gui_circ.o(i.Draw8Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[318cd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
</UL>

<P><STRONG><a name="[318c440]"></a>_InitContext</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_core.o(i._InitContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitContext
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[21378f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[318c3c8]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI__Config)
</UL>
<P><STRONG><a name="[318b414]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_curs1.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_curs1.o(i.GUI_CURSOR_SelectEx)
</UL>
<P><STRONG><a name="[318b39c]"></a>_Show</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_curs1.o(i._Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _Show &rArr; GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[318aa78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[318aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[318ac58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[318ac94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[3186eb4]"></a>CL_DispChar</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gui_dispchar.o(i.CL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3186b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[318e2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f37cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>

<P><STRONG><a name="[3185258]"></a>_DoClipping</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, gui_drawbitmap_8888.o(i._DoClipping))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DoClipping
</UL>
<BR>[Called By]<UL><LI><a href="#[3185168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[31851e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31851e0]"></a>_DrawBitmap</STRONG> (Thumb, 648 bytes, Stack size 128 bytes, gui_drawbitmap_8888.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[3184cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[3184d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[3185258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[318dbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[3185078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_8888
</UL>

<P><STRONG><a name="[3185168]"></a>_DrawBitmapHW</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _DrawBitmapHW &rArr; GUI_SetColorIndex &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb2e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[3184cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[3185258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
<LI><a href="#[318c800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[31850f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
</UL>

<P><STRONG><a name="[31850f0]"></a>_DrawBitmapHW_8888</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _DrawBitmapHW_8888 &rArr; _DrawBitmapHW &rArr; GUI_SetColorIndex &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3185168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[3185078]"></a>_DrawBitmap_8888</STRONG> (Thumb, 24 bytes, Stack size 40 bytes, gui_drawbitmap_8888.o(i._DrawBitmap_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap_8888 &rArr; _DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[31851e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[3184628]"></a>_DrawGradient</STRONG> (Thumb, 372 bytes, Stack size 88 bytes, gui_drawgradient.o(i._DrawGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb2e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>

<P><STRONG><a name="[3183944]"></a>_DrawRoundedRect</STRONG> (Thumb, 288 bytes, Stack size 104 bytes, gui_drawroundedrect.o(i._DrawRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _DrawRoundedRect &rArr; LCD_DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[30ca3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[30ca3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[318b978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[318cbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3a0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
</UL>

<P><STRONG><a name="[3182af8]"></a>_DispLine_SJIS</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_encjs.o(i._DispLine_SJIS))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _DispLine_SJIS &rArr; GL_DispChar &rArr; GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318e2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encjs.o(.constdata)
</UL>
<P><STRONG><a name="[3182a80]"></a>_GetLineDistX_SJIS</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_encjs.o(i._GetLineDistX_SJIS))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _GetLineDistX_SJIS &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encjs.o(.constdata)
</UL>
<P><STRONG><a name="[3182a08]"></a>_GetLineLen_SJIS</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui_encjs.o(i._GetLineLen_SJIS))
<BR>[Address Reference Count : 1]<UL><LI> gui_encjs.o(.constdata)
</UL>
<P><STRONG><a name="[31ba81c]"></a>_GotoX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_goto.o(i._GotoX))
<BR><BR>[Called By]<UL><LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[31ba7a4]"></a>_GotoY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_goto.o(i._GotoY))
<BR><BR>[Called By]<UL><LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[31b9d18]"></a>_IncPointer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_onkey.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[30d2988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[31b97b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[31b8e54]"></a>_DecPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._DecPointer))
<BR><BR>[Called By]<UL><LI><a href="#[31b8d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[31b8ddc]"></a>_IncPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[2f3d9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[31b8d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[31b8d64]"></a>_StoreState</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui_pid.o(i._StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[31b8ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
<LI><a href="#[31b8e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[31b81e8]"></a>_DrawBitLine16BPP</STRONG> (Thumb, 148 bytes, Stack size 88 bytes, gui_setalpha.o(i._DrawBitLine16BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _DrawBitLine16BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[31b7900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[31b7a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[31b7b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[31b7d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31b8170]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 414 bytes, Stack size 96 bytes, gui_setalpha.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawBitLine1BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[31b7720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[31b7900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[31b7a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[31b7ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[31b7b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[31b7d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31b80f8]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 266 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[31b7720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31b8080]"></a>_DrawBitLine32BPP</STRONG> (Thumb, 146 bytes, Stack size 88 bytes, gui_setalpha.o(i._DrawBitLine32BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _DrawBitLine32BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[31b7900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[31b7a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[31b7b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[31b7d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31b8008]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 266 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[31b7720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31b7f90]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, gui_setalpha.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawBitLine8BPP &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[31b7720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31b7f18]"></a>_DrawBitmap</STRONG> (Thumb, 194 bytes, Stack size 64 bytes, gui_setalpha.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31b7f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[31b8008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[31b8080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[31b80f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[31b8170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[31b81e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7ea0]"></a>_DrawHLine</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, gui_setalpha.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _DrawHLine &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[30cdf3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[31b6b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[31b7900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[31b7a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[31b7b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[31b7d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7e28]"></a>_DrawVLine</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_setalpha.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawVLine &rArr; _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[31b76a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[31b7720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7db0]"></a>_FillRect</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_setalpha.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _FillRect &rArr; _DrawHLine &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31b7ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7d38]"></a>_GetBitsPerPixel</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_setalpha.o(i._GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[31b7ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b8080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[31b8170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[31b81e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[31b7cc0]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7c48]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7bd0]"></a>_GetDevProp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7b58]"></a>_GetLine</STRONG> (Thumb, 148 bytes, Stack size 64 bytes, gui_setalpha.o(i._GetLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[31b7d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b8080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[31b8170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[31b81e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[31b7ae0]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[31b76a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[31b8170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7a68]"></a>_GetPointers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_setalpha.o(i._GetPointers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetPointers
</UL>
<BR>[Calls]<UL><LI><a href="#[3184d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[31b6c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b8080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[31b8170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[31b81e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[31b79f0]"></a>_GetRect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7978]"></a>_InitAlpha</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gui_setalpha.o(i._InitAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[30cc5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[30cc664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[31871c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[31871fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[2f39f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[31b7900]"></a>_MixColors</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_setalpha.o(i._MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[31b7ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b8080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[31b8170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[31b81e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[31b7888]"></a>_OnExit</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_setalpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[31871c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i._InitAlpha)
</UL>
<P><STRONG><a name="[31b7810]"></a>_ReadRectFromMemdev</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, gui_setalpha.o(i._ReadRectFromMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _ReadRectFromMemdev &rArr; GUI_MEMDEV_GetXSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3016450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[31b6af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[31b6b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[31b6ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[31b6be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i._GetLine)
</UL>
<P><STRONG><a name="[31b7798]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b7720]"></a>_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_setalpha.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[31b7900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[31b76a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[31b7e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[31b7f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[31b8008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[31b80f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[31b8170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b76a8]"></a>_XorPixel</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gui_setalpha.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[31b7720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[31b7ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[31b7e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[31b4a20]"></a>_ClipRectEx</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_sprite.o(i._ClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ClipRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[31b3f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[31b3fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>

<P><STRONG><a name="[31b49a8]"></a>_DoColorConversion</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_sprite.o(i._DoColorConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[30140b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[31b4930]"></a>_DrawBitmap</STRONG> (Thumb, 640 bytes, Stack size 168 bytes, gui_sprite.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = _DrawBitmap &rArr; _GetClipParam
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[31b3274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
<LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[31b4660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[31b46d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b48b8]"></a>_DrawHLine</STRONG> (Thumb, 266 bytes, Stack size 104 bytes, gui_sprite.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _DrawHLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[31b4660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b4840]"></a>_DrawVLine</STRONG> (Thumb, 264 bytes, Stack size 72 bytes, gui_sprite.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _DrawVLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[31b4660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b47c8]"></a>_FillRect</STRONG> (Thumb, 310 bytes, Stack size 80 bytes, gui_sprite.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _FillRect &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[31b4660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b4750]"></a>_GetBkPixel</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[31b3fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[31b40c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[31b4228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[31b46d8]"></a>_GetClipParam</STRONG> (Thumb, 320 bytes, Stack size 36 bytes, gui_sprite.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[31b4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31b4660]"></a>_GetClipRect</STRONG> (Thumb, 216 bytes, Stack size 20 bytes, gui_sprite.o(i._GetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GetClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[31b47c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[31b4840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[31b48b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[31b4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[31b45e8]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b4570]"></a>_GetDevFunc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b44f8]"></a>_GetDevProp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b4480]"></a>_GetPixelIndex</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gui_sprite.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b4318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b4408]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b4390]"></a>_Link</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_sprite.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Link &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[3187184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[318aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[31b4318]"></a>_PixelExists</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_sprite.o(i._PixelExists))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[31b3e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[31b4138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[31b4480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>

<P><STRONG><a name="[31b4228]"></a>_SetBitmapAndPosition</STRONG> (Thumb, 490 bytes, Stack size 152 bytes, gui_sprite.o(i._SetBitmapAndPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetBitmapAndPosition &rArr; _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[31b4048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSpriteBkPixel
<LI><a href="#[31b4750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[30140b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[31b41b0]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b4138]"></a>_SetPixelIndex</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, gui_sprite.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b4318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b40c0]"></a>_SetPosition</STRONG> (Thumb, 638 bytes, Stack size 192 bytes, gui_sprite.o(i._SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _SetPosition &rArr; GUI_MEMDEV_Select &rArr; WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[31b4048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSpriteBkPixel
<LI><a href="#[31b4750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[318abe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[31b4048]"></a>_SetSpriteBkPixel</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_sprite.o(i._SetSpriteBkPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetSpriteBkPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[31b3f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[31b3fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[31b40c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[31b4228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[31b3fd0]"></a>_SpriteDraw</STRONG> (Thumb, 210 bytes, Stack size 96 bytes, gui_sprite.o(i._SpriteDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _SpriteDraw &rArr; _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[31b4048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSpriteBkPixel
<LI><a href="#[31b4750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkPixel
<LI><a href="#[31b4a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[318ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[318aba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[31b3f58]"></a>_Undraw</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, gui_sprite.o(i._Undraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Undraw &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[31b4048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSpriteBkPixel
<LI><a href="#[31b4a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[318ac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
</UL>

<P><STRONG><a name="[31b3ee0]"></a>_Unlink</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_sprite.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[3187148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[30140ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[318ac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
</UL>

<P><STRONG><a name="[31b3e68]"></a>_XorPixel</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui_sprite.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _XorPixel &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b4318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[31b298c]"></a>_Log2Phys</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_touch_driveranalog.o(i._Log2Phys))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Log2Phys
</UL>
<BR>[Called By]<UL><LI><a href="#[21774a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[31b2914]"></a>_StoreUnstable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gui_touch_driveranalog.o(i._StoreUnstable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _StoreUnstable &rArr; GUI_TOUCH_StoreUnstable &rArr; GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[31b202c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreUnstable
</UL>
<BR>[Called By]<UL><LI><a href="#[21378b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[31b14ec]"></a>_Color2IndexBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[31b1474]"></a>_Color2Index_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_888.o(i._Color2Index_888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[31b13fc]"></a>_GetIndexMask_888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_888.o(i._GetIndexMask_888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[31b1384]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[31b0e5c]"></a>_Color2IndexBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[31b0de4]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888.o(i._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[31b0d6c]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_8888.o(i._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[31b0cf4]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[31aff98]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[21773f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXY
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3d7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[2f3d800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[31af14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[31af188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[31af2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[31af2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[31aff20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
<LI><a href="#[31b1fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[31b1ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[31b6a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>

<P><STRONG><a name="[31aff20]"></a>_GetMaxValue</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd_getex.o(i._GetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31aff98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[30cc574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
</UL>

<P><STRONG><a name="[31aec24]"></a>_GetDevCap</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_info.o(i._GetDevCap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevCap
</UL>
<BR>[Calls]<UL><LI><a href="#[31870d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2f38ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevCap
</UL>

<P><STRONG><a name="[31ae774]"></a>_DrawBitmap_RLE4</STRONG> (Thumb, 490 bytes, Stack size 72 bytes, lcd_rle4.o(i._DrawBitmap_RLE4))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitmap_RLE4 &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[30ca3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[3185474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[31ae51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[31b5d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle4.o(.constdata)
</UL>
<P><STRONG><a name="[31ae300]"></a>_DrawBitmap_RLE8</STRONG> (Thumb, 480 bytes, Stack size 72 bytes, lcd_rle8.o(i._DrawBitmap_RLE8))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitmap_RLE8 &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[30ca3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[3185474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[318dbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[31b5d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle8.o(.constdata)
</UL>
<P><STRONG><a name="[3284fdc]"></a>_DrawBitmap</STRONG> (Thumb, 34 bytes, Stack size 56 bytes, guidrv_flexcolor.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284f64]"></a>_DrawHLine</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, guidrv_flexcolor.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawHLine &rArr; _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[32841cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284eec]"></a>_DrawVLine</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[32841cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284e74]"></a>_FillRect</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284dfc]"></a>_GetDevData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284d84]"></a>_GetDevFunc</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284d0c]"></a>_GetDevFunc_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _GetDevFunc_Init &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2177648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[32831dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[3284c94]"></a>_GetDevFunc_SetSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _GetDevFunc_SetSize &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[32831dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[3284c1c]"></a>_GetDevFunc_SetVSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _GetDevFunc_SetVSize &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[32831dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[3284ba4]"></a>_GetDevProp</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284b2c]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[32841cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284ab4]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284a3c]"></a>_Log2PhysX_X0Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[32849c4]"></a>_Log2PhysX_X0Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[328494c]"></a>_Log2PhysX_X0Y1S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[32848d4]"></a>_Log2PhysX_X0Y1S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[328485c]"></a>_Log2PhysX_X1Y0S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[32847e4]"></a>_Log2PhysX_X1Y0S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[328476c]"></a>_Log2PhysX_X1Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[32846f4]"></a>_Log2PhysX_X1Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[328467c]"></a>_Log2PhysY_X0Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284604]"></a>_Log2PhysY_X0Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[328458c]"></a>_Log2PhysY_X0Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284514]"></a>_Log2PhysY_X0Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[328449c]"></a>_Log2PhysY_X1Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284424]"></a>_Log2PhysY_X1Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[32843ac]"></a>_Log2PhysY_X1Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284334]"></a>_Log2PhysY_X1Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[32842bc]"></a>_SetOrg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3284244]"></a>_SetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidrv_flexcolor.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[32841cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[32841cc]"></a>_XorPixel</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[3284244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[3284b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3284eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[3284f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[3282e1c]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 330 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[3282c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3282da4]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 278 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[3282c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3282d2c]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 278 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[3282c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3282cb4]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[3282c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3282c3c]"></a>_DrawBitmap</STRONG> (Thumb, 236 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[3282cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[3282d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[3282da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[3282e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[3282bc4]"></a>_FillRect</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI__memset16
</UL>
<BR>[Calls]<UL><LI><a href="#[328269c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[3282b4c]"></a>_ReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._ReadData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[3282ad4]"></a>_WriteData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._WriteData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[3282444]"></a>_ReadPixel_16bpp_B16</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, guidrv_flexcolor_func66708.o(i._ReadPixel_16bpp_B16))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadPixel_16bpp_B16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i.GUIDRV_FlexColor_SetFunc66708)
</UL>
<P><STRONG><a name="[32823cc]"></a>_ReadPixel_16bpp_B8</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidrv_flexcolor_func66708.o(i._ReadPixel_16bpp_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ReadPixel_16bpp_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i.GUIDRV_FlexColor_SetFunc66708)
</UL>
<P><STRONG><a name="[3282354]"></a>_SetInterface</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guidrv_flexcolor_func66708.o(i._SetInterface))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i.GUIDRV_FlexColor_SetFunc66708)
</UL>
<P><STRONG><a name="[32822dc]"></a>_SetOrientation</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidrv_flexcolor_func66708.o(i._SetOrientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetOrientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i.GUIDRV_FlexColor_SetFunc66708)
</UL>
<P><STRONG><a name="[3282264]"></a>_SetPhysRAMAddr</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, guidrv_flexcolor_func66708.o(i._SetPhysRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _SetPhysRAMAddr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i.GUIDRV_FlexColor_SetFunc66708)
</UL>
<P><STRONG><a name="[32821ec]"></a>_SetRect</STRONG> (Thumb, 426 bytes, Stack size 48 bytes, guidrv_flexcolor_func66708.o(i._SetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _SetRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i.GUIDRV_FlexColor_SetFunc66708)
</UL>
<P><STRONG><a name="[3282174]"></a>_SetReg_B16</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_flexcolor_func66708.o(i._SetReg_B16))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i._SetInterface)
</UL>
<P><STRONG><a name="[32820fc]"></a>_SetReg_B8</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidrv_flexcolor_func66708.o(i._SetReg_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetReg_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i._SetInterface)
</UL>
<P><STRONG><a name="[3282084]"></a>_WritePara_B16</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_flexcolor_func66708.o(i._WritePara_B16))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i._SetInterface)
</UL>
<P><STRONG><a name="[328200c]"></a>_WritePara_B8</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidrv_flexcolor_func66708.o(i._WritePara_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _WritePara_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66708.o(i._SetInterface)
</UL>
<P><STRONG><a name="[327ff78]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 264 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[327fd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[327ff00]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[327fd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[327fe88]"></a>_DrawBitLine32BPP_DDB</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, guidev_32.o(i._DrawBitLine32BPP_DDB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine32BPP_DDB &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[327fd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[327fe10]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, guidev_32.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[327fd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[327fd98]"></a>_DrawBitmap</STRONG> (Thumb, 606 bytes, Stack size 104 bytes, guidev_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[327f870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[327fe10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[327fe88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[327ff00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[327ff78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[3281238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327fd20]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[327fc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327fca8]"></a>_DrawVLine</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, guidev_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[327f870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327fc30]"></a>_FillRect</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, guidev_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[327f870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[3281238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[327fd20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327fbb8]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327fb40]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327fac8]"></a>_GetDevProp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327fa50]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_32.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[327f870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327f9d8]"></a>_GetRect</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, guidev_32.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327f960]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_32.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327f8e8]"></a>_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, guidev_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[327f870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327f870]"></a>_XY2PTR</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidev_32.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[327f7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[327f8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[327fa50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[327fc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[327fca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[327fd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[327f7f8]"></a>_XorPixel</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, guidev_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[327f870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[327cdc8]"></a>_CalcParaFadeIn</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidev_moveandfadewin.o(i._CalcParaFadeIn))
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeInWindow)
</UL>
<P><STRONG><a name="[327cd50]"></a>_CalcParaFadeOut</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidev_moveandfadewin.o(i._CalcParaFadeOut))
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeOutWindow)
</UL>
<P><STRONG><a name="[327ccd8]"></a>_CalcParaMoveIn</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, guidev_moveandfadewin.o(i._CalcParaMoveIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _CalcParaMoveIn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveInWindow)
</UL>
<P><STRONG><a name="[327cc60]"></a>_CalcParaMoveOut</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, guidev_moveandfadewin.o(i._CalcParaMoveOut))
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveOutWindow)
</UL>
<P><STRONG><a name="[327cbe8]"></a>_ChangeBK</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, guidev_moveandfadewin.o(i._ChangeBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _ChangeBK &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb38cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[2fb3980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[327cb70]"></a>_FadeWindow</STRONG> (Thumb, 308 bytes, Stack size 88 bytes, guidev_moveandfadewin.o(i._FadeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = _FadeWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2178e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3da1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3dbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[31b6b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[31b6ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[327c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveStaticDevice
<LI><a href="#[327d1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[32810d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[328110c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[32c99dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[32c9a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[2fb3980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[327c990]"></a>_MoveWindow</STRONG> (Thumb, 352 bytes, Stack size 128 bytes, guidev_moveandfadewin.o(i._MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = _MoveWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2178e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[2f3cfcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3da1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3dbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[2f3dc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[327c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveStaticDevice
<LI><a href="#[32810d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[328110c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[32c99a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[32c99dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[32c9a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateStatic
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb38cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
</UL>

<P><STRONG><a name="[327c918]"></a>_RemoveStaticDevice</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, guidev_moveandfadewin.o(i._RemoveStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _RemoveStaticDevice &rArr;  _RemoveStaticDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[327c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveStaticDevice
<LI><a href="#[32c9928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[32c9964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
</UL>
<BR>[Called By]<UL><LI><a href="#[327c918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveStaticDevice
<LI><a href="#[327c990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[327cb70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[327c7b0]"></a>_UndoBK</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev_moveandfadewin.o(i._UndoBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _UndoBK &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb38cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[2fb3908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[2fb3944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[2fb3980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[32c9658]"></a>_DrawColumnScaled</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, guidev_perspective.o(i._DrawColumnScaled))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _DrawColumnScaled &rArr; GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[3184cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[31ae51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[31b6c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[32c95e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMemdevPerspective
</UL>

<P><STRONG><a name="[32c95e0]"></a>_DrawMemdevPerspective</STRONG> (Thumb, 184 bytes, Stack size 72 bytes, guidev_perspective.o(i._DrawMemdevPerspective))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawMemdevPerspective &rArr; _DrawColumnScaled &rArr; GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[32c9568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[32c9658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawColumnScaled
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3db0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
</UL>

<P><STRONG><a name="[32c9568]"></a>_GetX</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, guidev_perspective.o(i._GetX))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetX &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[36674f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[36680e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3668598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[3668778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[3668958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[3668bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3669060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[366a17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[32c95e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMemdevPerspective
</UL>

<P><STRONG><a name="[32c8f50]"></a>_Check</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guidev_rotate.o(i._Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _Check &rArr; GUI_MEMDEV_GetBitsPerPixel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[32c99a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
</UL>

<P><STRONG><a name="[32c8e60]"></a>_GetMinMax</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, guidev_rotate.o(i._GetMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetMinMax
</UL>
<BR>[Called By]<UL><LI><a href="#[32c8de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
</UL>

<P><STRONG><a name="[32c8de8]"></a>_Rotate32</STRONG> (Thumb, 538 bytes, Stack size 152 bytes, guidev_rotate.o(i._Rotate32))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _Rotate32 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3016270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b6ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[32c8e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinMax
</UL>
<BR>[Called By]<UL><LI><a href="#[32c99a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
</UL>

<P><STRONG><a name="[32c808c]"></a>_OnButtonPressed</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, button.o(i._OnButtonPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[32c7f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[32c7f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[32c8014]"></a>_OnButtonReleased</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, button.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b973c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32c7510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[32c7eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[32c7f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[32c7f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[32c7f9c]"></a>_OnPidStateChange</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, button.o(i._OnPidStateChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _OnPidStateChange &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c8014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[32c808c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_SetReactOnLevel)
</UL>
<P><STRONG><a name="[32c7f24]"></a>_OnTouchDefault</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, button.o(i._OnTouchDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _OnTouchDefault &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c8014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[32c808c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.data)
</UL>
<P><STRONG><a name="[32c7eac]"></a>_OnTouchReactOnLevel</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, button.o(i._OnTouchReactOnLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _OnTouchReactOnLevel &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c8014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_SetReactOnLevel)
</UL>
<P><STRONG><a name="[32c6958]"></a>_Create</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, button_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _Create &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[32c68e0]"></a>_Paint</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, button_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[32c5ad0]"></a>_Create</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, checkbox_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[32c5a58]"></a>_Paint</STRONG> (Thumb, 144 bytes, Stack size 64 bytes, checkbox_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[32c53c8]"></a>_DrawBackground</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, checkbox_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[32c5350]"></a>_DrawFocus</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, checkbox_skinflex.o(i._DrawFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _DrawFocus &rArr; GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[32c4c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[32c52d8]"></a>_GenCheck</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, checkbox_skinflex.o(i._GenCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[30cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[32c5260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapPixel_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[32c5260]"></a>_SetBitmapPixel_1bpp</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, checkbox_skinflex.o(i._SetBitmapPixel_1bpp))
<BR><BR>[Called By]<UL><LI><a href="#[32c52d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>

<P><STRONG><a name="[32c2fec]"></a>_Create</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, dropdown_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skin.o(.data)
</UL>
<P><STRONG><a name="[32c2f74]"></a>_Paint</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, dropdown_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c2bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skin.o(.data)
</UL>
<P><STRONG><a name="[32c28a8]"></a>_DrawBackground</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, dropdown_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[32c5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
</UL>

<P><STRONG><a name="[32c2830]"></a>_DrawText</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, dropdown_skinflex.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _DrawText &rArr; GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
</UL>

<P><STRONG><a name="[32c1c00]"></a>_CalcSizes</STRONG> (Thumb, 324 bytes, Stack size 40 bytes, edit.o(i._CalcSizes))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _CalcSizes &rArr; GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31bb2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[32c0940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[32c09f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[32c0a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorCharacter
<LI><a href="#[32c0aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[32c1930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[32c1b88]"></a>_ChangeCharacter</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, edit.o(i._ChangeCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _ChangeCharacter &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[32c0b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[32c0bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[32c1b10]"></a>_DeleteChar</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, edit.o(i._DeleteChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _DeleteChar &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3186770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c0b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[366ae9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[32c1a98]"></a>_IncrementBuffer</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, edit.o(i._IncrementBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[32c0f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[32c19a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
</UL>

<P><STRONG><a name="[32c1a20]"></a>_InsertChar</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, edit.o(i._InsertChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _InsertChar &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[3186770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31bb2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[32c0b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[32c0bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[32c19a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[366ab54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[32c100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[32c19a8]"></a>_IsSpaceInBuffer</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, edit.o(i._IsSpaceInBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c1a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[366adac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb3c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[32c1a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[32c1930]"></a>_Paint</STRONG> (Thumb, 154 bytes, Stack size 80 bytes, edit.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c097c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[32c09b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[32c0c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[32c1c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>
<BR>[Called By]<UL><LI><a href="#[32c0fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[32bffe0]"></a>FRAMEWIN__cbClient</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, framewin.o(i.FRAMEWIN__cbClient))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__cbClient &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[32c42e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[32c74d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(i.FRAMEWIN_CreateUser)
</UL>
<P><STRONG><a name="[32bff68]"></a>_OnTouch</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, framewin.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[32bf4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[32bfef0]"></a>_SetActive</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, framewin.o(i._SetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[32bf824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[32bf02c]"></a>_Draw</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, framewin_buttonclose.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _Draw &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30ca3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[32beca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
</UL>
<P><STRONG><a name="[32befb4]"></a>_cbClose</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, framewin_buttonclose.o(i._cbClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _cbClose &rArr; BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[30d2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
</UL>
<P><STRONG><a name="[32bd4fc]"></a>_Create</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, framewin_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[32bd484]"></a>_GetBorderSize</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, framewin_skin.o(i._GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[32bd40c]"></a>_Paint</STRONG> (Thumb, 238 bytes, Stack size 96 bytes, framewin_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[32bf608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[32bc200]"></a>_DrawBorder</STRONG> (Thumb, 326 bytes, Stack size 72 bytes, graph.o(i._DrawBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _DrawBorder &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3323928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[3323964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[32bc188]"></a>_DrawGrid</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, graph.o(i._DrawGrid))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _DrawGrid &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[32bb0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[32bb0e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[32bb120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[32bc110]"></a>_GetParams</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, graph.o(i._GetParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetParams
</UL>
<BR>[Called By]<UL><LI><a href="#[32bbf30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[32bc020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[32bc098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
</UL>

<P><STRONG><a name="[32bc098]"></a>_InvalidateGraph</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, graph.o(i._InvalidateGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bc110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetParams
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[32bb288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
</UL>

<P><STRONG><a name="[32bc020]"></a>_ManageScrollBars</STRONG> (Thumb, 210 bytes, Stack size 80 bytes, graph.o(i._ManageScrollBars))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = _ManageScrollBars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bc110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetParams
<LI><a href="#[3323838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[33239dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[3323a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[32bb51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[32bbfa8]"></a>_OnDelete</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, graph.o(i._OnDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _OnDelete &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[32bb51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[32bbf30]"></a>_OnPaint</STRONG> (Thumb, 372 bytes, Stack size 88 bytes, graph.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; _DrawGrid &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32bc110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetParams
<LI><a href="#[32bc188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[32bc200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[3323a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>
<BR>[Called By]<UL><LI><a href="#[32bb51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[32bbeb8]"></a>_OnScrollValueChanged</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, graph.o(i._OnScrollValueChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _OnScrollValueChanged &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[32bb51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[3323478]"></a>_OnDelete</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, graph_data_yt.o(i._OnDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _OnDelete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2f36a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(i.GRAPH_DATA_YT_Create)
</UL>
<P><STRONG><a name="[3323400]"></a>_OnPaint</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, graph_data_yt.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3322f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(i.GRAPH_DATA_YT_Create)
</UL>
<P><STRONG><a name="[3322adc]"></a>_OnPaint</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, graph_scale.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; _OnPaintVert &rArr; GUI_DispFloatMin &rArr; _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33229ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3322a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_scale.o(i.GRAPH_SCALE_Create)
</UL>
<P><STRONG><a name="[3322a64]"></a>_OnPaintHorz</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, graph_scale.o(i._OnPaintHorz))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _OnPaintHorz &rArr; GUI_DispFloatMin &rArr; _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3322398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
<LI><a href="#[3323928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[36680e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[3322adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[33229ec]"></a>_OnPaintVert</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, graph_scale.o(i._OnPaintVert))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _OnPaintVert &rArr; GUI_DispFloatMin &rArr; _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3322398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
<LI><a href="#[3323964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[36680e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[3322adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[3321d44]"></a>_Create</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, header_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[3321ccc]"></a>_Paint</STRONG> (Thumb, 262 bytes, Stack size 128 bytes, header_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[3321894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[33215c4]"></a>_DrawArrow</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, header_skinflex.o(i._DrawArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _DrawArrow &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[332136c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[332154c]"></a>_DrawBackground</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[33214d4]"></a>_DrawBitmap</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitmap &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c5ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[3320dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[3320e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[332145c]"></a>_DrawOverlap</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DrawOverlap &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[33213e4]"></a>_DrawText</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, header_skinflex.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _DrawText &rArr; GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[332136c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[332136c]"></a>_GetArrowPara</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, header_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[33213e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[33215c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>

<P><STRONG><a name="[3320700]"></a>_AddKey</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, listview.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = _AddKey &rArr; _OnPage &rArr; LISTVIEW__MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[331f800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[331f8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__MoveSel
<LI><a href="#[331f92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[3320520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
</UL>
<BR>[Called By]<UL><LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[3320688]"></a>_FreeAttached</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, listview.o(i._FreeAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[32bb210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[331fa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[3320610]"></a>_GetNumVisibleRows</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listview.o(i._GetNumVisibleRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[331f6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[331f9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[33204a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3320598]"></a>_NotifyOwner</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, listview.o(i._NotifyOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _NotifyOwner &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[3320520]"></a>_OnPage</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, listview.o(i._OnPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _OnPage &rArr; LISTVIEW__MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[331f8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__MoveSel
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
</UL>
<BR>[Called By]<UL><LI><a href="#[3320700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[33204a8]"></a>_Paint</STRONG> (Thumb, 1008 bytes, Stack size 160 bytes, listview.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3df44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[32c09b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[331f6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[331f9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[331fa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[3320610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[3320430]"></a>_SetSelFromPos</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, listview.o(i._SetSelFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _SetSelFromPos &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[331f9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[331fb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[331db68]"></a>_SetAutoScroll</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, listview_setautoscroll.o(i._SetAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _SetAutoScroll &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>
<BR>[Called By]<UL><LI><a href="#[2f34584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
</UL>

<P><STRONG><a name="[331d280]"></a>_GetpCellInfo</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, listview_setitemcolor.o(i._GetpCellInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _GetpCellInfo &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[331cf74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetTextColor
<LI><a href="#[331cfb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetBkColor
<LI><a href="#[331f9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[331fa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[2f344d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
</UL>

<P><STRONG><a name="[331bffc]"></a>_Compare</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, listview_setsort.o(i._Compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Compare &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[331bda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[331bf84]"></a>_CreateSortObject</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, listview_setsort.o(i._CreateSortObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _CreateSortObject &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3441c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[2f346ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
</UL>

<P><STRONG><a name="[331bf0c]"></a>_Free</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listview_setsort.o(i._Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _Free &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview_setsort.o(i._CreateSortObject)
</UL>
<P><STRONG><a name="[331be94]"></a>_GetSelUnsorted</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, listview_setsort.o(i._GetSelUnsorted))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetSelUnsorted
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[331bda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[331be1c]"></a>_SetSelUnsorted</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, listview_setsort.o(i._SetSelUnsorted))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _SetSelUnsorted &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[331bda4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[331bda4]"></a>_Sort</STRONG> (Thumb, 404 bytes, Stack size 48 bytes, listview_setsort.o(i._Sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _Sort &rArr; _SetSelUnsorted &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b32ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32c0c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[331b7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[331be1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[331be94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
<LI><a href="#[331bffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Compare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview_setsort.o(i._CreateSortObject)
</UL>
<P><STRONG><a name="[331adb4]"></a>_SetValue</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, progbar.o(i._SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetValue &rArr; GUI_AddDecMin &rArr; GUI_Long2Len
</UL>
<BR>[Calls]<UL><LI><a href="#[31b17bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[331a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[33194dc]"></a>_Create</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, progbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[3319464]"></a>_Paint</STRONG> (Thumb, 310 bytes, Stack size 88 bytes, progbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[331a724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[331a760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[331a79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[3318e4c]"></a>_DrawBackground</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, progbar_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f38f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[3317fc4]"></a>_Create</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, radio_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skin.o(.data)
</UL>
<P><STRONG><a name="[3317f4c]"></a>_Paint</STRONG> (Thumb, 440 bytes, Stack size 152 bytes, radio_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[3317b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[3317bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skin.o(.data)
</UL>
<P><STRONG><a name="[33171b4]"></a>_CalcPositions</STRONG> (Thumb, 324 bytes, Stack size 88 bytes, scrollbar_skin.o(i._CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c89b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[3316cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[33170c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(i._Create)
</UL>
<P><STRONG><a name="[331713c]"></a>_Create</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, scrollbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[33170c4]"></a>_Paint</STRONG> (Thumb, 180 bytes, Stack size 112 bytes, scrollbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33171b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[3321894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[3316980]"></a>_DrawBackgroundH</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundH))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DrawBackgroundH &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[3316890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[3316908]"></a>_DrawBackgroundV</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundV))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DrawBackgroundV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f38f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[3316890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[3316890]"></a>_DrawFrame</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _DrawFrame &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[32bc9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[3316908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
<LI><a href="#[3316980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>

<P><STRONG><a name="[3316818]"></a>_DrawGraspH</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspH))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _DrawGraspH &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[33167a0]"></a>_DrawGraspV</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspV))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _DrawGraspV &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[3316728]"></a>_GetArrowPara</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scrollbar_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[3315eb8]"></a>_CopyItemInfo2Rect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, slider_skin.o(i._CopyItemInfo2Rect))
<BR><BR>[Called By]<UL><LI><a href="#[3315dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3315e40]"></a>_Create</STRONG> (Thumb, 32 bytes, Stack size 48 bytes, slider_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[3315dc8]"></a>_Paint</STRONG> (Thumb, 414 bytes, Stack size 120 bytes, slider_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3315eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyItemInfo2Rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[33156fc]"></a>_DrawShaftH</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, slider_skinflex.o(i._DrawShaftH))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _DrawShaftH &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[3315684]"></a>_DrawShaftV</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, slider_skinflex.o(i._DrawShaftV))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _DrawShaftV &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[331560c]"></a>_DrawThumbH</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, slider_skinflex.o(i._DrawThumbH))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _DrawThumbH &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3dddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[32bb120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[3315594]"></a>_DrawThumbV</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, slider_skinflex.o(i._DrawThumbV))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _DrawThumbV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f38f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[32bb120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[336d44c]"></a>_CalcDrawInfo</STRONG> (Thumb, 912 bytes, Stack size 40 bytes, treeview.o(i._CalcDrawInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _CalcDrawInfo &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[336d104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[336d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[336d3d4]"></a>_CalcParams</STRONG> (Thumb, 206 bytes, Stack size 104 bytes, treeview.o(i._CalcParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _CalcParams &rArr; _CallOwnerDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[336d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConnectLines
<LI><a href="#[336d35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[336d35c]"></a>_CallOwnerDraw</STRONG> (Thumb, 28 bytes, Stack size 56 bytes, treeview.o(i._CallOwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[336ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[336d3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>

<P><STRONG><a name="[336d2e4]"></a>_CollapseItem</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, treeview.o(i._CollapseItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _CollapseItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Called By]<UL><LI><a href="#[3013f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[336d26c]"></a>_ConnectLines</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, treeview.o(i._ConnectLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ConnectLines
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[336d3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>

<P><STRONG><a name="[336d1f4]"></a>_ExpandItem</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, treeview.o(i._ExpandItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _ExpandItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Called By]<UL><LI><a href="#[3013f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[336d17c]"></a>_GetBitmap</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, treeview.o(i._GetBitmap))
<BR><BR>[Called By]<UL><LI><a href="#[336cb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[336d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>

<P><STRONG><a name="[336d104]"></a>_GetBitmapPointer</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, treeview.o(i._GetBitmapPointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetBitmapPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[336cb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[336d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>

<P><STRONG><a name="[336d08c]"></a>_GetLastNodeItem</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, treeview.o(i._GetLastNodeItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetLastNodeItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3013ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[336cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
</UL>

<P><STRONG><a name="[336d014]"></a>_GetNextVisibleItem</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, treeview.o(i._GetNextVisibleItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetNextVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[336cc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[336cf9c]"></a>_GetPrevItem</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, treeview.o(i._GetPrevItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetPrevItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3013ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
</UL>

<P><STRONG><a name="[336cf24]"></a>_GetPrevVisibleItem</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, treeview.o(i._GetPrevVisibleItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPrevVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[336cc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[336ceac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
</UL>

<P><STRONG><a name="[336ceac]"></a>_GetPrevVisibleNode</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, treeview.o(i._GetPrevVisibleNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GetPrevVisibleNode &rArr; _GetPrevVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336cf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
</UL>
<BR>[Called By]<UL><LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[336ce34]"></a>_GetVisibility</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, treeview.o(i._GetVisibility))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[336c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[336d35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[336c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[336c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[336cdbc]"></a>_InitRecalc</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, treeview.o(i._InitRecalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _InitRecalc
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[336c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[336cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[336d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[336d2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
</UL>

<P><STRONG><a name="[336cd44]"></a>_LinkItem</STRONG> (Thumb, 336 bytes, Stack size 56 bytes, treeview.o(i._LinkItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _LinkItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[336d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[336b55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
</UL>

<P><STRONG><a name="[336cccc]"></a>_ManageAutoScroll</STRONG> (Thumb, 380 bytes, Stack size 88 bytes, treeview.o(i._ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3323838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3323a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[336c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[336d35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[336cc54]"></a>_MoveSel</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, treeview.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _MoveSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3013fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[30ceab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[30ceaf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[336c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[336cf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[336d014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3013e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_IncSel
<LI><a href="#[3014038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_DecSel
</UL>

<P><STRONG><a name="[336cbdc]"></a>_OnKey</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, treeview.o(i._OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _OnKey &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3013f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[3013f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[336c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[336ceac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
<LI><a href="#[336cf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[336d014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
</UL>
<BR>[Called By]<UL><LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[336cb64]"></a>_OnOwnerdraw_GetYSize</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, treeview.o(i._OnOwnerdraw_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _OnOwnerdraw_GetYSize &rArr; _GetBitmapPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336d104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[336d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[336b214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[336caec]"></a>_OnOwnerdraw_Paint</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, treeview.o(i._OnOwnerdraw_Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _OnOwnerdraw_Paint &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bc9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[336b214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[336ca74]"></a>_OnPaint</STRONG> (Thumb, 406 bytes, Stack size 240 bytes, treeview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[32c09b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[336af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[336c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[336d35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[336d44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[336c9fc]"></a>_OnTouch</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, treeview.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[336ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[336addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[336c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[336d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[336d2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[336d35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[336b520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[336c984]"></a>_SetAutoScroll</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, treeview.o(i._SetAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3323838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[336cdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Called By]<UL><LI><a href="#[3013de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[3013e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
</UL>

<P><STRONG><a name="[336c894]"></a>_SetSel</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, treeview.o(i._SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3323874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[336c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[336ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
</UL>
<BR>[Called By]<UL><LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[336cc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[336c81c]"></a>_SkipClosedItems</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, treeview.o(i._SkipClosedItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SkipClosedItems
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[336c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[336ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[336cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[336ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[336d3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>

<P><STRONG><a name="[336c7a4]"></a>_UpdateScrollPos</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, treeview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3323a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[336ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
</UL>
<BR>[Called By]<UL><LI><a href="#[336c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[336cbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[336a224]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, widget.o(i._EffectRequiresRedraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[336966c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[3323a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[33698c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>

<P><STRONG><a name="[3369360]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[33692e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[33692e8]"></a>_DrawDownRect</STRONG> (Thumb, 50 bytes, Stack size 112 bytes, widget_effect_simple.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3368cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3368d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[3369360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[3369270]"></a>_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[33691f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[33691f8]"></a>_DrawUpRect</STRONG> (Thumb, 50 bytes, Stack size 112 bytes, widget_effect_simple.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3368cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3368d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[3369270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[33682f8]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, wm.o(i.WM__PaintWinAndOverlays))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3367ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3367d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3367dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[3366444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[3367bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[3368190]"></a>_DeleteAllChildren</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm.o(i._DeleteAllChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[3368118]"></a>_DrawNext</STRONG> (Thumb, 112 bytes, Stack size 128 bytes, wm.o(i._DrawNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3366264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[3366444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[3368cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3368d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[33667c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[33680a0]"></a>_FindNext_IVR</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, wm.o(i._FindNext_IVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3367f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[3367fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[3368028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[3368028]"></a>_Findx0</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[3368028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[3368028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[33680a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[3367fb0]"></a>_Findx1</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[3367fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[3367fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[33680a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[3367f38]"></a>_Findy1</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[3367f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[3367f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[33680a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[3367ec0]"></a>_Invalidate1Abs</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b9700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[327eb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[33663cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
</UL>
<BR>[Called By]<UL><LI><a href="#[33664f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[33665ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[3366750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[3367e48]"></a>_OnExit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[3367dd0]"></a>_Paint1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm.o(i._Paint1))
<BR><BR>[Called By]<UL><LI><a href="#[3367d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[33682f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[3367d58]"></a>_Paint1Trans</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wm.o(i._Paint1Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Paint1Trans &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3185960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[3367dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[3367ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[33682f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[3367ce0]"></a>_PaintTransChildren</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, wm.o(i._PaintTransChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[3367ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[3367d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[3367ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[33682f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[3367c68]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm.o(i._SetClipRectUserIntersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[3366228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[336669c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[33666d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[3367bf0]"></a>_cbPaintMemDev</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, wm.o(i._cbPaintMemDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33682f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM__Paint)
</UL>
<P><STRONG><a name="[3367b78]"></a>cbBackWin</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, wm.o(i.cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = cbBackWin &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2f3d9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[31b973c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[336498c]"></a>_GetDialogItem</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_getdialogitem.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[336498c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[336498c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[33637bc]"></a>_GetDefaultWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getwindowsize.o(i._GetDefaultWin))
<BR><BR>[Calls]<UL><LI><a href="#[336678c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[3360eb8]"></a>_SetScrollbar</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_setscrollbar.o(i._SetScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2f3d29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[32c42ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[3360b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[3360b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
<LI><a href="#[3360bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>

<P><STRONG><a name="[33d30f4]"></a>_cbTimer</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, wm_timer.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_timer.o(i.WM_CreateTimer)
</UL>
<P><STRONG><a name="[33d2938]"></a>_CalcNumBytes</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wm_userdata.o(i._CalcNumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _CalcNumBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[318f2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[32c736c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[32c73a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[33cffbc]"></a>_DrawTwinArc2</STRONG> (Thumb, 260 bytes, Stack size 88 bytes, gui__drawtwinarc.o(i._DrawTwinArc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _DrawTwinArc2 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30ca3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[33cfddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[32bc980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
</UL>

<P><STRONG><a name="[33cff44]"></a>_DrawTwinArc4</STRONG> (Thumb, 372 bytes, Stack size 88 bytes, gui__drawtwinarc.o(i._DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30ca3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[33cfddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[32c5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>

<P><STRONG><a name="[33cfecc]"></a>_FillTrippleArc</STRONG> (Thumb, 568 bytes, Stack size 80 bytes, gui__drawtwinarc.o(i._FillTrippleArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _FillTrippleArc &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30ca3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[33cfe54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[3317448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
</UL>

<P><STRONG><a name="[33cfe54]"></a>_GetTrippleArcPara</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i._GetTrippleArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetTrippleArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[318cbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[33cfecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>

<P><STRONG><a name="[33cfddc]"></a>_GetTwinArcPara</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui__drawtwinarc.o(i._GetTwinArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[318cbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[33cff44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[33cffbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>

<P><STRONG><a name="[33cf314]"></a>_GetCursorCharacter</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui__getcursorpos.o(i._GetCursorCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _GetCursorCharacter &rArr; GUI_UC_GetCharCode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[32c0b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[33cf29c]"></a>_GetCursorPosChar</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gui__getcursorpos.o(i._GetCursorPosChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _GetCursorPosChar &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[32c0b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[32c0b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[33cedec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[33cf224]"></a>_GetCursorPosX</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, gui__getcursorpos.o(i._GetCursorPosX))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _GetCursorPosX &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[33cab5c]"></a>_DispLine</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gui_charline.o(i._DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[31b3238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[3366264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>
<BR>[Called By]<UL><LI><a href="#[3186734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[33caae4]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[33c8078]"></a>_DrawGraph</STRONG> (Thumb, 488 bytes, Stack size 112 bytes, gui_drawgraphex.o(i._DrawGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawGraph &rArr; LCD_DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[30ca3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[318b978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[3322f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
</UL>

<P><STRONG><a name="[33c7c40]"></a>Abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.Abs))
<BR><BR>[Called By]<UL><LI><a href="#[33c71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[33c7934]"></a>_DrawLineEnd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_drawline.o(i._DrawLineEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawLineEnd &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[33c7010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[33c71b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[33c78bc]"></a>_SetLineColor</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, gui_drawline.o(i._SetLineColor))
<BR><BR>[Called By]<UL><LI><a href="#[33c71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[33c7844]"></a>_atan2</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, gui_drawline.o(i._atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[33c71b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[33c69bc]"></a>_Add</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, gui_fillpolygon.o(i._Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Add
</UL>
<BR>[Called By]<UL><LI><a href="#[30cbbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[340b688]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_task.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_task.o(i.GUITASK_Init)
</UL>
<P><STRONG><a name="[340ac74]"></a>_Link</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gui_timer.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[33d2cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[33d2d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[340abfc]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_timer.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[340ab84]"></a>_Unlink</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_timer.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[33d2cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[33d2d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[340957c]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[3409504]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[340948c]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[3409414]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[3408d84]"></a>_DispFloatFix</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_valf.o(i._DispFloatFix))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31b17f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[31b18ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[3408c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
<LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3668034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3668598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[3408d0c]"></a>_DispFloatMin</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, gui_valf.o(i._DispFloatMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31b1708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[3408c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
<LI><a href="#[3408c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
<LI><a href="#[3408d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
<LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3668034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3668598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[3668bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3668d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3322398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
</UL>

<P><STRONG><a name="[3408c94]"></a>_GetDecs</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_valf.o(i._GetDecs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDecs
</UL>
<BR>[Calls]<UL><LI><a href="#[3667ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3668340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[3668d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[3408c1c]"></a>_RoundHalfUp</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_valf.o(i._RoundHalfUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _RoundHalfUp &rArr; floor &rArr; __aeabi_drsub
</UL>
<BR>[Calls]<UL><LI><a href="#[3667698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[3667878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[3668bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3668d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3669060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[366a17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[3408d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
<LI><a href="#[3408d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[3408424]"></a>_WaitEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i._WaitEvent))
<BR><BR>[Called By]<UL><LI><a href="#[32c4324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[3406e94]"></a>_SetBkColor</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[318c800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[31b5dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[3406e1c]"></a>_SetColor</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[318c800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[31b5d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[3406da4]"></a>_SetDrawMode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[3404fe0]"></a>LCD_ReadRectEx</STRONG> (Thumb, 402 bytes, Stack size 64 bytes, lcd_readrect.o(i.LCD_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[31af458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3404cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>

<P><STRONG><a name="[34891bc]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[3489054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3489144]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[3489054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[34890cc]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 338 bytes, Stack size 40 bytes, guidev_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[3489054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3489054]"></a>_DrawBitmap</STRONG> (Thumb, 624 bytes, Stack size 104 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3281238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[3488b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[34890cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[3489144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[34891bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488fdc]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3488eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488f64]"></a>_DrawVLine</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3488b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488eec]"></a>_FillRect</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3281238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[328269c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[3488b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[3488fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488e74]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488dfc]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488d84]"></a>_GetDevProp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488d0c]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3488b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488c94]"></a>_GetRect</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488c1c]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488ba4]"></a>_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3488b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488b2c]"></a>_XY2PTR</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidev_16.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3488ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3488ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[3488d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[3488eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[3488f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[3489054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3488ab4]"></a>_XorPixel</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3488b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[3488280]"></a>_Min</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_banding.o(i._Min))
<BR><BR>[Called By]<UL><LI><a href="#[327eb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3487830]"></a>_CalcPolyRect</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, guidev_measure.o(i._CalcPolyRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _CalcPolyRect
</UL>
<BR>[Called By]<UL><LI><a href="#[34875d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[3487650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygon
</UL>

<P><STRONG><a name="[34877b8]"></a>_DrawBitmap</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidev_measure.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitmap &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3487218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[3487740]"></a>_DrawHLine</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_measure.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _DrawHLine &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3487218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[34876c8]"></a>_DrawVLine</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_measure.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _DrawVLine &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3487218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[3487650]"></a>_FillPolygon</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, guidev_measure.o(i._FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _FillPolygon &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[3487218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
<LI><a href="#[3487830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPolyRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[34875d8]"></a>_FillPolygonAA</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, guidev_measure.o(i._FillPolygonAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _FillPolygonAA &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[3487218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
<LI><a href="#[3487830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPolyRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[3487560]"></a>_FillRect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_measure.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _FillRect &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3487218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[34874e8]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_measure.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[3487470]"></a>_GetDevFunc</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guidev_measure.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[34873f8]"></a>_GetDevProp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_measure.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[3487380]"></a>_GetPixelIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_measure.o(i._GetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[3487308]"></a>_GetRect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidev_measure.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[3487290]"></a>_MarkPixel</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, guidev_measure.o(i._MarkPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MarkPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[34870b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3487128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>

<P><STRONG><a name="[3487218]"></a>_MarkRect</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guidev_measure.o(i._MarkRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3487560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[34875d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[3487650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygon
<LI><a href="#[34876c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[3487740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[34877b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[34871a0]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_measure.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[3487128]"></a>_SetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_measure.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetPixelIndex &rArr; _MarkPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[3487290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[34870b0]"></a>_XorPixel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_measure.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XorPixel &rArr; _MarkPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[3487290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[3486264]"></a>_AddContent</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._AddContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _AddContent &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2f3db48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f3dbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[3485b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[34861ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[366acbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3486084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[34861ec]"></a>_CopyContent</STRONG> (Thumb, 456 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._CopyContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _CopyContent &rArr; GUI_MEMDEV_GetYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3016414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3016450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[31b6ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[31b6b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[31b6ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[366a884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[3486174]"></a>_CreateStatic</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, guidev_staticdevices.o(i._CreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[2f3d0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3366660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3366714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
<LI><a href="#[34860fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[3486174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[32c9a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateStatic
<LI><a href="#[3486174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[34860fc]"></a>_CreateStaticDevice</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, guidev_staticdevices.o(i._CreateStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _CreateStaticDevice &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2f3d74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2f3d788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2f3da94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3013d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[30cc5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b6c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaSuppressMixing
<LI><a href="#[3281328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[32c9220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3366408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[33662a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[3486174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[3486084]"></a>_GetWindowDevice</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, guidev_staticdevices.o(i._GetWindowDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3366660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3486084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[3486264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>
<BR>[Called By]<UL><LI><a href="#[32c99dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[3486084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[3485490]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[366a9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[3485418]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_USAGE_BM_AddPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[34853a0]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_USAGE_BM_Clear &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[366a6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[34852ec]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[3485274]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(i._GUI_USAGE_BM_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[3484824]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, guidev_writetoactiveopaque.o(i._Convert16))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Convert16 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[31b6b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[34847ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[34847ac]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 804 bytes, Stack size 120 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3dad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3184d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[318dbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[31af458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[31b6c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[340669c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[3484824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>
<BR>[Called By]<UL><LI><a href="#[32812b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[3484734]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 706 bytes, Stack size 136 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318dbec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[318f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[31af458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[32812b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[3483870]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> button_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[34837f8]"></a>_Paint</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, button_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[31859d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[32c5ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[34825ec]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dropdown.o(i._Tolower))
<BR><BR>[Called By]<UL><LI><a href="#[3482010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[3480738]"></a>_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, framewin_skinclassic.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _Create &rArr; FRAMEWIN_SetOwnerDraw &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3480198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[34806c0]"></a>_GetBorderSize</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, framewin_skinclassic.o(i._GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skinclassic.o(.data)
</UL>
<P><STRONG><a name="[3480648]"></a>_Paint</STRONG> (Thumb, 264 bytes, Stack size 96 bytes, framewin_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET_EFFECT_3D_DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[30ce9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[30cea7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[348015c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[34bcbdc]"></a>_GetDividerIndex</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, header.o(i._GetDividerIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _GetDividerIndex &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[34bcb64]"></a>_GetItemIndex</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, header.o(i._GetItemIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _GetItemIndex &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[34bcaec]"></a>_HandlePID</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, header.o(i._HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _HandlePID &rArr; _LimitDragWitdh &rArr; HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[318ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[33625b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[336ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[34bc9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[34bca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[34bcbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[34bca74]"></a>_LimitDragWitdh</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, header.o(i._LimitDragWitdh))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _LimitDragWitdh &rArr; HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2fb3548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[34bbfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[34bc9fc]"></a>_RestoreOldCursor</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, header.o(i._RestoreOldCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[318ad0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[318ad84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[34bc18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[34bcaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[34ba134]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, progbar_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> progbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[34ba0bc]"></a>_DrawPart</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, progbar_skinclassic.o(i._DrawPart))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _DrawPart &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f39ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30d2a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[34ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[34ba044]"></a>_Paint</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, progbar_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _DrawPart &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[331a724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[331a760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[331a79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[3323a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[34ba0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[34b97d4]"></a>_OnTouch</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, radio.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f343e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b973c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[34b8f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[34b9090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[34b9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[34b8a00]"></a>_DeleteTimer</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scrollbar.o(i._DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _DeleteTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[34b8910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[34b8988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[34b8988]"></a>_OnTimer</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, scrollbar.o(i._OnTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _OnTimer &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34b8280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[34b8a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[34b8910]"></a>_OnTouch</STRONG> (Thumb, 446 bytes, Stack size 72 bytes, scrollbar.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c73e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[32c7498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[32c7510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[32c89b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[336ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[34b7fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[34b8a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[34b8244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[34b66d8]"></a>_Paint</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, text.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[336024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[34b6228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>
<BR>[Called By]<UL><LI><a href="#[34b6318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[34b4fa4]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[34b4f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[34b4f2c]"></a>_DrawDownRect</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[34b4fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[34b4eb4]"></a>_DrawUpRect</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[30d29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[30d2a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[348015c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[34b47e8]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDown))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[34b4770]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDownRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[34b46f8]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawFlat))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[34b4680]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUp))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[34b4608]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUpRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[34b1980]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(i._cbInvalidateOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_bringtotop.o(i.WM_BringToTop)
</UL>
<P><STRONG><a name="[3506220]"></a>_GetDialogItem</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_getscrollbar.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3506220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[3506220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[3504d08]"></a>_MoveDescendents</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm_move.o(i._MoveDescendents))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3366318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[3504d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[35049c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3504d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[350346c]"></a>WM__ReleaseCapture</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_setcapture.o(i.WM__ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__ReleaseCapture &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[33625b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[336ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
</UL>

<P><STRONG><a name="[3502b84]"></a>_GetNextChild</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(i._GetNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetNextChild
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[32c42e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[35026d4]"></a>_GetPrevChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_setfocusonprevchild.o(i._GetPrevChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _GetPrevChild &rArr; WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3365cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[350247c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[32bf3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[35012ac]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__alpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[30cc664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[34fe714]"></a>_Color2Index_0</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31af278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[31af2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[34fe264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[34fe69c]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31af2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[34fe624]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[31af278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[31af2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[34f8a08]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, checkbox_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[34f8990]"></a>_GetButtonSize</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, checkbox_skinclassic.o(i._GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[33699f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skinclassic.o(.data)
</UL>
<P><STRONG><a name="[34f8918]"></a>_Paint</STRONG> (Thumb, 420 bytes, Stack size 64 bytes, checkbox_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3323a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[336024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[336984c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[34f8288]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dropdown_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[34f8210]"></a>_Paint</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, dropdown_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[32bc9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[32c09b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[32c2bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[32c4c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[33698c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[3568310]"></a>_Draw</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_draw_self.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[3568298]"></a>_GetXSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_draw_self.o(i._GetXSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[3568220]"></a>_GetYSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_draw_self.o(i._GetYSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[3567c80]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, header_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> header_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[3567c08]"></a>_DrawTriangle</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, header_skinclassic.o(i._DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3a128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3567b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3567b90]"></a>_Paint</STRONG> (Thumb, 600 bytes, Stack size 72 bytes, header_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30165f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[31859d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[32c5ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[3320dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[3320e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[33698c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[3567c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[3567050]"></a>_AddKey</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, listbox.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[331f4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3565ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3565ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[3565d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[3566a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
<LI><a href="#[3566ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3565e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[3566fd8]"></a>_CallOwnerDraw</STRONG> (Thumb, 32 bytes, Stack size 48 bytes, listbox.o(i._CallOwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _CallOwnerDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3566f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[3566f60]"></a>_GetContentsSizeX</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, listbox.o(i._GetContentsSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _GetContentsSizeX &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3566fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[3566ee8]"></a>_GetItemFromPos</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, listbox.o(i._GetItemFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _GetItemFromPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[3566e70]"></a>_GetItemPosY</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, listbox.o(i._GetItemPosY))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _GetItemPosY &rArr; _GetItemSizeY &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[3565a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[3566df8]"></a>_GetItemSizeY</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, listbox.o(i._GetItemSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _GetItemSizeY &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[3566fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3566b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3566d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3566e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[3566ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>

<P><STRONG><a name="[3566d80]"></a>_GetNumVisItems</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, listbox.o(i._GetNumVisItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _GetNumVisItems &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3566d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3566c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[3566d08]"></a>_GetYSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, listbox.o(i._GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[35669c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3566d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
</UL>

<P><STRONG><a name="[3566c90]"></a>_ManageAutoScroll</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, listbox.o(i._ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb3458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3323838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[3565994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[35659d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3566d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3566f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[3566c18]"></a>_MoveSel</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, listbox.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[33239dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3481c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[34bb73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[3565ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[3565d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
</UL>

<P><STRONG><a name="[3566ba0]"></a>_NotifyOwner</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, listbox.o(i._NotifyOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _NotifyOwner &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30d2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bf284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3566ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[3566b28]"></a>_OnPaint</STRONG> (Thumb, 260 bytes, Stack size 88 bytes, listbox.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[3185924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31b31fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[32c09b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[33239a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[336024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[336af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[3566ab0]"></a>_ToggleMultiSel</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, listbox.o(i._ToggleMultiSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _ToggleMultiSel &rArr; LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[3565a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3566ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[3565dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3566a38]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, listbox.o(i._Tolower))
<BR><BR>[Called By]<UL><LI><a href="#[3567050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[35669c0]"></a>_UpdateScrollPos</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, listbox.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33239dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[3323a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[3565afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3566d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[3566df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3566e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[3481a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3565b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[35625c8]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, radio_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> radio_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[3562550]"></a>_GetButtonSize</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, radio_skinclassic.o(i._GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skinclassic.o(.data)
</UL>
<P><STRONG><a name="[35624d8]"></a>_Paint</STRONG> (Thumb, 458 bytes, Stack size 120 bytes, radio_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3bab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2f3bb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2f3d8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[2f3d92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f3dc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2f3de54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[32c4c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[32c5d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3317bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[3321894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[3321948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[336024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[3561e48]"></a>_CalcPositions</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, scrollbar_skinclassic.o(i._CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3016324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c89b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[32c98ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[3316cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
<LI><a href="#[33238b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[33238ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[3369798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetYSize
<LI><a href="#[33697d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetXSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinclassic.o(i._Create)
</UL>
<P><STRONG><a name="[3561dd0]"></a>_Create</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, scrollbar_skinclassic.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _Create &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f36618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[3561d58]"></a>_Paint</STRONG> (Thumb, 356 bytes, Stack size 72 bytes, scrollbar_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3316188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[3321894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[3369888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[33698c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[3561740]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, slider_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> slider_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[35616c8]"></a>_Paint</STRONG> (Thumb, 304 bytes, Stack size 64 bytes, slider_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__DrawVLine &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3df80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[318b8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[318b900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[318f1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[318f26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32bb06c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[3321894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[3323a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[336024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[3369888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[33698c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[3369900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[3369978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[355e98c]"></a>_Screen2hWin</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, wm_screen2win.o(i._Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[318f17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[355e5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInWindow
<LI><a href="#[355e98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[355e914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
<LI><a href="#[355e98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[355e914]"></a>_Screen2hWinStop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_screen2win.o(i._Screen2hWinStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Screen2hWinStop &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[355e98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[35015b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>

<P><STRONG><a name="[355e2fc]"></a>_GetCharWrap</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gui__wrap.o(i._GetCharWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _GetCharWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[355e284]"></a>_GetWordWrap</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, gui__wrap.o(i._GetWordWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _GetWordWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3baf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3182d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[355e20c]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__wrap.o(i._WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[31866bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[34ff7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[355de10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[3669e34]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3669c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3669ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[3669df8]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3669ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[3669d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[3668d90]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3668bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[3668d54]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3668cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[3666ea0]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
